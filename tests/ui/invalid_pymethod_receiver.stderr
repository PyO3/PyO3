error[E0277]: `i32` is not a valid receiver type for pyo3 methods
 --> tests/ui/invalid_pymethod_receiver.rs:8:43
  |
8 |     fn method_with_invalid_self_type(slf: i32, py: Python<'_>, index: u32) {}
  |                                           ^^^ the trait `pyo3::pycell::Receiver<&PyCell<MyClass>>` is not implemented for `i32`
  |
  = note: Only `&self`, `&mut self`, `&PyCell<Self>, `&PyRef<'_, Self> and `&PyRefMut<'_, Self> are valid receiver types
  = help: the following other types implement trait `pyo3::pycell::Receiver<T>`:
            &'a PyCell<T>
            PyRef<'a, T>
            PyRefMut<'a, T>

error[E0271]: type mismatch resolving `<MyClass2 as PyClass>::Frozen == False`
   --> tests/ui/invalid_pymethod_receiver.rs:14:1
    |
14  | #[pymethods]
    | ^^^^^^^^^^^^ expected struct `False`, found struct `True`
    |
note: required by a bound in `PyCell::<T>::try_borrow_mut`
   --> src/pycell.rs
    |
    |         T: PyClass<Frozen = False>,
    |                    ^^^^^^^^^^^^^^ required by this bound in `PyCell::<T>::try_borrow_mut`
    = note: this error originates in the attribute macro `pymethods` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0614]: type `PyRefMut<'_, MyClass2>` cannot be dereferenced
  --> tests/ui/invalid_pymethod_receiver.rs:14:1
   |
14 | #[pymethods]
   | ^^^^^^^^^^^^
   |
   = note: this error originates in the attribute macro `pymethods` (in Nightly builds, run with -Z macro-backtrace for more info)
