error: enums can't be inherited by other classes
 --> tests/ui/invalid_pyclass_enum.rs:3:11
  |
3 | #[pyclass(subclass)]
  |           ^^^^^^^^

error: enums can't extend from other classes
 --> tests/ui/invalid_pyclass_enum.rs:9:11
  |
9 | #[pyclass(extends = PyList)]
  |           ^^^^^^^

error: #[pyclass] can't be used on enums without any variants
  --> tests/ui/invalid_pyclass_enum.rs:16:18
   |
16 | enum NoEmptyEnum {}
   |                  ^^

error: Unit variant `UnitVariant` is not yet supported in a complex enum
       = help: change to an empty tuple variant instead: `UnitVariant()`
       = note: the enum is complex because of non-unit variant `StructVariant`
  --> tests/ui/invalid_pyclass_enum.rs:21:5
   |
21 |     UnitVariant,
   |     ^^^^^^^^^^^

error: `constructor` can't be used on a simple enum variant
  --> tests/ui/invalid_pyclass_enum.rs:26:12
   |
26 |     #[pyo3(constructor = (a, b))]
   |            ^^^^^^^^^^^

error[E0369]: binary operation `==` cannot be applied to type `&InvalidOrderedComplexEnum`
  --> tests/ui/invalid_pyclass_enum.rs:31:1
   |
31 | #[pyclass(ord)]
   | ^^^^^^^^^^^^^^^
   |
note: an implementation of `PartialEq` might be missing for `InvalidOrderedComplexEnum`
  --> tests/ui/invalid_pyclass_enum.rs:32:1
   |
32 | enum InvalidOrderedComplexEnum {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ must implement `PartialEq`
   = note: this error originates in the attribute macro `pyclass` (in Nightly builds, run with -Z macro-backtrace for more info)
help: consider annotating `InvalidOrderedComplexEnum` with `#[derive(PartialEq)]`
   |
32 + #[derive(PartialEq)]
33 | enum InvalidOrderedComplexEnum {
   |

error[E0369]: binary operation `!=` cannot be applied to type `&InvalidOrderedComplexEnum`
  --> tests/ui/invalid_pyclass_enum.rs:31:1
   |
31 | #[pyclass(ord)]
   | ^^^^^^^^^^^^^^^
   |
note: an implementation of `PartialEq` might be missing for `InvalidOrderedComplexEnum`
  --> tests/ui/invalid_pyclass_enum.rs:32:1
   |
32 | enum InvalidOrderedComplexEnum {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ must implement `PartialEq`
   = note: this error originates in the attribute macro `pyclass` (in Nightly builds, run with -Z macro-backtrace for more info)
help: consider annotating `InvalidOrderedComplexEnum` with `#[derive(PartialEq)]`
   |
32 + #[derive(PartialEq)]
33 | enum InvalidOrderedComplexEnum {
   |

error[E0369]: binary operation `>` cannot be applied to type `&InvalidOrderedComplexEnum`
  --> tests/ui/invalid_pyclass_enum.rs:31:1
   |
31 | #[pyclass(ord)]
   | ^^^^^^^^^^^^^^^
   |
note: an implementation of `PartialOrd` might be missing for `InvalidOrderedComplexEnum`
  --> tests/ui/invalid_pyclass_enum.rs:32:1
   |
32 | enum InvalidOrderedComplexEnum {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ must implement `PartialOrd`
   = note: this error originates in the attribute macro `pyclass` (in Nightly builds, run with -Z macro-backtrace for more info)
help: consider annotating `InvalidOrderedComplexEnum` with `#[derive(PartialEq, PartialOrd)]`
   |
32 + #[derive(PartialEq, PartialOrd)]
33 | enum InvalidOrderedComplexEnum {
   |

error[E0369]: binary operation `<` cannot be applied to type `&InvalidOrderedComplexEnum`
  --> tests/ui/invalid_pyclass_enum.rs:31:1
   |
31 | #[pyclass(ord)]
   | ^^^^^^^^^^^^^^^
   |
note: an implementation of `PartialOrd` might be missing for `InvalidOrderedComplexEnum`
  --> tests/ui/invalid_pyclass_enum.rs:32:1
   |
32 | enum InvalidOrderedComplexEnum {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ must implement `PartialOrd`
   = note: this error originates in the attribute macro `pyclass` (in Nightly builds, run with -Z macro-backtrace for more info)
help: consider annotating `InvalidOrderedComplexEnum` with `#[derive(PartialEq, PartialOrd)]`
   |
32 + #[derive(PartialEq, PartialOrd)]
33 | enum InvalidOrderedComplexEnum {
   |

error[E0369]: binary operation `<=` cannot be applied to type `&InvalidOrderedComplexEnum`
  --> tests/ui/invalid_pyclass_enum.rs:31:1
   |
31 | #[pyclass(ord)]
   | ^^^^^^^^^^^^^^^
   |
note: an implementation of `PartialOrd` might be missing for `InvalidOrderedComplexEnum`
  --> tests/ui/invalid_pyclass_enum.rs:32:1
   |
32 | enum InvalidOrderedComplexEnum {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ must implement `PartialOrd`
   = note: this error originates in the attribute macro `pyclass` (in Nightly builds, run with -Z macro-backtrace for more info)
help: consider annotating `InvalidOrderedComplexEnum` with `#[derive(PartialEq, PartialOrd)]`
   |
32 + #[derive(PartialEq, PartialOrd)]
33 | enum InvalidOrderedComplexEnum {
   |

error[E0369]: binary operation `>=` cannot be applied to type `&InvalidOrderedComplexEnum`
  --> tests/ui/invalid_pyclass_enum.rs:31:1
   |
31 | #[pyclass(ord)]
   | ^^^^^^^^^^^^^^^
   |
note: an implementation of `PartialOrd` might be missing for `InvalidOrderedComplexEnum`
  --> tests/ui/invalid_pyclass_enum.rs:32:1
   |
32 | enum InvalidOrderedComplexEnum {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ must implement `PartialOrd`
   = note: this error originates in the attribute macro `pyclass` (in Nightly builds, run with -Z macro-backtrace for more info)
help: consider annotating `InvalidOrderedComplexEnum` with `#[derive(PartialEq, PartialOrd)]`
   |
32 + #[derive(PartialEq, PartialOrd)]
33 | enum InvalidOrderedComplexEnum {
   |
