    Finished test [unoptimized + debuginfo] target(s) in 0.04s
     Running unittests src/lib.rs (target/debug/deps/pyo3_build_config-82aecb79fb7ba2c3)

running 31 tests
test impl_::tests::build_flags_fixup_py37_debug ... ok
test impl_::tests::config_from_empty_sysconfigdata ... ok
test impl_::tests::abi3_version_cannot_be_higher_than_interpreter ... ok
test impl_::tests::build_flags_default ... ok
test impl_::tests::config_from_sysconfigdata_framework ... ok
test impl_::tests::build_flags_from_sysconfigdata ... ok
test impl_::tests::config_from_sysconfigdata ... ok
test errors::tests::error_report ... ok
test impl_::tests::build_flags_fixup_py38_debug ... ok
test impl_::tests::default_lib_name_unix ... ok
test impl_::tests::default_lib_name_windows ... ok
test impl_::tests::interpreter_version_reduced_to_abi3 ... ok
test impl_::tests::mingw_hardcoded_cross_compile ... ok
test impl_::tests::parse_cross_python_version ... ok
test impl_::tests::parse_script_output ... ok
test impl_::tests::pypy_hardcoded_cross_compile ... ok
test impl_::tests::test_conda_env_interpreter ... ok
test impl_::tests::test_config_file_defaults ... ok
test impl_::tests::test_config_file_roundtrip ... ok
test impl_::tests::test_config_file_roundtrip_with_escaping ... ok
test impl_::tests::test_config_file_unknown_keys ... ok
test impl_::tests::test_not_cross_compiling_from_to ... ok
test impl_::tests::test_venv_interpreter ... ok
test impl_::tests::unix_hardcoded_abi3_compile ... ok
test impl_::tests::unix_hardcoded_cross_compile ... ok
test impl_::tests::windows_hardcoded_abi3_compile ... ok
test impl_::tests::windows_hardcoded_cross_compile ... ok
test tests::extension_module_link_args ... ok
test impl_::tests::config_from_interpreter ... ok
test impl_::tests::test_run_python_script_with_envs ... ok
test impl_::tests::test_run_python_script ... ok

test result: ok. 31 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.06s

   Doc-tests pyo3-build-config

running 1 test
test pyo3-build-config/src/impl_.rs - impl_::BuildFlags (line 986) ... ok

test result: ok. 1 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.28s

   Compiling pyo3-macros-backend v0.19.1 (/Users/vidurmodgil/Desktop/Data/pyo3/pyo3-macros-backend)
warning: unreachable statement
  --> pyo3-macros-backend/src/intopydict.rs:53:17
   |
52 |                 panic!("{:?}", map);
   |                 ------------------- any code following this expression is unreachable
53 |                 return map;
   |                 ^^^^^^^^^^^ unreachable statement
   |
   = note: `#[warn(unreachable_code)]` on by default

warning: `pyo3-macros-backend` (lib test) generated 1 warning
warning: `pyo3-macros-backend` (lib) generated 1 warning (1 duplicate)
    Finished test [unoptimized + debuginfo] target(s) in 0.83s
     Running unittests src/lib.rs (target/debug/deps/pyo3_macros_backend-e895ea4cfb866f5d)

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

   Doc-tests pyo3-macros-backend

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

   Compiling pyo3-macros-backend v0.19.1 (/Users/vidurmodgil/Desktop/Data/pyo3/pyo3-macros-backend)
warning: unreachable statement
  --> pyo3-macros-backend/src/intopydict.rs:53:17
   |
52 |                 panic!("{:?}", map);
   |                 ------------------- any code following this expression is unreachable
53 |                 return map;
   |                 ^^^^^^^^^^^ unreachable statement
   |
   = note: `#[warn(unreachable_code)]` on by default

warning: `pyo3-macros-backend` (lib) generated 1 warning
   Compiling pyo3-macros v0.19.1 (/Users/vidurmodgil/Desktop/Data/pyo3/pyo3-macros)
    Finished test [unoptimized + debuginfo] target(s) in 0.86s
     Running unittests src/lib.rs (target/debug/deps/pyo3_macros-2fc519b405741b6f)

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

   Doc-tests pyo3-macros

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

    Finished test [unoptimized + debuginfo] target(s) in 0.03s
     Running unittests src/lib.rs (target/debug/deps/pyo3_ffi-1b6cc3fa1c158282)

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

   Doc-tests pyo3-ffi

running 1 test
test pyo3-ffi/src/lib.rs - (line 83) ... ok

test result: ok. 1 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.17s

warning: unreachable statement
  --> pyo3-macros-backend/src/intopydict.rs:53:17
   |
52 |                 panic!("{:?}", map);
   |                 ------------------- any code following this expression is unreachable
53 |                 return map;
   |                 ^^^^^^^^^^^ unreachable statement
   |
   = note: `#[warn(unreachable_code)]` on by default

warning: `pyo3-macros-backend` (lib) generated 1 warning
   Compiling pyo3 v0.19.1 (/Users/vidurmodgil/Desktop/Data/pyo3)
    Finished test [unoptimized + debuginfo] target(s) in 4.12s
     Running unittests src/lib.rs (target/debug/deps/pyo3-692200c9e4b0b789)

running 549 tests
test buffer::tests::test_compatible_size ... ok
test buffer::tests::test_element_type_from_format ... ok
test conversions::std::array::tests::array_try_from_fn ... ok
test buffer::tests::test_bytes_buffer ... ok
test conversion::tests::test_try_from_exact ... ok
test conversion::tests::test_try_from ... ok
test conversions::std::array::tests::test_extract_small_bytearray_to_array ... ok
test conversions::std::array::tests::test_extract_bytearray_to_array ... ok
test conversions::std::array::tests::test_extract_non_iterable_to_array ... ok
test conversion::tests::test_try_from_unchecked ... ok
test buffer::tests::test_debug ... ok
test conversions::std::array::tests::test_extract_invalid_sequence_length ... ok
test conversion::tests::test_option_as_ptr ... ok
test conversions::std::array::tests::test_intopy_array_conversion ... ok
test conversions::std::array::tests::test_pyclass_intopy_array_conversion ... ok
test conversions::std::array::tests::test_topyobject_array_conversion ... ok
test conversions::std::num::test_128bit_integers::test_i128_min ... ok
test conversions::std::map::tests::test_btreemap_to_python ... ok
test conversions::std::map::tests::test_hashmap_into_python ... ok
test conversions::std::map::tests::test_hashmap_to_python ... ok
test conversions::std::num::test_128bit_integers::test_nonzero_i128_max ... ok
test conversions::std::ipaddr::test_ipaddr::test_from_pystring ... ok
test conversions::std::map::tests::test_btreemap_into_py ... ok
test conversions::std::num::test_128bit_integers::test_i128_overflow ... ok
test conversions::std::num::test_128bit_integers::test_i128_max ... ok
test conversions::std::num::test_128bit_integers::test_nonzero_i128_min ... ok
test conversions::std::num::test_128bit_integers::test_nonzero_i128_overflow ... ok
test conversions::std::num::test_128bit_integers::test_nonzero_i128_zero_value ... ok
test conversions::std::num::test_128bit_integers::test_nonzero_u128_max ... ok
test conversions::std::num::test_128bit_integers::test_nonzero_u128_overflow ... ok
test conversions::std::num::test_128bit_integers::test_nonzero_u128_zero_value ... ok
test conversions::std::num::test_128bit_integers::test_u128_max ... ok
test conversions::std::num::test_128bit_integers::test_u128_overflow ... ok
test conversions::std::num::tests::i128::from_py_float_type_error ... ok
test conversions::std::num::tests::i128::from_py_string_type_error ... ok
test conversions::std::num::tests::i128::to_py_object_and_back ... ok
test conversions::std::num::tests::i16::from_py_float_type_error ... ok
test conversions::std::num::tests::i16::from_py_string_type_error ... ok
test conversions::std::num::tests::i16::to_py_object_and_back ... ok
test conversions::std::num::tests::i32::from_py_string_type_error ... ok
test conversions::std::num::tests::i32::from_py_float_type_error ... ok
test conversions::std::num::tests::i64::to_py_object_and_back ... ok
test conversions::std::num::tests::i32::to_py_object_and_back ... ok
test conversions::std::num::tests::i64::from_py_float_type_error ... ok
test conversions::std::num::tests::i64::from_py_string_type_error ... ok
test conversions::std::num::tests::i8::from_py_float_type_error ... ok
test conversions::std::num::tests::isize::from_py_string_type_error ... ok
test conversions::std::num::tests::isize::from_py_float_type_error ... ok
test conversions::std::num::tests::i8::from_py_string_type_error ... ok
test conversions::std::num::tests::i8::to_py_object_and_back ... ok
test conversions::std::num::tests::nonzero_i128::to_py_object_and_back ... ok
test conversions::std::num::tests::nonzero_i128::from_py_float_type_error ... ok
test conversions::std::num::tests::nonzero_i128::from_py_string_type_error ... ok
test conversions::std::num::tests::isize::to_py_object_and_back ... ok
test conversions::std::num::tests::nonzero_i16::from_py_string_type_error ... ok
test conversions::std::num::tests::nonzero_i16::to_py_object_and_back ... ok
test conversions::std::num::tests::nonzero_i32::from_py_float_type_error ... ok
test conversions::std::num::tests::nonzero_i16::from_py_float_type_error ... ok
test conversions::std::num::tests::nonzero_i32::to_py_object_and_back ... ok
test conversions::std::num::tests::nonzero_i64::from_py_float_type_error ... ok
test conversions::std::num::tests::nonzero_i64::from_py_string_type_error ... ok
test conversions::std::num::tests::nonzero_i32::from_py_string_type_error ... ok
test conversions::std::num::tests::nonzero_i64::to_py_object_and_back ... ok
test conversions::std::num::tests::nonzero_i8::from_py_float_type_error ... ok
test conversions::std::num::tests::nonzero_i8::from_py_string_type_error ... ok
test conversions::std::num::tests::nonzero_isize::from_py_string_type_error ... ok
test conversions::std::num::tests::nonzero_i8::to_py_object_and_back ... ok
test conversions::std::num::tests::nonzero_u128::from_py_float_type_error ... ok
test conversions::std::num::tests::nonzero_isize::from_py_float_type_error ... ok
test conversions::std::num::tests::nonzero_u128::to_py_object_and_back ... ok
test conversions::std::num::tests::nonzero_isize::to_py_object_and_back ... ok
test conversions::std::num::tests::nonzero_u16::from_py_float_type_error ... ok
test conversions::std::num::tests::nonzero_u128::from_py_string_type_error ... ok
test conversions::std::num::tests::nonzero_u16::from_py_string_type_error ... ok
test conversions::std::num::tests::nonzero_u16::to_py_object_and_back ... ok
test conversions::std::num::tests::nonzero_u32::from_py_float_type_error ... ok
test conversions::std::num::tests::nonzero_u32::from_py_string_type_error ... ok
test conversions::std::num::tests::nonzero_u32::to_py_object_and_back ... ok
test conversions::std::num::tests::nonzero_u64::from_py_float_type_error ... ok
test conversions::std::num::tests::nonzero_u64::to_py_object_and_back ... ok
test conversions::std::num::tests::nonzero_u8::from_py_float_type_error ... ok
test conversions::std::num::tests::nonzero_u8::from_py_string_type_error ... ok
test conversions::std::num::tests::nonzero_u64::from_py_string_type_error ... ok
test conversions::std::num::tests::nonzero_u8::to_py_object_and_back ... ok
test conversions::std::num::tests::test_i64_max ... ok
test conversions::std::num::tests::nonzero_usize::from_py_string_type_error ... ok
test conversions::std::num::tests::nonzero_usize::to_py_object_and_back ... ok
test conversions::std::num::tests::nonzero_usize::from_py_float_type_error ... ok
test conversions::std::num::tests::test_i64_min ... ok
test conversions::std::num::tests::test_nonzero_u32_max ... ok
test conversions::std::num::tests::test_u32_max ... ok
test conversions::std::num::tests::test_nonzero_i64_min ... ok
test conversions::std::num::tests::test_nonzero_u64_max ... ok
test conversions::std::num::tests::test_nonzero_i64_max ... ok
test conversions::std::num::tests::test_u64_max ... ok
test conversions::std::num::tests::u128::to_py_object_and_back ... ok
test conversions::std::num::tests::u128::from_py_float_type_error ... ok
test conversions::std::ipaddr::test_ipaddr::test_roundtrip ... ok
test conversions::std::num::tests::u16::from_py_float_type_error ... ok
test conversions::std::num::tests::u16::from_py_string_type_error ... ok
test conversions::std::num::tests::u32::from_py_float_type_error ... ok
test conversions::std::num::tests::u128::from_py_string_type_error ... ok
test conversions::std::num::tests::u16::to_py_object_and_back ... ok
test conversions::std::num::tests::u32::from_py_string_type_error ... ok
test conversions::std::num::tests::u32::to_py_object_and_back ... ok
test conversions::std::num::tests::u64::from_py_float_type_error ... ok
test conversions::std::num::tests::u64::from_py_string_type_error ... ok
test conversions::std::num::tests::u8::to_py_object_and_back ... ok
test conversions::std::num::tests::u64::to_py_object_and_back ... ok
test conversions::std::num::tests::u8::from_py_float_type_error ... ok
test conversions::std::num::tests::u8::from_py_string_type_error ... ok
test conversions::std::num::tests::usize::from_py_string_type_error ... ok
test conversions::std::num::tests::usize::to_py_object_and_back ... ok
test conversions::std::num::tests::usize::from_py_float_type_error ... ok
test conversions::std::osstr::tests::test_intopy_roundtrip ... ok
test conversions::std::osstr::tests::test_non_utf8_conversion ... ok
test conversions::std::osstr::tests::test_topyobject_roundtrip ... ok
test conversions::std::path::tests::test_non_utf8_conversion ... ok
test conversions::std::path::tests::test_topyobject_roundtrip ... ok
test conversions::std::set::tests::test_set_into_py ... ok
test conversions::std::path::tests::test_intopy_roundtrip ... ok
test buffer::tests::test_array_buffer ... ok
test conversions::std::set::tests::test_extract_btreeset ... ok
test conversions::std::string::tests::test_cow_into_py ... ok
test conversions::std::set::tests::test_extract_hashset ... ok
test conversions::std::string::tests::test_extract_char_err ... ok
test conversions::std::set::tests::test_set_to_object ... ok
test conversions::std::string::tests::test_non_bmp ... ok
test conversions::std::string::tests::test_extract_char ... ok
test conversions::std::string::tests::test_string_into_py ... ok
test conversions::std::slice::tests::test_extract_bytes ... ok
test conversions::std::string::tests::test_cow_to_object ... ok
pyo3_runtime.PanicException: new panic
test err::tests::err_display ... ok
test conversions::std::string::tests::test_extract_str ... ok
test err::tests::invalid_error_type ... ok
test err::tests::fetching_normalized_panic_exception_resumes_unwind - should panic ... ok
test err::tests::err_debug ... ok
pyo3_runtime.PanicException: new panic
test err::tests::no_error ... ok
test err::tests::fetching_panic_exception_resumes_unwind - should panic ... ok
test err::tests::set_typeerror ... ok
test err::tests::set_valueerror ... ok
test err::tests::test_pyerr_send_sync ... ok
test err::tests::test_pyerr_matches ... ok
test err::tests::test_pyerr_cause ... ok
test err::impls::tests::io_errors ... ok
test err::tests::warnings ... ok
test conversions::std::num::test_128bit_integers::test_i128_roundtrip ... ok
test conversions::std::num::test_128bit_integers::test_nonzero_i128_roundtrip ... ok
test conversions::std::num::test_128bit_integers::test_nonzero_u128_roundtrip ... ok
test conversions::std::num::test_128bit_integers::test_u128_roundtrip ... ok
test exceptions::socket::tests::gaierror ... ok
test exceptions::socket::tests::herror ... ok
test exceptions::socket::tests::timeout ... ok
test exceptions::tests::PyArithmeticError ... ok
test exceptions::tests::PyAssertionError ... ok
test exceptions::tests::PyAttributeError ... ok
test exceptions::tests::PyBaseException ... ok
test exceptions::tests::PyBaseExceptionGroup ... ok
test exceptions::tests::PyBlockingIOError ... ok
test exceptions::tests::PyBrokenPipeError ... ok
test exceptions::tests::PyBufferError ... ok
test exceptions::tests::PyBytesWarning ... ok
test exceptions::tests::PyChildProcessError ... ok
test exceptions::tests::PyConnectionAbortedError ... ok
test exceptions::tests::PyConnectionError ... ok
test exceptions::tests::PyConnectionRefusedError ... ok
test exceptions::tests::PyConnectionResetError ... ok
test exceptions::tests::PyDeprecationWarning ... ok
test exceptions::tests::PyEOFError ... ok
test exceptions::tests::PyEncodingWarning ... ok
test exceptions::tests::PyEnvironmentError ... ok
test exceptions::tests::PyException ... ok
test exceptions::tests::PyFileExistsError ... ok
test exceptions::tests::PyFileNotFoundError ... ok
test exceptions::tests::PyFloatingPointError ... ok
test exceptions::tests::PyFutureWarning ... ok
test exceptions::tests::PyGeneratorExit ... ok
test exceptions::tests::PyIOError ... ok
test exceptions::tests::PyImportError ... ok
test exceptions::tests::PyImportWarning ... ok
test exceptions::tests::PyIndexError ... ok
test exceptions::tests::PyInterruptedError ... ok
test exceptions::tests::PyIsADirectoryError ... ok
test exceptions::tests::PyKeyError ... ok
test exceptions::tests::PyKeyboardInterrupt ... ok
test exceptions::tests::PyLookupError ... ok
test exceptions::tests::PyMemoryError ... ok
test exceptions::tests::PyModuleNotFoundError ... ok
test exceptions::tests::PyNameError ... ok
test exceptions::tests::PyNotADirectoryError ... ok
test exceptions::tests::PyNotImplementedError ... ok
test exceptions::tests::PyOSError ... ok
test exceptions::tests::PyOverflowError ... ok
test exceptions::tests::PyPendingDeprecationWarning ... ok
test exceptions::tests::PyPermissionError ... ok
test exceptions::tests::PyProcessLookupError ... ok
test exceptions::tests::PyRecursionError ... ok
test exceptions::tests::PyReferenceError ... ok
test exceptions::tests::PyRuntimeError ... ok
test exceptions::tests::PyRuntimeWarning ... ok
test exceptions::tests::PyStopAsyncIteration ... ok
test exceptions::tests::PyStopIteration ... ok
test exceptions::tests::PySyntaxError ... ok
test exceptions::tests::PySyntaxWarning ... ok
test exceptions::tests::PySystemError ... ok
test exceptions::tests::PySystemExit ... ok
test exceptions::tests::PyTimeoutError ... ok
test exceptions::tests::PyTypeError ... ok
test exceptions::tests::PyUnboundLocalError ... ok
test exceptions::tests::PyUnicodeDecodeError ... ok
test exceptions::tests::PyUnicodeEncodeError ... ok
test exceptions::tests::PyUnicodeError ... ok
test exceptions::tests::PyUnicodeTranslateError ... ok
test exceptions::tests::PyUnicodeWarning ... ok
test exceptions::tests::PyUserWarning ... ok
test exceptions::tests::PyValueError ... ok
test exceptions::tests::PyWarning ... ok
test exceptions::tests::PyZeroDivisionError ... ok
test exceptions::tests::custom_exception ... ok
test exceptions::tests::custom_exception_doc ... ok
test exceptions::tests::custom_exception_doc_expr ... ok
test exceptions::tests::custom_exception_dotted_module ... ok
test exceptions::tests::native_exception_chain ... ok
test exceptions::tests::native_exception_debug ... ok
test exceptions::tests::native_exception_display ... ok
test exceptions::tests::unicode_decode_error ... ok
test exceptions::tests::test_check_exception ... ok
test ffi::tests::ascii ... ok
test ffi::tests::ascii_object_bitfield ... ok
test ffi::tests::test_date_fromtimestamp ... ok
test ffi::tests::test_get_tzinfo ... ok
test ffi::tests::test_timezone_from_offset ... ok
test ffi::tests::test_timezone_from_offset_and_name ... ok
test ffi::tests::test_utc_timezone ... ok
test ffi::tests::ucs4 ... ok
test ffi::tests::test_datetime_fromtimestamp ... ok
test gil::tests::dropping_gil_does_not_invalidate_references ... ok
test gil::tests::test_allow_threads ... ok
test gil::tests::test_allow_threads_updates_refcounts ... ok
test gil::tests::test_clone_in_other_thread ... ok
test gil::tests::test_clone_with_gil ... ok
test gil::tests::test_clone_without_gil ... ok
test gil::tests::test_gil_counts ... ok
test gil::tests::test_owned ... ok
test gil::tests::test_owned_nested ... ok
test gil::tests::test_pyobject_drop_with_gil_decreases_refcnt ... ok
test gil::tests::test_pyobject_drop_without_gil_doesnt_decrease_refcnt ... ok
test gil::tests::test_update_counts_does_not_deadlock ... ok
test exceptions::tests::test_check_exception_nested ... ok
test impl_::extract_argument::tests::keyword_not_string ... ok
test impl_::extract_argument::tests::push_parameter_list_empty ... ok
test impl_::extract_argument::tests::missing_required_arguments ... ok
test impl_::extract_argument::tests::push_parameter_list_four ... ok
test impl_::extract_argument::tests::push_parameter_list_one ... ok
test impl_::extract_argument::tests::push_parameter_list_three ... ok
test impl_::extract_argument::tests::push_parameter_list_two ... ok
test impl_::extract_argument::tests::unexpected_keyword_argument ... ok
test impl_::pymodule::tests::module_def_new ... ok
test impl_::pymodule::tests::module_init ... ok
test instance::tests::invalid_attr ... ok
test instance::tests::py_from_dict ... ok
test instance::tests::attr ... ok
test instance::tests::pyobject_from_py ... ok
test instance::tests::pystring_attr ... ok
test instance::tests::test_call0 ... ok
test instance::tests::test_call_for_non_existing_method ... ok
test instance::tests::test_is_ellipsis ... ok
test instance::tests::using_macros::instance_borrow_methods ... ok
test marker::tests::test_acquire_gil ... ok
test marker::tests::test_allow_threads_pass_stuff_in ... ok
test marker::tests::test_allow_threads_panics_safely ... ok
test marker::tests::test_allow_threads_releases_and_acquires_gil ... ok
test marker::tests::test_ellipsis ... ok
test marker::tests::test_eval ... ok
test marshal::tests::marshal_roundtrip ... ok
test pycell::impl_::tests::test_inherited_mutability ... ok
test pycell::impl_::tests::test_immutable_borrows_prevent_mutable_borrows ... ok
test pycell::impl_::tests::test_mutable_borrow_prevents_further_borrows ... ok
test pycell::tests::pycell_replace ... ok
test pycell::tests::pycell_replace_panic - should panic ... ok
test pycell::tests::pycell_replace_with ... ok
test pycell::tests::pycell_replace_with_panic - should panic ... ok
test pycell::tests::pycell_swap ... ok
test pyclass::tests::test_compare_op_matches ... ok
test pycell::tests::pycell_swap_panic - should panic ... ok
test pycell::tests::pycell_swap_panic_other_borrowed - should panic ... ok
test sync::tests::test_intern ... ok
test sync::tests::test_once_cell ... ok
test test_hygiene::pyfunction::invoke_wrap_pyfunction ... ok
test types::any::tests::test_any_contains ... ok
test types::any::tests::test_any_is_exact_instance ... ok
test types::any::tests::test_any_is_exact_instance_of ... ok
test types::any::tests::test_any_is_instance ... ok
test types::any::tests::test_any_is_instance_of ... ok
test types::any::tests::test_call_for_non_existing_method ... ok
test types::any::tests::test_call_with_kwargs ... ok
test types::any::tests::test_dir ... ok
test types::any::tests::test_call_method0 ... ok
test types::any::tests::test_eq_methods_bools ... ok
test types::any::tests::test_eq_methods_floats ... ok
test types::any::tests::test_eq_methods_integers ... ok
test types::any::tests::test_eq_methods_strings ... ok
test types::any::tests::test_hasattr ... ok
test types::any::tests::test_hasattr_error ... ok
test types::any::tests::test_is_ellipsis ... ok
test types::any::tests::test_nan_eq ... ok
test types::any::tests::test_type ... ok
test types::any::tests::test_lookup_special ... ok
test types::boolobject::tests::test_false ... ok
test types::boolobject::tests::test_true ... ok
test types::bytearray::tests::test_as_bytes ... ok
test types::bytearray::tests::test_as_bytes_mut ... ok
test types::bytearray::tests::test_byte_array_new_with ... ok
test types::bytearray::tests::test_byte_array_new_with_error ... ok
test types::bytearray::tests::test_byte_array_new_with_zero_initialised ... ok
test types::bytearray::tests::test_from ... ok
test types::bytearray::tests::test_from_err ... ok
test types::bytearray::tests::test_len ... ok
test types::bytearray::tests::test_resize ... ok
test types::bytearray::tests::test_to_vec ... ok
test types::bytes::tests::test_bytes_index ... ok
test types::bytes::tests::test_bytes_new_with ... ok
test types::bytes::tests::test_bytes_new_with_error ... ok
test types::bytes::tests::test_bytes_new_with_zero_initialised ... ok
test types::bytes::tests::test_cow_impl ... ok
test types::capsule::tests::test_pycapsule_context ... ok
test types::capsule::tests::test_pycapsule_destructor ... ok
test types::capsule::tests::test_pycapsule_func ... ok
test types::capsule::tests::test_pycapsule_import ... ok
test types::capsule::tests::test_pycapsule_no_name ... ok
test types::capsule::tests::test_pycapsule_struct ... ok
test types::capsule::tests::test_vec_context ... ok
test types::capsule::tests::test_vec_storage ... ok
test types::complex::not_limited_impls::tests::test_abs ... ok
test types::complex::not_limited_impls::tests::test_add ... ok
test types::complex::not_limited_impls::tests::test_div ... ok
test types::complex::not_limited_impls::tests::test_mul ... ok
test types::complex::not_limited_impls::tests::test_neg ... ok
test types::complex::not_limited_impls::tests::test_pow ... ok
test types::complex::not_limited_impls::tests::test_sub ... ok
test types::datetime::tests::test_date_fromtimestamp ... ok
test types::complex::tests::test_from_double ... ok
test types::datetime::tests::test_datetime_fromtimestamp ... ok
test types::datetime::tests::test_get_tzinfo ... ok
test types::datetime::tests::test_new_with_fold ... ok
test types::dict::tests::dict_as_mapping ... ok
test types::dict::tests::dict_items_view ... ok
test types::dict::tests::dict_keys_view ... ok
test types::dict::tests::dict_update ... ok
test types::dict::tests::dict_update_if_missing ... ok
test types::dict::tests::dict_values_view ... ok
test types::dict::tests::test_btreemap_into_dict ... ok
test types::dict::tests::test_contains ... ok
test types::dict::tests::test_copy ... ok
test types::dict::tests::test_del_item ... ok
test types::dict::tests::test_del_item_does_not_update_original_object ... ok
test types::dict::tests::test_from_sequence ... ok
test types::dict::tests::test_from_sequence_err ... ok
test types::dict::tests::test_get_item ... ok
test types::dict::tests::test_get_item_with_error ... ok
test types::dict::tests::test_hashmap_into_dict ... ok
test types::dict::tests::test_into_iter ... ok
test types::dict::tests::test_items ... ok
test types::dict::tests::test_iter ... ok
test types::dict::tests::test_iter_key_mutated - should panic ... ok
test types::dict::tests::test_iter_size_hint ... ok
test types::dict::tests::test_iter_key_mutated_constant_len - should panic ... ok
test types::dict::tests::test_iter_value_mutated ... ok
test types::dict::tests::test_keys ... ok
test types::dict::tests::test_len ... ok
test types::dict::tests::test_new ... ok
test types::dict::tests::test_set_item ... ok
test types::dict::tests::test_set_item_does_not_update_original_object ... ok
test types::dict::tests::test_set_item_refcnt ... ok
test types::dict::tests::test_slice_into_dict ... ok
test types::dict::tests::test_values ... ok
test types::dict::tests::test_vec_into_dict ... ok
test types::floatob::tests::int_to_float ... ok
test types::floatob::tests::test_as_double_macro ... ok
test types::floatob::tests::to_from_f32 ... ok
test types::floatob::tests::to_from_f64 ... ok
test types::frozenset::tests::test_frozenset_builder ... ok
test types::frozenset::tests::test_frozenset_contains ... ok
test types::frozenset::tests::test_frozenset_empty ... ok
test types::frozenset::tests::test_frozenset_iter ... ok
test types::frozenset::tests::test_frozenset_new_and_len ... ok
test types::iterator::tests::fibonacci_generator ... ok
test types::iterator::tests::int_not_iterable ... ok
test types::iterator::tests::iter_item_refcnt ... ok
test types::iterator::tests::iter_refcnt ... ok
test types::iterator::tests::iterator_try_from ... ok
test types::iterator::tests::length_hint_becomes_size_hint_lower_bound ... ok
test types::iterator::tests::python_class_iterator ... ok
test types::iterator::tests::python_class_not_iterator ... ok
test types::iterator::tests::test_as_ref ... ok
test types::iterator::tests::test_into_ref ... ok
test types::iterator::tests::vec_iter ... ok
test types::list::tests::bad_clone_mem_leaks ... ok
test types::list::tests::overflowing_size - should panic ... ok
test types::list::tests::test_append ... ok
test types::list::tests::test_append_refcnt ... ok
test types::list::tests::test_array_into_py ... ok
test types::list::tests::test_extract ... ok
test types::list::tests::test_get_item ... ok
test types::list::tests::test_get_slice ... ok
test types::list::tests::test_insert ... ok
test types::list::tests::test_insert_refcnt ... ok
test types::list::tests::test_into_iter ... ok
test types::list::tests::test_iter ... ok
test types::list::tests::test_iter_size_hint ... ok
test types::list::tests::test_len ... ok
test types::list::tests::test_list_contains ... ok
test types::list::tests::test_list_del_item ... ok
test types::list::tests::test_list_del_slice ... ok
test types::list::tests::test_list_get_item_invalid_index ... ok
test types::list::tests::test_list_get_item_sanity ... ok
test types::list::tests::test_list_get_item_unchecked_sanity ... ok
test types::list::tests::test_list_index ... ok
test types::list::tests::test_list_index_trait ... ok
test types::list::tests::test_list_index_trait_panic - should panic ... ok
test types::list::tests::test_list_index_trait_range_from_panic - should panic ... ok
test types::list::tests::test_list_index_trait_range_panic_end - should panic ... ok
test types::list::tests::test_list_index_trait_range_panic_start - should panic ... ok
test types::list::tests::test_list_index_trait_range_panic_wrong_order - should panic ... ok
test types::list::tests::test_list_index_trait_ranges ... ok
test types::list::tests::test_list_set_slice ... ok
test types::list::tests::test_list_to_tuple ... ok
test types::list::tests::test_new ... ok
test types::list::tests::test_reverse ... ok
test types::list::tests::test_set_item ... ok
test types::list::tests::test_set_item_refcnt ... ok
test types::list::tests::test_sort ... ok
test types::list::tests::too_long_iterator - should panic ... ok
test types::mapping::tests::test_as_ref ... ok
test types::list::tests::too_short_iterator - should panic ... ok
test types::mapping::tests::test_contains ... ok
test types::mapping::tests::test_del_item ... ok
test types::mapping::tests::test_get_item ... ok
test types::mapping::tests::test_into_ref ... ok
test types::mapping::tests::test_items ... ok
test types::mapping::tests::test_keys ... ok
test types::mapping::tests::test_len ... ok
test types::mapping::tests::test_set_item ... ok
test types::mapping::tests::test_values ... ok
test types::module::tests::module_import_and_name ... ok
test types::sequence::tests::test_as_ref ... ok
test types::sequence::tests::test_del_slice ... ok
test types::sequence::tests::test_extract_bytearray_to_vec ... ok
test types::sequence::tests::test_extract_range_to_vec ... ok
test types::sequence::tests::test_extract_tuple_to_vec ... ok
test types::sequence::tests::test_list_coercion ... ok
test types::sequence::tests::test_into_ref ... ok
test types::sequence::tests::test_lists_coerce_to_tuples ... ok
test types::sequence::tests::test_numbers_are_not_sequences ... ok
test types::sequence::tests::test_seq_concat ... ok
test types::sequence::tests::test_seq_concat_string ... ok
test types::sequence::tests::test_seq_contains ... ok
test types::sequence::tests::test_seq_count ... ok
test types::sequence::tests::test_seq_del_item ... ok
test types::sequence::tests::test_seq_downcast_unchecked ... ok
test types::sequence::tests::test_seq_get_item ... ok
test types::sequence::tests::test_seq_empty ... ok
test types::sequence::tests::test_seq_get_slice ... ok
test types::sequence::tests::test_seq_index ... ok
test types::sequence::tests::test_seq_index_trait ... ok
test types::sequence::tests::test_seq_index_trait_panic - should panic ... ok
test types::sequence::tests::test_seq_index_trait_range_from_panic - should panic ... ok
test types::sequence::tests::test_seq_index_trait_range_panic_end - should panic ... ok
test types::sequence::tests::test_seq_index_trait_range_panic_start - should panic ... ok
test types::sequence::tests::test_seq_inplace ... ok
test types::sequence::tests::test_seq_index_trait_range_panic_wrong_order - should panic ... ok
test types::sequence::tests::test_seq_index_trait_ranges ... ok
test types::sequence::tests::test_seq_is_empty ... ok
test types::sequence::tests::test_seq_iter ... ok
test types::sequence::tests::test_seq_repeat ... ok
test types::sequence::tests::test_seq_set_item ... ok
test types::sequence::tests::test_seq_set_item_refcnt ... ok
test types::sequence::tests::test_seq_strings ... ok
test types::sequence::tests::test_set_slice ... ok
test types::sequence::tests::test_strings_are_sequences ... ok
test types::sequence::tests::test_strings_cannot_be_extracted_to_vec ... ok
test types::sequence::tests::test_strings_coerce_to_lists ... ok
test types::sequence::tests::test_tuple_coercion ... ok
test types::set::tests::test_set_add ... ok
test types::set::tests::test_set_clear ... ok
test types::set::tests::test_set_contains ... ok
test types::set::tests::test_set_discard ... ok
test types::set::tests::test_set_empty ... ok
test types::set::tests::test_set_iter ... ok
test types::set::tests::test_set_iter_mutation - should panic ... ok
test types::set::tests::test_set_iter_size_hint ... ok
test types::set::tests::test_set_iter_mutation_same_len - should panic ... ok
test types::set::tests::test_set_len ... ok
test types::set::tests::test_set_new ... ok
test types::slice::tests::test_py_slice_indices_new ... ok
test types::set::tests::test_set_pop ... ok
test types::slice::tests::test_py_slice_new ... ok
test types::string::tests::test_debug_string ... ok
test types::string::tests::test_display_string ... ok
test types::string::tests::test_intern_string ... ok
test types::string::tests::test_string_data_ucs1 ... ok
test types::string::tests::test_string_data_ucs1_invalid ... ok
test types::string::tests::test_string_data_ucs2 ... ok
test types::string::tests::test_string_data_ucs2_invalid ... ok
test types::string::tests::test_string_data_ucs4 ... ok
test types::string::tests::test_string_data_ucs4_invalid ... ok
test types::string::tests::test_to_str_ascii ... ok
test types::string::tests::test_to_str_surrogate ... ok
test types::string::tests::test_to_str_unicode ... ok
test types::string::tests::test_to_string_lossy ... ok
test types::traceback::tests::format_traceback ... ok
test types::traceback::tests::test_err_from_value ... ok
test types::traceback::tests::test_err_into_py ... ok
test types::tuple::tests::bad_clone_mem_leaks ... ok
test types::tuple::tests::bad_clone_mem_leaks_2 ... ok
test types::tuple::tests::overflowing_size - should panic ... ok
test types::tuple::tests::test_as_slice ... ok
test types::tuple::tests::test_into_iter ... ok
test types::tuple::tests::test_iter ... ok
test types::tuple::tests::test_len ... ok
test types::tuple::tests::test_new ... ok
test types::tuple::tests::test_slice ... ok
test types::tuple::tests::test_tuple_contains ... ok
test types::tuple::tests::test_tuple_get_item_invalid_index ... ok
test types::tuple::tests::test_tuple_get_item_sanity ... ok
test types::tuple::tests::test_tuple_get_item_unchecked_sanity ... ok
test types::tuple::tests::test_tuple_index ... ok
test types::tuple::tests::test_tuple_index_trait ... ok
test types::tuple::tests::test_tuple_index_trait_panic - should panic ... ok
test types::tuple::tests::test_tuple_index_trait_range_from_panic - should panic ... ok
test types::tuple::tests::test_tuple_index_trait_range_panic_end - should panic ... ok
test types::tuple::tests::test_tuple_index_trait_range_panic_wrong_order - should panic ... ok
test types::tuple::tests::test_tuple_index_trait_range_panic_start - should panic ... ok
test types::tuple::tests::test_tuple_index_trait_ranges ... ok
test types::tuple::tests::test_tuple_lengths_up_to_12 ... ok
test types::tuple::tests::test_tuple_to_list ... ok
test types::tuple::tests::too_long_iterator - should panic ... ok
test types::tuple::tests::too_short_iterator - should panic ... ok
test types::typeobject::tests::test_type_is_subclass ... ok
test types::typeobject::tests::test_type_is_subclass_of ... ok
test version::test::test_python_version_info ... ok
test version::test::test_python_version_info_parse ... ok
test exceptions::asyncio::tests::IncompleteReadError ... ok
test exceptions::asyncio::tests::InvalidStateError ... ok
test exceptions::asyncio::tests::CancelledError ... ok
test exceptions::asyncio::tests::LimitOverrunError ... ok
test exceptions::asyncio::tests::QueueEmpty ... ok
test exceptions::asyncio::tests::QueueFull ... ok
test exceptions::asyncio::tests::TimeoutError ... ok

test result: ok. 549 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.10s

     Running tests/common.rs (target/debug/deps/common-398a7b8e6a1cc9c0)

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

     Running tests/test_anyhow.rs (target/debug/deps/test_anyhow-65a262e5a2d12ab2)

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

     Running tests/test_append_to_inittab.rs (target/debug/deps/test_append_to_inittab-8100c26e11d30749)

running 1 test
test test_module_append_to_inittab ... ok

test result: ok. 1 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.01s

     Running tests/test_arithmetics.rs (target/debug/deps/test_arithmetics-a6380ce96bac5af2)

running 15 tests
test indexable ... ok
test return_not_implemented::arith ... ok
test return_not_implemented::bitwise ... ok
test return_not_implemented::inplace_bitwise ... ok
test return_not_implemented::reverse_arith ... ok
test inplace_operations ... ok
test rich_comparisons_python_3_type_error ... ok
test return_not_implemented::equality ... ok
test lhs_fellback_to_rhs ... ok
test rhs_arithmetic ... ok
test rich_comparisons ... ok
test unary_arithmetic ... ok
test binary_arithmetic ... ok
test return_not_implemented::inplace_arith ... ok
test return_not_implemented::ordering ... ok

test result: ok. 15 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.02s

     Running tests/test_buffer.rs (target/debug/deps/test_buffer-bdb261a0a09e7d8d)

running 1 test
test test_get_buffer_errors ... ok

test result: ok. 1 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.01s

     Running tests/test_buffer_protocol.rs (target/debug/deps/test_buffer_protocol-c48a5bd34c5bdc5c)

running 3 tests
test test_buffer ... ok
test test_buffer_referenced ... ok
test test_releasebuffer_unraisable_error ... ok

test result: ok. 3 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.01s

     Running tests/test_bytes.rs (target/debug/deps/test_bytes-f461914c1103f27f)

running 4 tests
test test_pybytes_bytes_conversion ... ok
test test_py_as_bytes ... ok
test test_bytearray_vec_conversion ... ok
test test_pybytes_vec_conversion ... ok

test result: ok. 4 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.02s

     Running tests/test_class_attributes.rs (target/debug/deps/test_class_attributes-df01fe1d34561d9c)

running 4 tests
test class_attributes_are_immutable ... ignored
test recursive_class_attributes ... ok
test test_fallible_class_attribute ... ok
test class_attributes ... ok

test result: ok. 3 passed; 0 failed; 1 ignored; 0 measured; 0 filtered out; finished in 0.01s

     Running tests/test_class_basics.rs (target/debug/deps/test_class_basics-631f5f6c04a566b5)

running 19 tests
test empty_class_in_module ... ignored
test access_frozen_class_without_gil ... ok
test class_with_docstr ... ok
test dunder_dict_support ... ok
test empty_class ... ok
test access_dunder_dict ... ok
test inherited_dict ... ok
test class_with_object_field ... ok
test custom_names ... ok
test test_pymethods_from_py_with ... ok
test test_raw_idents ... ok
test test_tuple_struct_class ... ok
test unit_class ... ok
test drop_unsendable_elsewhere ... ok
test panic_unsendable_base - should panic ... ok
test panic_unsendable_child - should panic ... ok
test inherited_weakref ... ok
test weakref_dunder_dict_support ... ok
test weakref_support ... ok

test result: ok. 18 passed; 0 failed; 1 ignored; 0 measured; 0 filtered out; finished in 0.02s

     Running tests/test_class_conversion.rs (target/debug/deps/test_class_conversion-0efe20ec8f6cb494)

running 6 tests
test test_polymorphic_container_stores_base_class ... ok
test test_cloneable_pyclass ... ok
test test_pyref_as_base ... ok
test test_polymorphic_container_does_not_accept_other_types ... ok
test test_pycell_deref ... ok
test test_polymorphic_container_stores_sub_class ... ok

test result: ok. 6 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.01s

     Running tests/test_class_new.rs (target/debug/deps/test_class_new-81bc46dda097d953)

running 8 tests
test new_with_two_args ... ok
test empty_class_with_new ... ok
test subclass_new ... ok
test test_new_existing ... ok
test tuple_class_with_new ... ok
test new_with_one_arg ... ok
test new_with_custom_error ... ok
test unit_class_with_new ... ok

test result: ok. 8 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.01s

     Running tests/test_compile_error.rs (target/debug/deps/test_compile_error-23615719efa12815)

running 1 test
warning: unreachable statement
  --> /Users/vidurmodgil/Desktop/Data/pyo3/pyo3-macros-backend/src/intopydict.rs:53:17
   |
52 |                 panic!("{:?}", map);
   |                 ------------------- any code following this expression is unreachable
53 |                 return map;
   |                 ^^^^^^^^^^^ unreachable statement
   |
   = note: `#[warn(unreachable_code)]` on by default

warning: `pyo3-macros-backend` (lib) generated 1 warning
   Compiling pyo3 v0.19.1 (/Users/vidurmodgil/Desktop/Data/pyo3)
    Checking pyo3-tests v0.0.0 (/Users/vidurmodgil/Desktop/Data/pyo3/target/tests/trybuild/pyo3)
    Finished dev [unoptimized + debuginfo] target(s) in 1.05s


test [0m[1mtests/ui/invalid_need_module_arg_position.rs[0m ... [0m[1m[31mmismatch
[0m
[0m[1m[34mEXPECTED:
[0m[34m┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈
[0m[34merror: expected &PyModule as first argument with `pass_module`
[0m[34m --> tests/ui/invalid_need_module_arg_position.rs:6:21
[0m[34m  |
[0m[34m6 |     fn fail(string: &str, module: &PyModule) -> PyResult<&str> {
[0m[34m  |                     ^
[0m[34m┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈
[0m
[0m[1m[31mACTUAL OUTPUT:
[0m[31m┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈
[0m[31merror: expected &PyModule as first argument with `pass_module`
[0m[31m --> tests/ui/invalid_need_module_arg_position.rs:6:21
[0m[31m  |
[0m[31m6 |     fn fail(string: &str, module: &PyModule) -> PyResult<&str> {
[0m[31m  |                     ^^^^
[0m[31m┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈
[0mnote: If the [0m[31mactual output[0m is the correct output you can bless it by rerunning
      your test with the environment variable TRYBUILD=overwrite

test [0m[1mtests/ui/invalid_property_args.rs[0m ... [0m[1m[31mmismatch
[0m
[0m[1m[34mEXPECTED:
[0m[34m┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈
[0m[34merror: getter function can only have one argument (of type pyo3::Python)
[0m[34m --> tests/ui/invalid_property_args.rs:9:54
[0m[34m  |
[0m[34m9 |     fn getter_with_arg(&self, py: Python<'_>, index: u32) {}
[0m[34m  |                                                      ^^^
[0m[34m
[0m[34merror: setter function expected to have one argument
[0m[34m  --> tests/ui/invalid_property_args.rs:18:8
[0m[34m   |
[0m[34m18 |     fn setter_with_no_arg(&mut self, py: Python<'_>) {}
[0m[34m   |        ^^^^^^^^^^^^^^^^^^
[0m[34m
[0m[34merror: setter function can have at most two arguments ([pyo3::Python,] and value)
[0m[34m  --> tests/ui/invalid_property_args.rs:24:76
[0m[34m   |
[0m[34m24 |     fn setter_with_too_many_args(&mut self, py: Python<'_>, foo: u32, bar: u32) {}
[0m[34m   |                                                                            ^^^
[0m[34m
[0m[34merror: `get` and `set` with tuple struct fields require `name`
[0m[34m  --> tests/ui/invalid_property_args.rs:28:50
[0m[34m   |
[0m[34m28 | struct TupleGetterSetterNoName(#[pyo3(get, set)] i32);
[0m[34m   |                                                  ^^^
[0m[34m
[0m[34merror: `get` may only be specified once
[0m[34m  --> tests/ui/invalid_property_args.rs:31:32
[0m[34m   |
[0m[34m31 | struct MultipleGet(#[pyo3(get, get)] i32);
[0m[34m   |                                ^^^
[0m[34m
[0m[34merror: `set` may only be specified once
[0m[34m  --> tests/ui/invalid_property_args.rs:34:32
[0m[34m   |
[0m[34m34 | struct MultipleSet(#[pyo3(set, set)] i32);
[0m[34m   |                                ^^^
[0m[34m
[0m[34merror: `name` may only be specified once
[0m[34m  --> tests/ui/invalid_property_args.rs:37:42
[0m[34m   |
[0m[34m37 | struct MultipleName(#[pyo3(name = "foo", name = "bar")] i32);
[0m[34m   |                                          ^^^^
[0m[34m
[0m[34merror: `name` is useless without `get` or `set`
[0m[34m  --> tests/ui/invalid_property_args.rs:40:33
[0m[34m   |
[0m[34m40 | struct NameWithoutGetSet(#[pyo3(name = "value")] i32);
[0m[34m   |                                 ^^^^^^^^^^^^^^
[0m[34m┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈
[0m
[0m[1m[31mACTUAL OUTPUT:
[0m[31m┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈
[0m[31merror: getter function can only have one argument (of type pyo3::Python)
[0m[31m --> tests/ui/invalid_property_args.rs:9:54
[0m[31m  |
[0m[31m9 |     fn getter_with_arg(&self, py: Python<'_>, index: u32) {}
[0m[31m  |                                                      ^^^
[0m[31m
[0m[31merror: setter function expected to have one argument
[0m[31m  --> tests/ui/invalid_property_args.rs:18:8
[0m[31m   |
[0m[31m18 |     fn setter_with_no_arg(&mut self, py: Python<'_>) {}
[0m[31m   |        ^^^^^^^^^^^^^^^^^^
[0m[31m
[0m[31merror: setter function can have at most two arguments ([pyo3::Python,] and value)
[0m[31m  --> tests/ui/invalid_property_args.rs:24:76
[0m[31m   |
[0m[31m24 |     fn setter_with_too_many_args(&mut self, py: Python<'_>, foo: u32, bar: u32) {}
[0m[31m   |                                                                            ^^^
[0m[31m
[0m[31merror: `get` and `set` with tuple struct fields require `name`
[0m[31m  --> tests/ui/invalid_property_args.rs:28:50
[0m[31m   |
[0m[31m28 | struct TupleGetterSetterNoName(#[pyo3(get, set)] i32);
[0m[31m   |                                                  ^^^
[0m[31m
[0m[31merror: `get` may only be specified once
[0m[31m  --> tests/ui/invalid_property_args.rs:31:32
[0m[31m   |
[0m[31m31 | struct MultipleGet(#[pyo3(get, get)] i32);
[0m[31m   |                                ^^^
[0m[31m
[0m[31merror: `set` may only be specified once
[0m[31m  --> tests/ui/invalid_property_args.rs:34:32
[0m[31m   |
[0m[31m34 | struct MultipleSet(#[pyo3(set, set)] i32);
[0m[31m   |                                ^^^
[0m[31m
[0m[31merror: `name` may only be specified once
[0m[31m  --> tests/ui/invalid_property_args.rs:37:42
[0m[31m   |
[0m[31m37 | struct MultipleName(#[pyo3(name = "foo", name = "bar")] i32);
[0m[31m   |                                          ^^^^^^^^^^^^
[0m[31m
[0m[31merror: `name` is useless without `get` or `set`
[0m[31m  --> tests/ui/invalid_property_args.rs:40:33
[0m[31m   |
[0m[31m40 | struct NameWithoutGetSet(#[pyo3(name = "value")] i32);
[0m[31m   |                                 ^^^^^^^^^^^^^^
[0m[31m┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈
[0mnote: If the [0m[31mactual output[0m is the correct output you can bless it by rerunning
      your test with the environment variable TRYBUILD=overwrite

test [0m[1mtests/ui/invalid_proto_pymethods.rs[0m ... [0m[32mok
[0mtest [0m[1mtests/ui/invalid_pyclass_args.rs[0m ... [0m[32mok
[0mtest [0m[1mtests/ui/invalid_pyclass_enum.rs[0m ... [0m[1m[31mmismatch
[0m
[0m[1m[34mEXPECTED:
[0m[34m┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈
[0m[34merror: enums can't be inherited by other classes
[0m[34m --> tests/ui/invalid_pyclass_enum.rs:3:11
[0m[34m  |
[0m[34m3 | #[pyclass(subclass)]
[0m[34m  |           ^^^^^^^^
[0m[34m
[0m[34merror: enums can't extend from other classes
[0m[34m --> tests/ui/invalid_pyclass_enum.rs:9:11
[0m[34m  |
[0m[34m9 | #[pyclass(extends = PyList)]
[0m[34m  |           ^^^^^^^
[0m[34m
[0m[34merror: #[pyclass] can't be used on enums without any variants
[0m[34m  --> tests/ui/invalid_pyclass_enum.rs:16:18
[0m[34m   |
[0m[34m16 | enum NoEmptyEnum {}
[0m[34m   |                  ^^
[0m[34m┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈
[0m
[0m[1m[31mACTUAL OUTPUT:
[0m[31m┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈
[0m[31merror: enums can't be inherited by other classes
[0m[31m --> tests/ui/invalid_pyclass_enum.rs:3:11
[0m[31m  |
[0m[31m3 | #[pyclass(subclass)]
[0m[31m  |           ^^^^^^^^
[0m[31m
[0m[31merror: enums can't extend from other classes
[0m[31m --> tests/ui/invalid_pyclass_enum.rs:9:11
[0m[31m  |
[0m[31m9 | #[pyclass(extends = PyList)]
[0m[31m  |           ^^^^^^^^^^^^^^^^
[0m[31m
[0m[31merror: #[pyclass] can't be used on enums without any variants
[0m[31m  --> tests/ui/invalid_pyclass_enum.rs:16:18
[0m[31m   |
[0m[31m16 | enum NoEmptyEnum {}
[0m[31m   |                  ^^
[0m[31m┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈
[0mnote: If the [0m[31mactual output[0m is the correct output you can bless it by rerunning
      your test with the environment variable TRYBUILD=overwrite

test [0m[1mtests/ui/invalid_pyclass_item.rs[0m ... [0m[32mok
[0mtest [0m[1mtests/ui/invalid_pyfunction_signatures.rs[0m ... [0m[1m[31mmismatch
[0m
[0m[1m[34mEXPECTED:
[0m[34m┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈
[0m[34merror: missing signature entry for argument `_x`
[0m[34m --> tests/ui/invalid_pyfunction_signatures.rs:5:8
[0m[34m  |
[0m[34m5 | #[pyo3(signature = ())]
[0m[34m  |        ^^^^^^^^^
[0m[34m
[0m[34merror: signature entry does not have a corresponding function argument
[0m[34m --> tests/ui/invalid_pyfunction_signatures.rs:9:21
[0m[34m  |
[0m[34m9 | #[pyo3(signature = (x))]
[0m[34m  |                     ^
[0m[34m
[0m[34merror: expected argument from function definition `y` but got argument `x`
[0m[34m  --> tests/ui/invalid_pyfunction_signatures.rs:13:21
[0m[34m   |
[0m[34m13 | #[pyo3(signature = (x))]
[0m[34m   |                     ^
[0m[34m
[0m[34merror: expected one of: `name`, `pass_module`, `signature`, `text_signature`, `crate`
[0m[34m  --> tests/ui/invalid_pyfunction_signatures.rs:18:14
[0m[34m   |
[0m[34m18 | #[pyfunction(x)]
[0m[34m   |              ^
[0m[34m
[0m[34merror: `*args` not allowed after `*`
[0m[34m  --> tests/ui/invalid_pyfunction_signatures.rs:25:24
[0m[34m   |
[0m[34m25 | #[pyo3(signature = (*, *args))]
[0m[34m   |                        ^
[0m[34m
[0m[34merror: `*` not allowed after `*`
[0m[34m  --> tests/ui/invalid_pyfunction_signatures.rs:31:24
[0m[34m   |
[0m[34m31 | #[pyo3(signature = (*, *))]
[0m[34m   |                        ^
[0m[34m
[0m[34merror: `*args` not allowed after `**kwargs`
[0m[34m  --> tests/ui/invalid_pyfunction_signatures.rs:35:31
[0m[34m   |
[0m[34m35 | #[pyo3(signature = (**kwargs, *args))]
[0m[34m   |                               ^
[0m[34m
[0m[34merror: `**kwargs_b` not allowed after `**kwargs_a`
[0m[34m  --> tests/ui/invalid_pyfunction_signatures.rs:41:33
[0m[34m   |
[0m[34m41 | #[pyo3(signature = (**kwargs_a, **kwargs_b))]
[0m[34m   |                                 ^
[0m[34m
[0m[34merror: arguments of type `Python` must not be part of the signature
[0m[34m  --> tests/ui/invalid_pyfunction_signatures.rs:47:27
[0m[34m   |
[0m[34m47 | #[pyfunction(signature = (py))]
[0m[34m   |                           ^^
[0m[34m
[0m[34merror: cannot find attribute `args` in this scope
[0m[34m  --> tests/ui/invalid_pyfunction_signatures.rs:57:7
[0m[34m   |
[0m[34m57 |     #[args(x)]
[0m[34m   |       ^^^^
[0m[34m┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈
[0m
[0m[1m[31mACTUAL OUTPUT:
[0m[31m┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈
[0m[31merror: missing signature entry for argument `_x`
[0m[31m --> tests/ui/invalid_pyfunction_signatures.rs:5:8
[0m[31m  |
[0m[31m5 | #[pyo3(signature = ())]
[0m[31m  |        ^^^^^^^^^
[0m[31m
[0m[31merror: signature entry does not have a corresponding function argument
[0m[31m --> tests/ui/invalid_pyfunction_signatures.rs:9:21
[0m[31m  |
[0m[31m9 | #[pyo3(signature = (x))]
[0m[31m  |                     ^
[0m[31m
[0m[31merror: expected argument from function definition `y` but got argument `x`
[0m[31m  --> tests/ui/invalid_pyfunction_signatures.rs:13:21
[0m[31m   |
[0m[31m13 | #[pyo3(signature = (x))]
[0m[31m   |                     ^
[0m[31m
[0m[31merror: expected one of: `name`, `pass_module`, `signature`, `text_signature`, `crate`
[0m[31m  --> tests/ui/invalid_pyfunction_signatures.rs:18:14
[0m[31m   |
[0m[31m18 | #[pyfunction(x)]
[0m[31m   |              ^
[0m[31m
[0m[31merror: `*args` not allowed after `*`
[0m[31m  --> tests/ui/invalid_pyfunction_signatures.rs:25:24
[0m[31m   |
[0m[31m25 | #[pyo3(signature = (*, *args))]
[0m[31m   |                        ^^^^^
[0m[31m
[0m[31merror: `*` not allowed after `*`
[0m[31m  --> tests/ui/invalid_pyfunction_signatures.rs:31:24
[0m[31m   |
[0m[31m31 | #[pyo3(signature = (*, *))]
[0m[31m   |                        ^
[0m[31m
[0m[31merror: `*args` not allowed after `**kwargs`
[0m[31m  --> tests/ui/invalid_pyfunction_signatures.rs:35:31
[0m[31m   |
[0m[31m35 | #[pyo3(signature = (**kwargs, *args))]
[0m[31m   |                               ^^^^^
[0m[31m
[0m[31merror: `**kwargs_b` not allowed after `**kwargs_a`
[0m[31m  --> tests/ui/invalid_pyfunction_signatures.rs:41:33
[0m[31m   |
[0m[31m41 | #[pyo3(signature = (**kwargs_a, **kwargs_b))]
[0m[31m   |                                 ^^^^^^^^^^
[0m[31m
[0m[31merror: arguments of type `Python` must not be part of the signature
[0m[31m  --> tests/ui/invalid_pyfunction_signatures.rs:47:27
[0m[31m   |
[0m[31m47 | #[pyfunction(signature = (py))]
[0m[31m   |                           ^^
[0m[31m
[0m[31merror: cannot find attribute `args` in this scope
[0m[31m  --> tests/ui/invalid_pyfunction_signatures.rs:57:7
[0m[31m   |
[0m[31m57 |     #[args(x)]
[0m[31m   |       ^^^^
[0m[31m┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈
[0mnote: If the [0m[31mactual output[0m is the correct output you can bless it by rerunning
      your test with the environment variable TRYBUILD=overwrite

test [0m[1mtests/ui/invalid_pymethods_buffer.rs[0m ... [0m[32mok
[0mtest [0m[1mtests/ui/invalid_pymethod_names.rs[0m ... [0m[1m[31mmismatch
[0m
[0m[1m[34mEXPECTED:
[0m[34m┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈
[0m[34merror: `name` may only be specified once
[0m[34m  --> tests/ui/invalid_pymethod_names.rs:10:19
[0m[34m   |
[0m[34m10 |     #[pyo3(name = "num")]
[0m[34m   |                   ^^^^^
[0m[34m
[0m[34merror: `name` may only be specified once
[0m[34m  --> tests/ui/invalid_pymethod_names.rs:18:12
[0m[34m   |
[0m[34m18 |     #[pyo3(name = "bar")]
[0m[34m   |            ^^^^
[0m[34m
[0m[34merror: `name` not allowed with `#[new]`
[0m[34m  --> tests/ui/invalid_pymethod_names.rs:24:19
[0m[34m   |
[0m[34m24 |     #[pyo3(name = "makenew")]
[0m[34m   |                   ^^^^^^^^^
[0m[34m┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈
[0m
[0m[1m[31mACTUAL OUTPUT:
[0m[31m┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈
[0m[31merror: `name` may only be specified once
[0m[31m  --> tests/ui/invalid_pymethod_names.rs:10:19
[0m[31m   |
[0m[31m10 |     #[pyo3(name = "num")]
[0m[31m   |                   ^^^^^
[0m[31m
[0m[31merror: `name` may only be specified once
[0m[31m  --> tests/ui/invalid_pymethod_names.rs:18:12
[0m[31m   |
[0m[31m18 |     #[pyo3(name = "bar")]
[0m[31m   |            ^^^^^^^^^^^^
[0m[31m
[0m[31merror: `name` not allowed with `#[new]`
[0m[31m  --> tests/ui/invalid_pymethod_names.rs:24:19
[0m[31m   |
[0m[31m24 |     #[pyo3(name = "makenew")]
[0m[31m   |                   ^^^^^^^^^
[0m[31m┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈
[0mnote: If the [0m[31mactual output[0m is the correct output you can bless it by rerunning
      your test with the environment variable TRYBUILD=overwrite

test [0m[1mtests/ui/invalid_pymodule_args.rs[0m ... [0m[32mok
[0mtest [0m[1mtests/ui/reject_generics.rs[0m ... [0m[1m[31mmismatch
[0m
[0m[1m[34mEXPECTED:
[0m[34m┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈
[0m[34merror: #[pyclass] cannot have generic parameters. For an explanation, see https://pyo3.rs/latest/class.html#no-generic-parameters
[0m[34m --> tests/ui/reject_generics.rs:4:25
[0m[34m  |
[0m[34m4 | struct ClassWithGenerics<A> {
[0m[34m  |                         ^
[0m[34m
[0m[34merror: #[pyclass] cannot have lifetime parameters. For an explanation, see https://pyo3.rs/latest/class.html#no-lifetime-parameters
[0m[34m --> tests/ui/reject_generics.rs:9:27
[0m[34m  |
[0m[34m9 | struct ClassWithLifetimes<'a> {
[0m[34m  |                           ^^
[0m[34m┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈
[0m
[0m[1m[31mACTUAL OUTPUT:
[0m[31m┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈
[0m[31merror: #[pyclass] cannot have generic parameters. For an explanation, see https://pyo3.rs/latest/class.html#no-generic-parameters
[0m[31m --> tests/ui/reject_generics.rs:4:25
[0m[31m  |
[0m[31m4 | struct ClassWithGenerics<A> {
[0m[31m  |                         ^^^
[0m[31m
[0m[31merror: #[pyclass] cannot have lifetime parameters. For an explanation, see https://pyo3.rs/latest/class.html#no-lifetime-parameters
[0m[31m --> tests/ui/reject_generics.rs:9:27
[0m[31m  |
[0m[31m9 | struct ClassWithLifetimes<'a> {
[0m[31m  |                           ^^
[0m[31m┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈
[0mnote: If the [0m[31mactual output[0m is the correct output you can bless it by rerunning
      your test with the environment variable TRYBUILD=overwrite

test [0m[1mtests/ui/deprecations.rs[0m ... [0m[1m[31mmismatch
[0m
[0m[1m[34mEXPECTED:
[0m[34m┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈
[0m[34merror: use of deprecated constant `pyo3::impl_::deprecations::PYCLASS_TEXT_SIGNATURE`: put `text_signature` on `#[new]` instead of `#[pyclass]`
[0m[34m --> tests/ui/deprecations.rs:6:8
[0m[34m  |
[0m[34m6 | #[pyo3(text_signature = "()")]
[0m[34m  |        ^^^^^^^^^^^^^^
[0m[34m  |
[0m[34mnote: the lint level is defined here
[0m[34m --> tests/ui/deprecations.rs:1:9
[0m[34m  |
[0m[34m1 | #![deny(deprecated)]
[0m[34m  |         ^^^^^^^^^^
[0m[34m┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈
[0m
[0m[1m[31mACTUAL OUTPUT:
[0m[31m┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈
[0m[31merror: use of deprecated constant `pyo3::impl_::deprecations::PYCLASS_TEXT_SIGNATURE`: put `text_signature` on `#[new]` instead of `#[pyclass]`
[0m[31m --> tests/ui/deprecations.rs:6:8
[0m[31m  |
[0m[31m6 | #[pyo3(text_signature = "()")]
[0m[31m  |        ^^^^^^^^^^^^^^^^^^^^^
[0m[31m  |
[0m[31mnote: the lint level is defined here
[0m[31m --> tests/ui/deprecations.rs:1:9
[0m[31m  |
[0m[31m1 | #![deny(deprecated)]
[0m[31m  |         ^^^^^^^^^^
[0m[31m┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈
[0mnote: If the [0m[31mactual output[0m is the correct output you can bless it by rerunning
      your test with the environment variable TRYBUILD=overwrite

test [0m[1mtests/ui/invalid_closure.rs[0m ... [0m[32mok
[0mtest [0m[1mtests/ui/pyclass_send.rs[0m ... [0m[32mok
[0mtest [0m[1mtests/ui/invalid_argument_attributes.rs[0m ... [0m[32mok
[0mtest [0m[1mtests/ui/invalid_frompy_derive.rs[0m ... [0m[1m[31mmismatch
[0m
[0m[1m[34mEXPECTED:
[0m[34m┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈
[0m[34merror: cannot derive FromPyObject for empty structs and variants
[0m[34m --> tests/ui/invalid_frompy_derive.rs:4:11
[0m[34m  |
[0m[34m4 | struct Foo();
[0m[34m  |           ^^
[0m[34m
[0m[34merror: cannot derive FromPyObject for empty structs and variants
[0m[34m --> tests/ui/invalid_frompy_derive.rs:7:13
[0m[34m  |
[0m[34m7 | struct Foo2 {}
[0m[34m  |             ^^
[0m[34m
[0m[34merror: cannot derive FromPyObject for empty enum
[0m[34m  --> tests/ui/invalid_frompy_derive.rs:10:6
[0m[34m   |
[0m[34m10 | enum EmptyEnum {}
[0m[34m   |      ^^^^^^^^^
[0m[34m
[0m[34merror: cannot derive FromPyObject for empty structs and variants
[0m[34m  --> tests/ui/invalid_frompy_derive.rs:14:15
[0m[34m   |
[0m[34m14 |     EmptyTuple(),
[0m[34m   |               ^^
[0m[34m
[0m[34merror: cannot derive FromPyObject for empty structs and variants
[0m[34m  --> tests/ui/invalid_frompy_derive.rs:20:17
[0m[34m   |
[0m[34m20 |     EmptyStruct {},
[0m[34m   |                 ^^
[0m[34m
[0m[34merror: cannot derive FromPyObject for empty structs and variants
[0m[34m  --> tests/ui/invalid_frompy_derive.rs:26:27
[0m[34m   |
[0m[34m26 | struct EmptyTransparentTup();
[0m[34m   |                           ^^
[0m[34m
[0m[34merror: cannot derive FromPyObject for empty structs and variants
[0m[34m  --> tests/ui/invalid_frompy_derive.rs:30:31
[0m[34m   |
[0m[34m30 | struct EmptyTransparentStruct {}
[0m[34m   |                               ^^
[0m[34m
[0m[34merror: cannot derive FromPyObject for empty structs and variants
[0m[34m  --> tests/ui/invalid_frompy_derive.rs:35:15
[0m[34m   |
[0m[34m35 |     EmptyTuple(),
[0m[34m   |               ^^
[0m[34m
[0m[34merror: cannot derive FromPyObject for empty structs and variants
[0m[34m  --> tests/ui/invalid_frompy_derive.rs:42:17
[0m[34m   |
[0m[34m42 |     EmptyStruct {},
[0m[34m   |                 ^^
[0m[34m
[0m[34merror: transparent structs and variants can only have 1 field
[0m[34m  --> tests/ui/invalid_frompy_derive.rs:48:35
[0m[34m   |
[0m[34m48 | struct TransparentTupTooManyFields(String, String);
[0m[34m   |                                   ^^^^^^^^^^^^^^^^
[0m[34m
[0m[34merror: transparent structs and variants can only have 1 field
[0m[34m  --> tests/ui/invalid_frompy_derive.rs:52:39
[0m[34m   |
[0m[34m52 |   struct TransparentStructTooManyFields {
[0m[34m   |  _______________________________________^
[0m[34m53 | |     foo: String,
[0m[34m54 | |     bar: String,
[0m[34m55 | | }
[0m[34m   | |_^
[0m[34m
[0m[34merror: transparent structs and variants can only have 1 field
[0m[34m  --> tests/ui/invalid_frompy_derive.rs:60:15
[0m[34m   |
[0m[34m60 |     EmptyTuple(String, String),
[0m[34m   |               ^^^^^^^^^^^^^^^^
[0m[34m
[0m[34merror: transparent structs and variants can only have 1 field
[0m[34m  --> tests/ui/invalid_frompy_derive.rs:67:17
[0m[34m   |
[0m[34m67 |       EmptyStruct {
[0m[34m   |  _________________^
[0m[34m68 | |         foo: String,
[0m[34m69 | |         bar: String,
[0m[34m70 | |     },
[0m[34m   | |_____^
[0m[34m
[0m[34merror: expected one of: `attribute`, `item`, `from_py_with`
[0m[34m  --> tests/ui/invalid_frompy_derive.rs:76:12
[0m[34m   |
[0m[34m76 |     #[pyo3(attr)]
[0m[34m   |            ^^^^
[0m[34m
[0m[34merror: expected string literal
[0m[34m  --> tests/ui/invalid_frompy_derive.rs:82:22
[0m[34m   |
[0m[34m82 |     #[pyo3(attribute(1))]
[0m[34m   |                      ^
[0m[34m
[0m[34merror: expected at most one argument: `attribute` or `attribute("name")`
[0m[34m  --> tests/ui/invalid_frompy_derive.rs:88:25
[0m[34m   |
[0m[34m88 |     #[pyo3(attribute("a", "b"))]
[0m[34m   |                         ^
[0m[34m
[0m[34merror: attribute name cannot be empty
[0m[34m  --> tests/ui/invalid_frompy_derive.rs:94:22
[0m[34m   |
[0m[34m94 |     #[pyo3(attribute(""))]
[0m[34m   |                      ^^
[0m[34m
[0m[34merror: unexpected end of input, expected string literal
[0m[34m   --> tests/ui/invalid_frompy_derive.rs:100:22
[0m[34m    |
[0m[34m100 |     #[pyo3(attribute())]
[0m[34m    |                      ^
[0m[34m
[0m[34merror: expected at most one argument: `item` or `item(key)`
[0m[34m   --> tests/ui/invalid_frompy_derive.rs:106:20
[0m[34m    |
[0m[34m106 |     #[pyo3(item("a", "b"))]
[0m[34m    |                    ^
[0m[34m
[0m[34merror: unexpected end of input, expected literal
[0m[34m   --> tests/ui/invalid_frompy_derive.rs:112:17
[0m[34m    |
[0m[34m112 |     #[pyo3(item())]
[0m[34m    |                 ^
[0m[34m
[0m[34merror: only one of `attribute` or `item` can be provided
[0m[34m   --> tests/ui/invalid_frompy_derive.rs:118:5
[0m[34m    |
[0m[34m118 |     #[pyo3(item, attribute)]
[0m[34m    |     ^
[0m[34m
[0m[34merror: expected one of: `transparent`, `from_item_all`, `annotation`, `crate`
[0m[34m   --> tests/ui/invalid_frompy_derive.rs:123:8
[0m[34m    |
[0m[34m123 | #[pyo3(unknown = "should not work")]
[0m[34m    |        ^^^^^^^
[0m[34m
[0m[34merror: `annotation` is unsupported for structs
[0m[34m   --> tests/ui/invalid_frompy_derive.rs:129:21
[0m[34m    |
[0m[34m129 | #[pyo3(annotation = "should not work")]
[0m[34m    |                     ^^^^^^^^^^^^^^^^^
[0m[34m
[0m[34merror: expected string literal
[0m[34m   --> tests/ui/invalid_frompy_derive.rs:136:25
[0m[34m    |
[0m[34m136 |     #[pyo3(annotation = 1)]
[0m[34m    |                         ^
[0m[34m
[0m[34merror: FromPyObject can be derived with at most one lifetime parameter
[0m[34m   --> tests/ui/invalid_frompy_derive.rs:141:22
[0m[34m    |
[0m[34m141 | enum TooManyLifetimes<'a, 'b> {
[0m[34m    |                      ^
[0m[34m
[0m[34merror: #[derive(FromPyObject)] is not supported for unions
[0m[34m   --> tests/ui/invalid_frompy_derive.rs:147:1
[0m[34m    |
[0m[34m147 | union Union {
[0m[34m    | ^^^^^
[0m[34m
[0m[34merror: cannot derive FromPyObject for empty structs and variants
[0m[34m   --> tests/ui/invalid_frompy_derive.rs:151:10
[0m[34m    |
[0m[34m151 | #[derive(FromPyObject)]
[0m[34m    |          ^^^^^^^^^^^^
[0m[34m    |
[0m[34m    = note: this error originates in the derive macro `FromPyObject` (in Nightly builds, run with -Z macro-backtrace for more info)
[0m[34m
[0m[34merror: expected `=`
[0m[34m   --> tests/ui/invalid_frompy_derive.rs:158:24
[0m[34m    |
[0m[34m158 |     #[pyo3(from_py_with)]
[0m[34m    |                        ^
[0m[34m
[0m[34merror: expected string literal
[0m[34m   --> tests/ui/invalid_frompy_derive.rs:164:27
[0m[34m    |
[0m[34m164 |     #[pyo3(from_py_with = func)]
[0m[34m    |                           ^^^^
[0m[34m
[0m[34merror: `getter` is not permitted on tuple struct elements.
[0m[34m   --> tests/ui/invalid_frompy_derive.rs:169:27
[0m[34m    |
[0m[34m169 | struct InvalidTupleGetter(#[pyo3(item("foo"))] String);
[0m[34m    |                           ^
[0m[34m
[0m[34merror: `transparent` structs may not have a `getter` for the inner field
[0m[34m   --> tests/ui/invalid_frompy_derive.rs:175:5
[0m[34m    |
[0m[34m175 |     field: String,
[0m[34m    |     ^^^^^
[0m[34m
[0m[34merror: `transparent` structs may not have a `getter` for the inner field
[0m[34m   --> tests/ui/invalid_frompy_derive.rs:186:5
[0m[34m    |
[0m[34m186 |     field: String,
[0m[34m    |     ^^^^^
[0m[34m
[0m[34merror: `from_item_all` may only be provided once
[0m[34m   --> tests/ui/invalid_frompy_derive.rs:190:23
[0m[34m    |
[0m[34m190 | #[pyo3(from_item_all, from_item_all)]
[0m[34m    |                       ^^^^^^^^^^^^^
[0m[34m
[0m[34merror: Useless `item` - the struct is already annotated with `from_item_all`
[0m[34m   --> tests/ui/invalid_frompy_derive.rs:196:8
[0m[34m    |
[0m[34m196 | #[pyo3(from_item_all)]
[0m[34m    |        ^^^^^^^^^^^^^
[0m[34m
[0m[34merror: The struct is already annotated with `from_item_all`, `attribute` is not allowed
[0m[34m   --> tests/ui/invalid_frompy_derive.rs:203:8
[0m[34m    |
[0m[34m203 | #[pyo3(from_item_all)]
[0m[34m    |        ^^^^^^^^^^^^^
[0m[34m
[0m[34merror: The struct is already annotated with `from_item_all`, `attribute` is not allowed
[0m[34m   --> tests/ui/invalid_frompy_derive.rs:210:8
[0m[34m    |
[0m[34m210 | #[pyo3(from_item_all)]
[0m[34m    |        ^^^^^^^^^^^^^
[0m[34m┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈
[0m
[0m[1m[31mACTUAL OUTPUT:
[0m[31m┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈
[0m[31merror: cannot derive FromPyObject for empty structs and variants
[0m[31m --> tests/ui/invalid_frompy_derive.rs:4:11
[0m[31m  |
[0m[31m4 | struct Foo();
[0m[31m  |           ^^
[0m[31m
[0m[31merror: cannot derive FromPyObject for empty structs and variants
[0m[31m --> tests/ui/invalid_frompy_derive.rs:7:13
[0m[31m  |
[0m[31m7 | struct Foo2 {}
[0m[31m  |             ^^
[0m[31m
[0m[31merror: cannot derive FromPyObject for empty enum
[0m[31m  --> tests/ui/invalid_frompy_derive.rs:10:6
[0m[31m   |
[0m[31m10 | enum EmptyEnum {}
[0m[31m   |      ^^^^^^^^^
[0m[31m
[0m[31merror: cannot derive FromPyObject for empty structs and variants
[0m[31m  --> tests/ui/invalid_frompy_derive.rs:14:15
[0m[31m   |
[0m[31m14 |     EmptyTuple(),
[0m[31m   |               ^^
[0m[31m
[0m[31merror: cannot derive FromPyObject for empty structs and variants
[0m[31m  --> tests/ui/invalid_frompy_derive.rs:20:17
[0m[31m   |
[0m[31m20 |     EmptyStruct {},
[0m[31m   |                 ^^
[0m[31m
[0m[31merror: cannot derive FromPyObject for empty structs and variants
[0m[31m  --> tests/ui/invalid_frompy_derive.rs:26:27
[0m[31m   |
[0m[31m26 | struct EmptyTransparentTup();
[0m[31m   |                           ^^
[0m[31m
[0m[31merror: cannot derive FromPyObject for empty structs and variants
[0m[31m  --> tests/ui/invalid_frompy_derive.rs:30:31
[0m[31m   |
[0m[31m30 | struct EmptyTransparentStruct {}
[0m[31m   |                               ^^
[0m[31m
[0m[31merror: cannot derive FromPyObject for empty structs and variants
[0m[31m  --> tests/ui/invalid_frompy_derive.rs:35:15
[0m[31m   |
[0m[31m35 |     EmptyTuple(),
[0m[31m   |               ^^
[0m[31m
[0m[31merror: cannot derive FromPyObject for empty structs and variants
[0m[31m  --> tests/ui/invalid_frompy_derive.rs:42:17
[0m[31m   |
[0m[31m42 |     EmptyStruct {},
[0m[31m   |                 ^^
[0m[31m
[0m[31merror: transparent structs and variants can only have 1 field
[0m[31m  --> tests/ui/invalid_frompy_derive.rs:48:35
[0m[31m   |
[0m[31m48 | struct TransparentTupTooManyFields(String, String);
[0m[31m   |                                   ^^^^^^^^^^^^^^^^
[0m[31m
[0m[31merror: transparent structs and variants can only have 1 field
[0m[31m  --> tests/ui/invalid_frompy_derive.rs:52:39
[0m[31m   |
[0m[31m52 |   struct TransparentStructTooManyFields {
[0m[31m   |  _______________________________________^
[0m[31m53 | |     foo: String,
[0m[31m54 | |     bar: String,
[0m[31m55 | | }
[0m[31m   | |_^
[0m[31m
[0m[31merror: transparent structs and variants can only have 1 field
[0m[31m  --> tests/ui/invalid_frompy_derive.rs:60:15
[0m[31m   |
[0m[31m60 |     EmptyTuple(String, String),
[0m[31m   |               ^^^^^^^^^^^^^^^^
[0m[31m
[0m[31merror: transparent structs and variants can only have 1 field
[0m[31m  --> tests/ui/invalid_frompy_derive.rs:67:17
[0m[31m   |
[0m[31m67 |       EmptyStruct {
[0m[31m   |  _________________^
[0m[31m68 | |         foo: String,
[0m[31m69 | |         bar: String,
[0m[31m70 | |     },
[0m[31m   | |_____^
[0m[31m
[0m[31merror: expected one of: `attribute`, `item`, `from_py_with`
[0m[31m  --> tests/ui/invalid_frompy_derive.rs:76:12
[0m[31m   |
[0m[31m76 |     #[pyo3(attr)]
[0m[31m   |            ^^^^
[0m[31m
[0m[31merror: expected string literal
[0m[31m  --> tests/ui/invalid_frompy_derive.rs:82:22
[0m[31m   |
[0m[31m82 |     #[pyo3(attribute(1))]
[0m[31m   |                      ^
[0m[31m
[0m[31merror: expected at most one argument: `attribute` or `attribute("name")`
[0m[31m  --> tests/ui/invalid_frompy_derive.rs:88:25
[0m[31m   |
[0m[31m88 |     #[pyo3(attribute("a", "b"))]
[0m[31m   |                         ^
[0m[31m
[0m[31merror: attribute name cannot be empty
[0m[31m  --> tests/ui/invalid_frompy_derive.rs:94:22
[0m[31m   |
[0m[31m94 |     #[pyo3(attribute(""))]
[0m[31m   |                      ^^
[0m[31m
[0m[31merror: unexpected end of input, expected string literal
[0m[31m   --> tests/ui/invalid_frompy_derive.rs:100:22
[0m[31m    |
[0m[31m100 |     #[pyo3(attribute())]
[0m[31m    |                      ^
[0m[31m
[0m[31merror: expected at most one argument: `item` or `item(key)`
[0m[31m   --> tests/ui/invalid_frompy_derive.rs:106:20
[0m[31m    |
[0m[31m106 |     #[pyo3(item("a", "b"))]
[0m[31m    |                    ^
[0m[31m
[0m[31merror: unexpected end of input, expected literal
[0m[31m   --> tests/ui/invalid_frompy_derive.rs:112:17
[0m[31m    |
[0m[31m112 |     #[pyo3(item())]
[0m[31m    |                 ^
[0m[31m
[0m[31merror: only one of `attribute` or `item` can be provided
[0m[31m   --> tests/ui/invalid_frompy_derive.rs:118:5
[0m[31m    |
[0m[31m118 |     #[pyo3(item, attribute)]
[0m[31m    |     ^^^^^^^^^^^^^^^^^^^^^^^^
[0m[31m
[0m[31merror: expected one of: `transparent`, `from_item_all`, `annotation`, `crate`
[0m[31m   --> tests/ui/invalid_frompy_derive.rs:123:8
[0m[31m    |
[0m[31m123 | #[pyo3(unknown = "should not work")]
[0m[31m    |        ^^^^^^^
[0m[31m
[0m[31merror: `annotation` is unsupported for structs
[0m[31m   --> tests/ui/invalid_frompy_derive.rs:129:21
[0m[31m    |
[0m[31m129 | #[pyo3(annotation = "should not work")]
[0m[31m    |                     ^^^^^^^^^^^^^^^^^
[0m[31m
[0m[31merror: expected string literal
[0m[31m   --> tests/ui/invalid_frompy_derive.rs:136:25
[0m[31m    |
[0m[31m136 |     #[pyo3(annotation = 1)]
[0m[31m    |                         ^
[0m[31m
[0m[31merror: FromPyObject can be derived with at most one lifetime parameter
[0m[31m   --> tests/ui/invalid_frompy_derive.rs:141:22
[0m[31m    |
[0m[31m141 | enum TooManyLifetimes<'a, 'b> {
[0m[31m    |                      ^^^^^^^^
[0m[31m
[0m[31merror: #[derive(FromPyObject)] is not supported for unions
[0m[31m   --> tests/ui/invalid_frompy_derive.rs:147:1
[0m[31m    |
[0m[31m147 | / union Union {
[0m[31m148 | |     a: usize,
[0m[31m149 | | }
[0m[31m    | |_^
[0m[31m
[0m[31merror: cannot derive FromPyObject for empty structs and variants
[0m[31m   --> tests/ui/invalid_frompy_derive.rs:151:10
[0m[31m    |
[0m[31m151 | #[derive(FromPyObject)]
[0m[31m    |          ^^^^^^^^^^^^
[0m[31m    |
[0m[31m    = note: this error originates in the derive macro `FromPyObject` (in Nightly builds, run with -Z macro-backtrace for more info)
[0m[31m
[0m[31merror: expected `=`
[0m[31m   --> tests/ui/invalid_frompy_derive.rs:158:24
[0m[31m    |
[0m[31m158 |     #[pyo3(from_py_with)]
[0m[31m    |                        ^
[0m[31m
[0m[31merror: expected string literal
[0m[31m   --> tests/ui/invalid_frompy_derive.rs:164:27
[0m[31m    |
[0m[31m164 |     #[pyo3(from_py_with = func)]
[0m[31m    |                           ^^^^
[0m[31m
[0m[31merror: `getter` is not permitted on tuple struct elements.
[0m[31m   --> tests/ui/invalid_frompy_derive.rs:169:27
[0m[31m    |
[0m[31m169 | struct InvalidTupleGetter(#[pyo3(item("foo"))] String);
[0m[31m    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
[0m[31m
[0m[31merror: `transparent` structs may not have a `getter` for the inner field
[0m[31m   --> tests/ui/invalid_frompy_derive.rs:175:5
[0m[31m    |
[0m[31m175 |     field: String,
[0m[31m    |     ^^^^^
[0m[31m
[0m[31merror: `transparent` structs may not have a `getter` for the inner field
[0m[31m   --> tests/ui/invalid_frompy_derive.rs:186:5
[0m[31m    |
[0m[31m186 |     field: String,
[0m[31m    |     ^^^^^
[0m[31m
[0m[31merror: `from_item_all` may only be provided once
[0m[31m   --> tests/ui/invalid_frompy_derive.rs:190:23
[0m[31m    |
[0m[31m190 | #[pyo3(from_item_all, from_item_all)]
[0m[31m    |                       ^^^^^^^^^^^^^
[0m[31m
[0m[31merror: Useless `item` - the struct is already annotated with `from_item_all`
[0m[31m   --> tests/ui/invalid_frompy_derive.rs:196:8
[0m[31m    |
[0m[31m196 | #[pyo3(from_item_all)]
[0m[31m    |        ^^^^^^^^^^^^^
[0m[31m
[0m[31merror: The struct is already annotated with `from_item_all`, `attribute` is not allowed
[0m[31m   --> tests/ui/invalid_frompy_derive.rs:203:8
[0m[31m    |
[0m[31m203 | #[pyo3(from_item_all)]
[0m[31m    |        ^^^^^^^^^^^^^
[0m[31m
[0m[31merror: The struct is already annotated with `from_item_all`, `attribute` is not allowed
[0m[31m   --> tests/ui/invalid_frompy_derive.rs:210:8
[0m[31m    |
[0m[31m210 | #[pyo3(from_item_all)]
[0m[31m    |        ^^^^^^^^^^^^^
[0m[31m┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈
[0mnote: If the [0m[31mactual output[0m is the correct output you can bless it by rerunning
      your test with the environment variable TRYBUILD=overwrite

test [0m[1mtests/ui/static_ref.rs[0m ... [0m[32mok
[0mtest [0m[1mtests/ui/wrong_aspyref_lifetimes.rs[0m ... [0m[32mok
[0mtest [0m[1mtests/ui/invalid_pyfunctions.rs[0m ... [0m[1m[31mmismatch
[0m
[0m[1m[34mEXPECTED:
[0m[34m┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈
[0m[34merror: Python functions cannot have generic type parameters
[0m[34m --> tests/ui/invalid_pyfunctions.rs:4:21
[0m[34m  |
[0m[34m4 | fn generic_function<T>(value: T) {}
[0m[34m  |                     ^
[0m[34m
[0m[34merror: Python functions cannot have `impl Trait` arguments
[0m[34m --> tests/ui/invalid_pyfunctions.rs:7:36
[0m[34m  |
[0m[34m7 | fn impl_trait_function(impl_trait: impl AsRef<PyAny>) {}
[0m[34m  |                                    ^^^^
[0m[34m
[0m[34merror: `async fn` is not yet supported for Python functions.
[0m[34m
[0m[34m       Additional crates such as `pyo3-asyncio` can be used to integrate async Rust and Python. For more information, see https://github.com/PyO3/pyo3/issues/1632
[0m[34m  --> tests/ui/invalid_pyfunctions.rs:10:1
[0m[34m   |
[0m[34m10 | async fn async_function() {}
[0m[34m   | ^^^^^
[0m[34m
[0m[34merror: wildcard argument names are not supported
[0m[34m  --> tests/ui/invalid_pyfunctions.rs:13:22
[0m[34m   |
[0m[34m13 | fn wildcard_argument(_: i32) {}
[0m[34m   |                      ^
[0m[34m
[0m[34merror: destructuring in arguments is not supported
[0m[34m  --> tests/ui/invalid_pyfunctions.rs:16:26
[0m[34m   |
[0m[34m16 | fn destructured_argument((a, b): (i32, i32)) {}
[0m[34m   |                          ^^^^^^
[0m[34m
[0m[34merror: required arguments after an `Option<_>` argument are ambiguous
[0m[34m       = help: add a `#[pyo3(signature)]` annotation on this function to unambiguously specify the default values for all optional parameters
[0m[34m  --> tests/ui/invalid_pyfunctions.rs:19:63
[0m[34m   |
[0m[34m19 | fn function_with_required_after_option(_opt: Option<i32>, _x: i32) {}
[0m[34m   |                                                               ^^^
[0m[34m┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈
[0m
[0m[1m[31mACTUAL OUTPUT:
[0m[31m┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈
[0m[31merror: Python functions cannot have generic type parameters
[0m[31m --> tests/ui/invalid_pyfunctions.rs:4:21
[0m[31m  |
[0m[31m4 | fn generic_function<T>(value: T) {}
[0m[31m  |                     ^
[0m[31m
[0m[31merror: Python functions cannot have `impl Trait` arguments
[0m[31m --> tests/ui/invalid_pyfunctions.rs:7:36
[0m[31m  |
[0m[31m7 | fn impl_trait_function(impl_trait: impl AsRef<PyAny>) {}
[0m[31m  |                                    ^^^^^^^^^^^^^^^^^
[0m[31m
[0m[31merror: `async fn` is not yet supported for Python functions.
[0m[31m
[0m[31m       Additional crates such as `pyo3-asyncio` can be used to integrate async Rust and Python. For more information, see https://github.com/PyO3/pyo3/issues/1632
[0m[31m  --> tests/ui/invalid_pyfunctions.rs:10:1
[0m[31m   |
[0m[31m10 | async fn async_function() {}
[0m[31m   | ^^^^^
[0m[31m
[0m[31merror: wildcard argument names are not supported
[0m[31m  --> tests/ui/invalid_pyfunctions.rs:13:22
[0m[31m   |
[0m[31m13 | fn wildcard_argument(_: i32) {}
[0m[31m   |                      ^
[0m[31m
[0m[31merror: destructuring in arguments is not supported
[0m[31m  --> tests/ui/invalid_pyfunctions.rs:16:26
[0m[31m   |
[0m[31m16 | fn destructured_argument((a, b): (i32, i32)) {}
[0m[31m   |                          ^^^^^^
[0m[31m
[0m[31merror: required arguments after an `Option<_>` argument are ambiguous
[0m[31m       = help: add a `#[pyo3(signature)]` annotation on this function to unambiguously specify the default values for all optional parameters
[0m[31m  --> tests/ui/invalid_pyfunctions.rs:19:63
[0m[31m   |
[0m[31m19 | fn function_with_required_after_option(_opt: Option<i32>, _x: i32) {}
[0m[31m   |                                                               ^^^
[0m[31m┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈
[0mnote: If the [0m[31mactual output[0m is the correct output you can bless it by rerunning
      your test with the environment variable TRYBUILD=overwrite

test [0m[1mtests/ui/invalid_pymethods.rs[0m ... [0m[1m[31mmismatch
[0m
[0m[1m[34mEXPECTED:
[0m[34m┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈
[0m[34merror: #[classattr] can only have one argument (of type pyo3::Python)
[0m[34m --> tests/ui/invalid_pymethods.rs:9:34
[0m[34m  |
[0m[34m9 |     fn class_attr_with_args(foo: i32) {}
[0m[34m  |                                  ^^^
[0m[34m
[0m[34merror: `#[classattr]` does not take any arguments
[0m[34m  --> tests/ui/invalid_pymethods.rs:14:5
[0m[34m   |
[0m[34m14 |     #[classattr(foobar)]
[0m[34m   |     ^
[0m[34m
[0m[34merror: static method needs #[staticmethod] attribute
[0m[34m  --> tests/ui/invalid_pymethods.rs:20:5
[0m[34m   |
[0m[34m20 |     fn staticmethod_without_attribute() {}
[0m[34m   |     ^^
[0m[34m
[0m[34merror: unexpected receiver
[0m[34m  --> tests/ui/invalid_pymethods.rs:26:35
[0m[34m   |
[0m[34m26 |     fn staticmethod_with_receiver(&self) {}
[0m[34m   |                                   ^
[0m[34m
[0m[34merror: expected receiver for #[getter]
[0m[34m  --> tests/ui/invalid_pymethods.rs:39:5
[0m[34m   |
[0m[34m39 |     fn getter_without_receiver() {}
[0m[34m   |     ^^
[0m[34m
[0m[34merror: expected receiver for #[setter]
[0m[34m  --> tests/ui/invalid_pymethods.rs:45:5
[0m[34m   |
[0m[34m45 |     fn setter_without_receiver() {}
[0m[34m   |     ^^
[0m[34m
[0m[34merror: static method needs #[staticmethod] attribute
[0m[34m  --> tests/ui/invalid_pymethods.rs:51:5
[0m[34m   |
[0m[34m51 |     fn text_signature_on_call() {}
[0m[34m   |     ^^
[0m[34m
[0m[34merror: `text_signature` not allowed with `getter`
[0m[34m  --> tests/ui/invalid_pymethods.rs:57:12
[0m[34m   |
[0m[34m57 |     #[pyo3(text_signature = "()")]
[0m[34m   |            ^^^^^^^^^^^^^^
[0m[34m
[0m[34merror: `text_signature` not allowed with `setter`
[0m[34m  --> tests/ui/invalid_pymethods.rs:64:12
[0m[34m   |
[0m[34m64 |     #[pyo3(text_signature = "()")]
[0m[34m   |            ^^^^^^^^^^^^^^
[0m[34m
[0m[34merror: `text_signature` not allowed with `classattr`
[0m[34m  --> tests/ui/invalid_pymethods.rs:71:12
[0m[34m   |
[0m[34m71 |     #[pyo3(text_signature = "()")]
[0m[34m   |            ^^^^^^^^^^^^^^
[0m[34m
[0m[34merror: expected a string literal or `None`
[0m[34m  --> tests/ui/invalid_pymethods.rs:77:30
[0m[34m   |
[0m[34m77 |     #[pyo3(text_signature = 1)]
[0m[34m   |                              ^
[0m[34m
[0m[34merror: `text_signature` may only be specified once
[0m[34m  --> tests/ui/invalid_pymethods.rs:84:12
[0m[34m   |
[0m[34m84 |     #[pyo3(text_signature = None)]
[0m[34m   |            ^^^^^^^^^^^^^^
[0m[34m
[0m[34merror: `signature` not allowed with `getter`
[0m[34m  --> tests/ui/invalid_pymethods.rs:91:12
[0m[34m   |
[0m[34m91 |     #[pyo3(signature = ())]
[0m[34m   |            ^^^^^^^^^
[0m[34m
[0m[34merror: `signature` not allowed with `setter`
[0m[34m  --> tests/ui/invalid_pymethods.rs:98:12
[0m[34m   |
[0m[34m98 |     #[pyo3(signature = ())]
[0m[34m   |            ^^^^^^^^^
[0m[34m
[0m[34merror: `signature` not allowed with `classattr`
[0m[34m   --> tests/ui/invalid_pymethods.rs:105:12
[0m[34m    |
[0m[34m105 |     #[pyo3(signature = ())]
[0m[34m    |            ^^^^^^^^^
[0m[34m
[0m[34merror: cannot combine these method types
[0m[34m   --> tests/ui/invalid_pymethods.rs:112:7
[0m[34m    |
[0m[34m112 |     #[staticmethod]
[0m[34m    |       ^^^^^^^^^^^^
[0m[34m
[0m[34merror: Python functions cannot have generic type parameters
[0m[34m   --> tests/ui/invalid_pymethods.rs:118:23
[0m[34m    |
[0m[34m118 |     fn generic_method<T>(value: T) {}
[0m[34m    |                       ^
[0m[34m
[0m[34merror: Python functions cannot have `impl Trait` arguments
[0m[34m   --> tests/ui/invalid_pymethods.rs:123:48
[0m[34m    |
[0m[34m123 |     fn impl_trait_method_first_arg(impl_trait: impl AsRef<PyAny>) {}
[0m[34m    |                                                ^^^^
[0m[34m
[0m[34merror: Python functions cannot have `impl Trait` arguments
[0m[34m   --> tests/ui/invalid_pymethods.rs:128:56
[0m[34m    |
[0m[34m128 |     fn impl_trait_method_second_arg(&self, impl_trait: impl AsRef<PyAny>) {}
[0m[34m    |                                                        ^^^^
[0m[34m
[0m[34merror: `async fn` is not yet supported for Python functions.
[0m[34m
[0m[34m       Additional crates such as `pyo3-asyncio` can be used to integrate async Rust and Python. For more information, see https://github.com/PyO3/pyo3/issues/1632
[0m[34m   --> tests/ui/invalid_pymethods.rs:133:5
[0m[34m    |
[0m[34m133 |     async fn async_method(&self) {}
[0m[34m    |     ^^^^^
[0m[34m
[0m[34merror: `pass_module` cannot be used on Python methods
[0m[34m   --> tests/ui/invalid_pymethods.rs:138:12
[0m[34m    |
[0m[34m138 |     #[pyo3(pass_module)]
[0m[34m    |            ^^^^^^^^^^^
[0m[34m
[0m[34merror: Python objects are shared, so 'self' cannot be moved out of the Python interpreter.
[0m[34m       Try `&self`, `&mut self, `slf: PyRef<'_, Self>` or `slf: PyRefMut<'_, Self>`.
[0m[34m   --> tests/ui/invalid_pymethods.rs:144:29
[0m[34m    |
[0m[34m144 |     fn method_self_by_value(self) {}
[0m[34m    |                             ^^^^
[0m[34m
[0m[34merror[E0119]: conflicting implementations of trait `pyo3::impl_::pyclass::PyClassNewTextSignature<TwoNew>` for type `pyo3::impl_::pyclass::PyClassImplCollector<TwoNew>`
[0m[34m   --> tests/ui/invalid_pymethods.rs:149:1
[0m[34m    |
[0m[34m149 | #[pymethods]
[0m[34m    | ^^^^^^^^^^^^
[0m[34m    | |
[0m[34m    | first implementation here
[0m[34m    | conflicting implementation for `pyo3::impl_::pyclass::PyClassImplCollector<TwoNew>`
[0m[34m    |
[0m[34m    = note: this error originates in the attribute macro `pymethods` (in Nightly builds, run with -Z macro-backtrace for more info)
[0m[34m
[0m[34merror[E0592]: duplicate definitions with name `__pymethod___new____`
[0m[34m   --> tests/ui/invalid_pymethods.rs:149:1
[0m[34m    |
[0m[34m149 | #[pymethods]
[0m[34m    | ^^^^^^^^^^^^
[0m[34m    | |
[0m[34m    | duplicate definitions for `__pymethod___new____`
[0m[34m    | other definition for `__pymethod___new____`
[0m[34m    |
[0m[34m    = note: this error originates in the attribute macro `pymethods` (in Nightly builds, run with -Z macro-backtrace for more info)
[0m[34m
[0m[34merror[E0592]: duplicate definitions with name `__pymethod_func__`
[0m[34m   --> tests/ui/invalid_pymethods.rs:164:1
[0m[34m    |
[0m[34m164 | #[pymethods]
[0m[34m    | ^^^^^^^^^^^^
[0m[34m    | |
[0m[34m    | duplicate definitions for `__pymethod_func__`
[0m[34m    | other definition for `__pymethod_func__`
[0m[34m    |
[0m[34m    = note: this error originates in the attribute macro `pymethods` (in Nightly builds, run with -Z macro-backtrace for more info)
[0m[34m┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈
[0m
[0m[1m[31mACTUAL OUTPUT:
[0m[31m┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈
[0m[31merror: #[classattr] can only have one argument (of type pyo3::Python)
[0m[31m --> tests/ui/invalid_pymethods.rs:9:34
[0m[31m  |
[0m[31m9 |     fn class_attr_with_args(foo: i32) {}
[0m[31m  |                                  ^^^
[0m[31m
[0m[31merror: `#[classattr]` does not take any arguments
[0m[31m  --> tests/ui/invalid_pymethods.rs:14:5
[0m[31m   |
[0m[31m14 |     #[classattr(foobar)]
[0m[31m   |     ^^^^^^^^^^^^^^^^^^^^
[0m[31m
[0m[31merror: static method needs #[staticmethod] attribute
[0m[31m  --> tests/ui/invalid_pymethods.rs:20:5
[0m[31m   |
[0m[31m20 |     fn staticmethod_without_attribute() {}
[0m[31m   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[0m[31m
[0m[31merror: unexpected receiver
[0m[31m  --> tests/ui/invalid_pymethods.rs:26:35
[0m[31m   |
[0m[31m26 |     fn staticmethod_with_receiver(&self) {}
[0m[31m   |                                   ^^^^^
[0m[31m
[0m[31merror: expected receiver for #[getter]
[0m[31m  --> tests/ui/invalid_pymethods.rs:39:5
[0m[31m   |
[0m[31m39 |     fn getter_without_receiver() {}
[0m[31m   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[0m[31m
[0m[31merror: expected receiver for #[setter]
[0m[31m  --> tests/ui/invalid_pymethods.rs:45:5
[0m[31m   |
[0m[31m45 |     fn setter_without_receiver() {}
[0m[31m   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[0m[31m
[0m[31merror: static method needs #[staticmethod] attribute
[0m[31m  --> tests/ui/invalid_pymethods.rs:51:5
[0m[31m   |
[0m[31m51 |     fn text_signature_on_call() {}
[0m[31m   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^
[0m[31m
[0m[31merror: `text_signature` not allowed with `getter`
[0m[31m  --> tests/ui/invalid_pymethods.rs:57:12
[0m[31m   |
[0m[31m57 |     #[pyo3(text_signature = "()")]
[0m[31m   |            ^^^^^^^^^^^^^^
[0m[31m
[0m[31merror: `text_signature` not allowed with `setter`
[0m[31m  --> tests/ui/invalid_pymethods.rs:64:12
[0m[31m   |
[0m[31m64 |     #[pyo3(text_signature = "()")]
[0m[31m   |            ^^^^^^^^^^^^^^
[0m[31m
[0m[31merror: `text_signature` not allowed with `classattr`
[0m[31m  --> tests/ui/invalid_pymethods.rs:71:12
[0m[31m   |
[0m[31m71 |     #[pyo3(text_signature = "()")]
[0m[31m   |            ^^^^^^^^^^^^^^
[0m[31m
[0m[31merror: expected a string literal or `None`
[0m[31m  --> tests/ui/invalid_pymethods.rs:77:30
[0m[31m   |
[0m[31m77 |     #[pyo3(text_signature = 1)]
[0m[31m   |                              ^
[0m[31m
[0m[31merror: `text_signature` may only be specified once
[0m[31m  --> tests/ui/invalid_pymethods.rs:84:12
[0m[31m   |
[0m[31m84 |     #[pyo3(text_signature = None)]
[0m[31m   |            ^^^^^^^^^^^^^^^^^^^^^
[0m[31m
[0m[31merror: `signature` not allowed with `getter`
[0m[31m  --> tests/ui/invalid_pymethods.rs:91:12
[0m[31m   |
[0m[31m91 |     #[pyo3(signature = ())]
[0m[31m   |            ^^^^^^^^^
[0m[31m
[0m[31merror: `signature` not allowed with `setter`
[0m[31m  --> tests/ui/invalid_pymethods.rs:98:12
[0m[31m   |
[0m[31m98 |     #[pyo3(signature = ())]
[0m[31m   |            ^^^^^^^^^
[0m[31m
[0m[31merror: `signature` not allowed with `classattr`
[0m[31m   --> tests/ui/invalid_pymethods.rs:105:12
[0m[31m    |
[0m[31m105 |     #[pyo3(signature = ())]
[0m[31m    |            ^^^^^^^^^
[0m[31m
[0m[31merror: cannot combine these method types
[0m[31m   --> tests/ui/invalid_pymethods.rs:112:7
[0m[31m    |
[0m[31m112 |     #[staticmethod]
[0m[31m    |       ^^^^^^^^^^^^
[0m[31m
[0m[31merror: Python functions cannot have generic type parameters
[0m[31m   --> tests/ui/invalid_pymethods.rs:118:23
[0m[31m    |
[0m[31m118 |     fn generic_method<T>(value: T) {}
[0m[31m    |                       ^
[0m[31m
[0m[31merror: Python functions cannot have `impl Trait` arguments
[0m[31m   --> tests/ui/invalid_pymethods.rs:123:48
[0m[31m    |
[0m[31m123 |     fn impl_trait_method_first_arg(impl_trait: impl AsRef<PyAny>) {}
[0m[31m    |                                                ^^^^^^^^^^^^^^^^^
[0m[31m
[0m[31merror: Python functions cannot have `impl Trait` arguments
[0m[31m   --> tests/ui/invalid_pymethods.rs:128:56
[0m[31m    |
[0m[31m128 |     fn impl_trait_method_second_arg(&self, impl_trait: impl AsRef<PyAny>) {}
[0m[31m    |                                                        ^^^^^^^^^^^^^^^^^
[0m[31m
[0m[31merror: `async fn` is not yet supported for Python functions.
[0m[31m
[0m[31m       Additional crates such as `pyo3-asyncio` can be used to integrate async Rust and Python. For more information, see https://github.com/PyO3/pyo3/issues/1632
[0m[31m   --> tests/ui/invalid_pymethods.rs:133:5
[0m[31m    |
[0m[31m133 |     async fn async_method(&self) {}
[0m[31m    |     ^^^^^
[0m[31m
[0m[31merror: `pass_module` cannot be used on Python methods
[0m[31m   --> tests/ui/invalid_pymethods.rs:138:12
[0m[31m    |
[0m[31m138 |     #[pyo3(pass_module)]
[0m[31m    |            ^^^^^^^^^^^
[0m[31m
[0m[31merror: Python objects are shared, so 'self' cannot be moved out of the Python interpreter.
[0m[31m       Try `&self`, `&mut self, `slf: PyRef<'_, Self>` or `slf: PyRefMut<'_, Self>`.
[0m[31m   --> tests/ui/invalid_pymethods.rs:144:29
[0m[31m    |
[0m[31m144 |     fn method_self_by_value(self) {}
[0m[31m    |                             ^^^^
[0m[31m
[0m[31merror[E0119]: conflicting implementations of trait `pyo3::impl_::pyclass::PyClassNewTextSignature<TwoNew>` for type `pyo3::impl_::pyclass::PyClassImplCollector<TwoNew>`
[0m[31m   --> tests/ui/invalid_pymethods.rs:149:1
[0m[31m    |
[0m[31m149 | #[pymethods]
[0m[31m    | ^^^^^^^^^^^^
[0m[31m    | |
[0m[31m    | first implementation here
[0m[31m    | conflicting implementation for `pyo3::impl_::pyclass::PyClassImplCollector<TwoNew>`
[0m[31m    |
[0m[31m    = note: this error originates in the attribute macro `pymethods` (in Nightly builds, run with -Z macro-backtrace for more info)
[0m[31m
[0m[31merror[E0592]: duplicate definitions with name `__pymethod___new____`
[0m[31m   --> tests/ui/invalid_pymethods.rs:149:1
[0m[31m    |
[0m[31m149 | #[pymethods]
[0m[31m    | ^^^^^^^^^^^^
[0m[31m    | |
[0m[31m    | duplicate definitions for `__pymethod___new____`
[0m[31m    | other definition for `__pymethod___new____`
[0m[31m    |
[0m[31m    = note: this error originates in the attribute macro `pymethods` (in Nightly builds, run with -Z macro-backtrace for more info)
[0m[31m
[0m[31merror[E0592]: duplicate definitions with name `__pymethod_func__`
[0m[31m   --> tests/ui/invalid_pymethods.rs:164:1
[0m[31m    |
[0m[31m164 | #[pymethods]
[0m[31m    | ^^^^^^^^^^^^
[0m[31m    | |
[0m[31m    | duplicate definitions for `__pymethod_func__`
[0m[31m    | other definition for `__pymethod_func__`
[0m[31m    |
[0m[31m    = note: this error originates in the attribute macro `pymethods` (in Nightly builds, run with -Z macro-backtrace for more info)
[0m[31m┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈
[0mnote: If the [0m[31mactual output[0m is the correct output you can bless it by rerunning
      your test with the environment variable TRYBUILD=overwrite

test [0m[1mtests/ui/invalid_intern_arg.rs[0m ... [0m[32mok
[0mtest [0m[1mtests/ui/invalid_frozen_pyclass_borrow.rs[0m ... [0m[1m[31mmismatch
[0m
[0m[1m[34mEXPECTED:
[0m[34m┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈
[0m[34merror: cannot use `#[pyo3(set)]` on a `frozen` class
[0m[34m  --> tests/ui/invalid_frozen_pyclass_borrow.rs:38:12
[0m[34m   |
[0m[34m38 |     #[pyo3(set)]
[0m[34m   |            ^^^
[0m[34m
[0m[34merror[E0271]: type mismatch resolving `<Foo as PyClass>::Frozen == False`
[0m[34m  --> tests/ui/invalid_frozen_pyclass_borrow.rs:11:19
[0m[34m   |
[0m[34m11 |     fn mut_method(&mut self) {}
[0m[34m   |                   ^ expected `False`, found `True`
[0m[34m   |
[0m[34mnote: required by a bound in `extract_pyclass_ref_mut`
[0m[34m  --> src/impl_/extract_argument.rs
[0m[34m   |
[0m[34m   | pub fn extract_pyclass_ref_mut<'a, 'py: 'a, T: PyClass<Frozen = False>>(
[0m[34m   |                                                        ^^^^^^^^^^^^^^ required by this bound in `extract_pyclass_ref_mut`
[0m[34m
[0m[34merror[E0271]: type mismatch resolving `<Foo as PyClass>::Frozen == False`
[0m[34m  --> tests/ui/invalid_frozen_pyclass_borrow.rs:15:33
[0m[34m   |
[0m[34m15 |     let borrow = foo.as_ref(py).borrow_mut();
[0m[34m   |                                 ^^^^^^^^^^ expected `False`, found `True`
[0m[34m   |
[0m[34mnote: required by a bound in `pyo3::PyCell::<T>::borrow_mut`
[0m[34m  --> src/pycell.rs
[0m[34m   |
[0m[34m   |     pub fn borrow_mut(&self) -> PyRefMut<'_, T>
[0m[34m   |            ---------- required by a bound in this associated function
[0m[34m   |     where
[0m[34m   |         T: PyClass<Frozen = False>,
[0m[34m   |                    ^^^^^^^^^^^^^^ required by this bound in `PyCell::<T>::borrow_mut`
[0m[34m
[0m[34merror[E0271]: type mismatch resolving `<ImmutableChild as PyClass>::Frozen == False`
[0m[34m  --> tests/ui/invalid_frozen_pyclass_borrow.rs:25:35
[0m[34m   |
[0m[34m25 |     let borrow = child.as_ref(py).borrow_mut();
[0m[34m   |                                   ^^^^^^^^^^ expected `False`, found `True`
[0m[34m   |
[0m[34mnote: required by a bound in `pyo3::PyCell::<T>::borrow_mut`
[0m[34m  --> src/pycell.rs
[0m[34m   |
[0m[34m   |     pub fn borrow_mut(&self) -> PyRefMut<'_, T>
[0m[34m   |            ---------- required by a bound in this associated function
[0m[34m   |     where
[0m[34m   |         T: PyClass<Frozen = False>,
[0m[34m   |                    ^^^^^^^^^^^^^^ required by this bound in `PyCell::<T>::borrow_mut`
[0m[34m
[0m[34merror[E0271]: type mismatch resolving `<MutableBase as PyClass>::Frozen == True`
[0m[34m  --> tests/ui/invalid_frozen_pyclass_borrow.rs:29:11
[0m[34m   |
[0m[34m29 |     class.get();
[0m[34m   |           ^^^ expected `True`, found `False`
[0m[34m   |
[0m[34mnote: required by a bound in `pyo3::Py::<T>::get`
[0m[34m  --> src/instance.rs
[0m[34m   |
[0m[34m   |     pub fn get(&self) -> &T
[0m[34m   |            --- required by a bound in this associated function
[0m[34m   |     where
[0m[34m   |         T: PyClass<Frozen = True> + Sync,
[0m[34m   |                    ^^^^^^^^^^^^^ required by this bound in `Py::<T>::get`
[0m[34m
[0m[34merror[E0271]: type mismatch resolving `<MutableBase as PyClass>::Frozen == True`
[0m[34m  --> tests/ui/invalid_frozen_pyclass_borrow.rs:33:11
[0m[34m   |
[0m[34m33 |     class.get();
[0m[34m   |           ^^^ expected `True`, found `False`
[0m[34m   |
[0m[34mnote: required by a bound in `pyo3::PyCell::<T>::get`
[0m[34m  --> src/pycell.rs
[0m[34m   |
[0m[34m   |     pub fn get(&self) -> &T
[0m[34m   |            --- required by a bound in this associated function
[0m[34m   |     where
[0m[34m   |         T: PyClass<Frozen = True> + Sync,
[0m[34m   |                    ^^^^^^^^^^^^^ required by this bound in `PyCell::<T>::get`
[0m[34m┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈
[0m
[0m[1m[31mACTUAL OUTPUT:
[0m[31m┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈
[0m[31merror: cannot use `#[pyo3(set)]` on a `frozen` class
[0m[31m  --> tests/ui/invalid_frozen_pyclass_borrow.rs:38:12
[0m[31m   |
[0m[31m38 |     #[pyo3(set)]
[0m[31m   |            ^^^
[0m[31m
[0m[31merror[E0271]: type mismatch resolving `<Foo as PyClass>::Frozen == False`
[0m[31m  --> tests/ui/invalid_frozen_pyclass_borrow.rs:11:19
[0m[31m   |
[0m[31m11 |     fn mut_method(&mut self) {}
[0m[31m   |                   ^^^^^^^^^ expected `False`, found `True`
[0m[31m   |
[0m[31mnote: required by a bound in `extract_pyclass_ref_mut`
[0m[31m  --> src/impl_/extract_argument.rs
[0m[31m   |
[0m[31m   | pub fn extract_pyclass_ref_mut<'a, 'py: 'a, T: PyClass<Frozen = False>>(
[0m[31m   |                                                        ^^^^^^^^^^^^^^ required by this bound in `extract_pyclass_ref_mut`
[0m[31m
[0m[31merror[E0271]: type mismatch resolving `<Foo as PyClass>::Frozen == False`
[0m[31m  --> tests/ui/invalid_frozen_pyclass_borrow.rs:15:33
[0m[31m   |
[0m[31m15 |     let borrow = foo.as_ref(py).borrow_mut();
[0m[31m   |                                 ^^^^^^^^^^ expected `False`, found `True`
[0m[31m   |
[0m[31mnote: required by a bound in `pyo3::PyCell::<T>::borrow_mut`
[0m[31m  --> src/pycell.rs
[0m[31m   |
[0m[31m   |     pub fn borrow_mut(&self) -> PyRefMut<'_, T>
[0m[31m   |            ---------- required by a bound in this associated function
[0m[31m   |     where
[0m[31m   |         T: PyClass<Frozen = False>,
[0m[31m   |                    ^^^^^^^^^^^^^^ required by this bound in `PyCell::<T>::borrow_mut`
[0m[31m
[0m[31merror[E0271]: type mismatch resolving `<ImmutableChild as PyClass>::Frozen == False`
[0m[31m  --> tests/ui/invalid_frozen_pyclass_borrow.rs:25:35
[0m[31m   |
[0m[31m25 |     let borrow = child.as_ref(py).borrow_mut();
[0m[31m   |                                   ^^^^^^^^^^ expected `False`, found `True`
[0m[31m   |
[0m[31mnote: required by a bound in `pyo3::PyCell::<T>::borrow_mut`
[0m[31m  --> src/pycell.rs
[0m[31m   |
[0m[31m   |     pub fn borrow_mut(&self) -> PyRefMut<'_, T>
[0m[31m   |            ---------- required by a bound in this associated function
[0m[31m   |     where
[0m[31m   |         T: PyClass<Frozen = False>,
[0m[31m   |                    ^^^^^^^^^^^^^^ required by this bound in `PyCell::<T>::borrow_mut`
[0m[31m
[0m[31merror[E0271]: type mismatch resolving `<MutableBase as PyClass>::Frozen == True`
[0m[31m  --> tests/ui/invalid_frozen_pyclass_borrow.rs:29:11
[0m[31m   |
[0m[31m29 |     class.get();
[0m[31m   |           ^^^ expected `True`, found `False`
[0m[31m   |
[0m[31mnote: required by a bound in `pyo3::Py::<T>::get`
[0m[31m  --> src/instance.rs
[0m[31m   |
[0m[31m   |     pub fn get(&self) -> &T
[0m[31m   |            --- required by a bound in this associated function
[0m[31m   |     where
[0m[31m   |         T: PyClass<Frozen = True> + Sync,
[0m[31m   |                    ^^^^^^^^^^^^^ required by this bound in `Py::<T>::get`
[0m[31m
[0m[31merror[E0271]: type mismatch resolving `<MutableBase as PyClass>::Frozen == True`
[0m[31m  --> tests/ui/invalid_frozen_pyclass_borrow.rs:33:11
[0m[31m   |
[0m[31m33 |     class.get();
[0m[31m   |           ^^^ expected `True`, found `False`
[0m[31m   |
[0m[31mnote: required by a bound in `pyo3::PyCell::<T>::get`
[0m[31m  --> src/pycell.rs
[0m[31m   |
[0m[31m   |     pub fn get(&self) -> &T
[0m[31m   |            --- required by a bound in this associated function
[0m[31m   |     where
[0m[31m   |         T: PyClass<Frozen = True> + Sync,
[0m[31m   |                    ^^^^^^^^^^^^^ required by this bound in `PyCell::<T>::get`
[0m[31m┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈
[0mnote: If the [0m[31mactual output[0m is the correct output you can bless it by rerunning
      your test with the environment variable TRYBUILD=overwrite

test [0m[1mtests/ui/invalid_pymethod_receiver.rs[0m ... [0m[1m[31mmismatch
[0m
[0m[1m[34mEXPECTED:
[0m[34m┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈
[0m[34merror[E0277]: the trait bound `i32: From<&PyCell<MyClass>>` is not satisfied
[0m[34m --> tests/ui/invalid_pymethod_receiver.rs:8:43
[0m[34m  |
[0m[34m8 |     fn method_with_invalid_self_type(slf: i32, py: Python<'_>, index: u32) {}
[0m[34m  |                                           ^^^ the trait `From<&PyCell<MyClass>>` is not implemented for `i32`
[0m[34m  |
[0m[34m  = help: the following other types implement trait `From<T>`:
[0m[34m            <i32 as From<NonZeroI32>>
[0m[34m            <i32 as From<bool>>
[0m[34m            <i32 as From<i16>>
[0m[34m            <i32 as From<i8>>
[0m[34m            <i32 as From<u16>>
[0m[34m            <i32 as From<u8>>
[0m[34m  = note: required for `&PyCell<MyClass>` to implement `Into<i32>`
[0m[34m  = note: required for `i32` to implement `TryFrom<&PyCell<MyClass>>`
[0m[34m┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈
[0m
[0m[1m[31mACTUAL OUTPUT:
[0m[31m┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈
[0m[31merror[E0277]: the trait bound `i32: From<&PyCell<MyClass>>` is not satisfied
[0m[31m --> tests/ui/invalid_pymethod_receiver.rs:8:43
[0m[31m  |
[0m[31m8 |     fn method_with_invalid_self_type(slf: i32, py: Python<'_>, index: u32) {}
[0m[31m  |                                           ^^^ the trait `From<&PyCell<MyClass>>` is not implemented for `i32`
[0m[31m  |
[0m[31m  = help: the following other types implement trait `From<T>`:
[0m[31m            <i32 as From<bool>>
[0m[31m            <i32 as From<i8>>
[0m[31m            <i32 as From<i16>>
[0m[31m            <i32 as From<u8>>
[0m[31m            <i32 as From<u16>>
[0m[31m            <i32 as From<NonZeroI32>>
[0m[31m  = note: required for `&PyCell<MyClass>` to implement `Into<i32>`
[0m[31m  = note: required for `i32` to implement `TryFrom<&PyCell<MyClass>>`
[0m[31m┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈
[0mnote: If the [0m[31mactual output[0m is the correct output you can bless it by rerunning
      your test with the environment variable TRYBUILD=overwrite

test [0m[1mtests/ui/missing_intopy.rs[0m ... [0m[1m[31mmismatch
[0m
[0m[1m[34mEXPECTED:
[0m[34m┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈
[0m[34merror[E0277]: the trait bound `Blah: IntoPy<Py<PyAny>>` is not satisfied
[0m[34m --> tests/ui/missing_intopy.rs:3:1
[0m[34m  |
[0m[34m3 | #[pyo3::pyfunction]
[0m[34m  | ^^^^^^^^^^^^^^^^^^^ the trait `IntoPy<Py<PyAny>>` is not implemented for `Blah`
[0m[34m  |
[0m[34m  = help: the following other types implement trait `IntoPy<T>`:
[0m[34m            <&'a OsString as IntoPy<Py<PyAny>>>
[0m[34m            <&'a Path as IntoPy<Py<PyAny>>>
[0m[34m            <&'a PathBuf as IntoPy<Py<PyAny>>>
[0m[34m            <&'a PyErr as IntoPy<Py<PyAny>>>
[0m[34m            <&'a String as IntoPy<Py<PyAny>>>
[0m[34m            <&'a [u8] as IntoPy<Py<PyAny>>>
[0m[34m            <&'a str as IntoPy<Py<PyAny>>>
[0m[34m            <&'a str as IntoPy<Py<PyString>>>
[0m[34m          and $N others
[0m[34m  = note: required for `Blah` to implement `OkWrap<Blah>`
[0m[34m  = note: this error originates in the attribute macro `pyo3::pyfunction` (in Nightly builds, run with -Z macro-backtrace for more info)
[0m[34m┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈
[0m
[0m[1m[31mACTUAL OUTPUT:
[0m[31m┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈
[0m[31merror[E0277]: the trait bound `Blah: IntoPy<Py<PyAny>>` is not satisfied
[0m[31m --> tests/ui/missing_intopy.rs:3:1
[0m[31m  |
[0m[31m3 | #[pyo3::pyfunction]
[0m[31m  | ^^^^^^^^^^^^^^^^^^^ the trait `IntoPy<Py<PyAny>>` is not implemented for `Blah`
[0m[31m  |
[0m[31m  = help: the following other types implement trait `IntoPy<T>`:
[0m[31m            <bool as IntoPy<Py<PyAny>>>
[0m[31m            <char as IntoPy<Py<PyAny>>>
[0m[31m            <isize as IntoPy<Py<PyAny>>>
[0m[31m            <i8 as IntoPy<Py<PyAny>>>
[0m[31m            <i16 as IntoPy<Py<PyAny>>>
[0m[31m            <i32 as IntoPy<Py<PyAny>>>
[0m[31m            <i64 as IntoPy<Py<PyAny>>>
[0m[31m            <i128 as IntoPy<Py<PyAny>>>
[0m[31m          and $N others
[0m[31m  = note: required for `Blah` to implement `OkWrap<Blah>`
[0m[31m  = note: this error originates in the attribute macro `pyo3::pyfunction` (in Nightly builds, run with -Z macro-backtrace for more info)
[0m[31m┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈
[0mnote: If the [0m[31mactual output[0m is the correct output you can bless it by rerunning
      your test with the environment variable TRYBUILD=overwrite

test [0m[1mtests/ui/invalid_result_conversion.rs[0m ... [0m[1m[31mmismatch
[0m
[0m[1m[34mEXPECTED:
[0m[34m┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈
[0m[34merror[E0277]: the trait bound `PyErr: From<MyError>` is not satisfied
[0m[34m  --> tests/ui/invalid_result_conversion.rs:21:1
[0m[34m   |
[0m[34m21 | #[pyfunction]
[0m[34m   | ^^^^^^^^^^^^^ the trait `From<MyError>` is not implemented for `PyErr`
[0m[34m   |
[0m[34m   = help: the following other types implement trait `From<T>`:
[0m[34m             <PyErr as From<&CancelledError>>
[0m[34m             <PyErr as From<&IncompleteReadError>>
[0m[34m             <PyErr as From<&InvalidStateError>>
[0m[34m             <PyErr as From<&LimitOverrunError>>
[0m[34m             <PyErr as From<&PanicException>>
[0m[34m             <PyErr as From<&PyArithmeticError>>
[0m[34m             <PyErr as From<&PyAssertionError>>
[0m[34m             <PyErr as From<&PyAttributeError>>
[0m[34m           and $N others
[0m[34m   = note: required for `MyError` to implement `Into<PyErr>`
[0m[34m   = note: this error originates in the attribute macro `pyfunction` (in Nightly builds, run with -Z macro-backtrace for more info)
[0m[34m┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈
[0m
[0m[1m[31mACTUAL OUTPUT:
[0m[31m┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈
[0m[31merror[E0277]: the trait bound `PyErr: From<MyError>` is not satisfied
[0m[31m  --> tests/ui/invalid_result_conversion.rs:21:1
[0m[31m   |
[0m[31m21 | #[pyfunction]
[0m[31m   | ^^^^^^^^^^^^^ the trait `From<MyError>` is not implemented for `PyErr`
[0m[31m   |
[0m[31m   = help: the following other types implement trait `From<T>`:
[0m[31m             <PyErr as From<PyBorrowError>>
[0m[31m             <PyErr as From<PyBorrowMutError>>
[0m[31m             <PyErr as From<std::io::Error>>
[0m[31m             <PyErr as From<PyDowncastError<'a>>>
[0m[31m             <PyErr as From<NulError>>
[0m[31m             <PyErr as From<IntoStringError>>
[0m[31m             <PyErr as From<FromUtf8Error>>
[0m[31m             <PyErr as From<FromUtf16Error>>
[0m[31m           and $N others
[0m[31m   = note: required for `MyError` to implement `Into<PyErr>`
[0m[31m   = note: this error originates in the attribute macro `pyfunction` (in Nightly builds, run with -Z macro-backtrace for more info)
[0m[31m┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈
[0mnote: If the [0m[31mactual output[0m is the correct output you can bless it by rerunning
      your test with the environment variable TRYBUILD=overwrite

test [0m[1mtests/ui/not_send.rs[0m ... [0m[32mok
[0mtest [0m[1mtests/ui/not_send2.rs[0m ... [0m[32mok
[0mtest [0m[1mtests/ui/get_set_all.rs[0m ... [0m[32mok
[0mtest [0m[1mtests/ui/traverse.rs[0m ... [0m[32mok
[0m

test test_compile_errors ... FAILED

failures:

---- test_compile_errors stdout ----
thread 'test_compile_errors' panicked at '14 of 29 tests failed', /Users/vidurmodgil/.cargo/registry/src/index.crates.io-6f17d22bba15001f/trybuild-1.0.82/src/run.rs:101:13
note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace


failures:
    test_compile_errors

test result: FAILED. 0 passed; 1 failed; 0 ignored; 0 measured; 0 filtered out; finished in 3.59s

error: test failed, to rerun pass `--test test_compile_error`
   Compiling proc-macro2 v1.0.66
   Compiling autocfg v1.1.0
   Compiling libc v0.2.147
   Compiling target-lexicon v0.12.10
   Compiling unicode-ident v1.0.11
    Checking cfg-if v1.0.0
   Compiling once_cell v1.18.0
    Checking scopeguard v1.2.0
   Compiling serde v1.0.175
   Compiling libm v0.2.7
   Compiling crossbeam-utils v0.8.16
   Compiling parking_lot_core v0.9.8
    Checking smallvec v1.11.0
    Checking ryu v1.0.15
    Checking itoa v1.0.9
   Compiling memchr v2.5.0
   Compiling memoffset v0.9.0
   Compiling num-traits v0.2.16
   Compiling lock_api v0.4.10
   Compiling crossbeam-epoch v0.9.15
   Compiling serde_json v1.0.103
    Checking unindent v0.2.2
    Checking getrandom v0.2.10
   Compiling rayon-core v1.11.0
   Compiling quote v1.0.32
   Compiling pyo3-build-config v0.19.1 (/Users/vidurmodgil/Desktop/Data/pyo3/pyo3-build-config)
   Compiling indoc v2.0.3
    Checking parking_lot v0.12.1
    Checking either v1.9.0
    Checking rand_core v0.6.4
   Compiling syn v2.0.27
    Checking crossbeam-deque v0.8.3
    Checking crossbeam-channel v0.5.8
    Checking num_cpus v1.16.0
    Checking ppv-lite86 v0.2.17
    Checking unicode-width v0.1.10
    Checking regex-syntax v0.7.4
    Checking plotters-backend v0.3.5
    Checking bitflags v1.3.2
    Checking textwrap v0.11.0
    Checking rand_chacha v0.3.1
    Checking csv-core v0.1.10
    Checking itertools v0.10.5
    Checking lazy_static v1.4.0
    Checking plotters-svg v0.3.5
    Checking half v1.8.2
   Compiling rust_decimal v1.30.0
    Checking same-file v1.0.6
   Compiling trybuild v1.0.82
    Checking core-foundation-sys v0.8.4
    Checking cast v0.3.0
    Checking iana-time-zone v0.1.57
    Checking walkdir v2.3.3
    Checking rand v0.8.5
    Checking plotters v0.3.5
    Checking clap v2.34.0
    Checking rayon v1.7.0
    Checking rand_xorshift v0.3.0
    Checking time v0.1.45
    Checking atty v0.2.14
    Checking regex-automata v0.3.3
    Checking unarray v0.1.4
    Checking oorandom v11.1.3
    Checking arrayvec v0.7.4
    Checking glob v0.3.1
    Checking byteorder v1.4.3
    Checking termcolor v1.2.0
    Checking regex-syntax v0.6.29
    Checking chrono v0.4.26
    Checking assert_approx_eq v1.1.0
    Checking criterion-plot v0.4.5
    Checking widestring v0.5.1
    Checking send_wrapper v0.6.0
   Compiling pyo3-ffi v0.19.1 (/Users/vidurmodgil/Desktop/Data/pyo3/pyo3-ffi)
   Compiling pyo3 v0.19.1 (/Users/vidurmodgil/Desktop/Data/pyo3)
   Compiling pyo3-pytests v0.1.0 (/Users/vidurmodgil/Desktop/Data/pyo3/pytests)
    Checking regex v1.9.1
    Checking proptest v1.2.0
   Compiling pyo3-macros-backend v0.19.1 (/Users/vidurmodgil/Desktop/Data/pyo3/pyo3-macros-backend)
error: unreachable statement
  --> pyo3-macros-backend/src/intopydict.rs:53:17
   |
52 |                 panic!("{:?}", map);
   |                 ------------------- any code following this expression is unreachable
53 |                 return map;
   |                 ^^^^^^^^^^^ unreachable statement
   |
   = note: `-D unreachable-code` implied by `-D warnings`

   Compiling serde_derive v1.0.175
error: this expression creates a reference which is immediately dereferenced by the compiler
  --> pyo3-macros-backend/src/intopydict.rs:25:99
   |
25 |     pub fn new(name: String, type_: &str) -> Self { Self { name, attr_type: Self::check_primitive(&type_) } }
   |                                                                                                   ^^^^^^ help: change this to: `type_`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow
   = note: `-D clippy::needless-borrow` implied by `-D warnings`

error: unneeded `return` statement
  --> pyo3-macros-backend/src/intopydict.rs:38:168
   |
38 | ...f32" | "f64" | "char" | "bool" | "&str" | "String" => return Pyo3Type::Primitive,
   |                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
   = note: `-D clippy::needless-return` implied by `-D warnings`
help: remove `return`
   |
38 |             "i8" | "i16" | "i32" | "i64" | "i128" | "isize" | "u8" | "u16" | "u32" | "u64" | "u128" | "usize" | "f32" | "f64" | "char" | "bool" | "&str" | "String" => Pyo3Type::Primitive,
   |                                                                                                                                                                        ~~~~~~~~~~~~~~~~~~~

error: unneeded `return` statement
  --> pyo3-macros-backend/src/intopydict.rs:39:18
   |
39 |             _ => return  Pyo3Type::NonPrimitive,
   |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
   |
39 |             _ => Pyo3Type::NonPrimitive,
   |                  ~~~~~~~~~~~~~~~~~~~~~~

error: useless conversion to the same type: `std::str::Split<'_, [char; 2]>`
  --> pyo3-macros-backend/src/intopydict.rs:30:44
   |
30 |                 let attr_list: Vec<&str> = attr_type.split(['<', '>']).into_iter().collect();
   |                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider removing `.into_iter()`: `attr_type.split(['<', '>'])`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_conversion
   = note: `-D clippy::useless-conversion` implied by `-D warnings`

error: unneeded `return` statement
  --> pyo3-macros-backend/src/intopydict.rs:45:90
   |
45 | ...kedList" | "VecDeque" => return Pyo3Type::CollectionSing(Box::new(Self::handle_collection(&attr_type[1..]))), 
   |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
   |
45 |             "BTreeSet" | "BinaryHeap" | "Vec" | "HashSet" | "LinkedList" | "VecDeque" => Pyo3Type::CollectionSing(Box::new(Self::handle_collection(&attr_type[1..]))), 
   |                                                                                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error: unneeded `return` statement
  --> pyo3-macros-backend/src/intopydict.rs:53:17
   |
53 |                 return map;
   |                 ^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
   |
53 -                 return map;
53 +                 map
   |

error: unneeded `return` statement
  --> pyo3-macros-backend/src/intopydict.rs:55:168
   |
55 | ...f32" | "f64" | "char" | "bool" | "&str" | "String" => return Pyo3Type::Primitive,
   |                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
   |
55 |             "i8" | "i16" | "i32" | "i64" | "i128" | "isize" | "u8" | "u16" | "u32" | "u64" | "u128" | "usize" | "f32" | "f64" | "char" | "bool" | "&str" | "String" => Pyo3Type::Primitive,
   |                                                                                                                                                                        ~~~~~~~~~~~~~~~~~~~

error: unneeded `return` statement
  --> pyo3-macros-backend/src/intopydict.rs:56:18
   |
56 |             _ => return Pyo3Type::NonPrimitive
   |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
   |
56 |             _ => Pyo3Type::NonPrimitive
   |                  ~~~~~~~~~~~~~~~~~~~~~~

error: single-character string constant used as pattern
  --> pyo3-macros-backend/src/intopydict.rs:48:51
   |
48 |                 let types: Vec<&str> = join.split(",").collect();
   |                                                   ^^^ help: try using a `char` instead: `','`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_pattern
   = note: `-D clippy::single-char-pattern` implied by `-D warnings`

error: single-character string constant used as pattern
  --> pyo3-macros-backend/src/intopydict.rs:49:53
   |
49 |                 let key: Vec<&str> = types[0].split("<").collect();
   |                                                     ^^^ help: try using a `char` instead: `'<'`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_pattern

error: single-character string constant used as pattern
  --> pyo3-macros-backend/src/intopydict.rs:50:53
   |
50 |                 let val: Vec<&str> = types[1].split("<").collect();
   |                                                     ^^^ help: try using a `char` instead: `'<'`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_pattern

error: unneeded `return` statement
  --> pyo3-macros-backend/src/intopydict.rs:82:9
   |
82 |         return Ok(Pyo3Collection(field_collection));
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
   |
82 -         return Ok(Pyo3Collection(field_collection));
82 +         Ok(Pyo3Collection(field_collection))
   |

error: single-character string constant used as pattern
  --> pyo3-macros-backend/src/intopydict.rs:64:97
   |
64 |         let binding = tok_stream.to_string().as_str().replace(" ", "").replace("{", "").replace("}", "");
   |                                                                                                 ^^^ help: try using a `char` instead: `'}'`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_pattern

error: single-character string constant used as pattern
  --> pyo3-macros-backend/src/intopydict.rs:64:80
   |
64 |         let binding = tok_stream.to_string().as_str().replace(" ", "").replace("{", "").replace("}", "");
   |                                                                                ^^^ help: try using a `char` instead: `'{'`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_pattern

error: single-character string constant used as pattern
  --> pyo3-macros-backend/src/intopydict.rs:64:63
   |
64 |         let binding = tok_stream.to_string().as_str().replace(" ", "").replace("{", "").replace("}", "");
   |                                                               ^^^ help: try using a `char` instead: `' '`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_pattern

error: single-character string constant used as pattern
  --> pyo3-macros-backend/src/intopydict.rs:66:50
   |
66 |         let tok_split: Vec<&str> = binding.split(",").collect();
   |                                                  ^^^ help: try using a `char` instead: `','`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_pattern

error: it is more concise to loop over references to containers instead of using explicit iteration methods
  --> pyo3-macros-backend/src/intopydict.rs:74:18
   |
74 |         for i in tok_split.iter() {
   |                  ^^^^^^^^^^^^^^^^ help: to write this more concisely, try: `&tok_split`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#explicit_iter_loop
   = note: requested on the command line with `-D clippy::explicit-iter-loop`

error: single-character string constant used as pattern
  --> pyo3-macros-backend/src/intopydict.rs:76:65
   |
76 |             let tok_bind: Vec<&str> = tok_params_unparsed.split(":").collect();
   |                                                                 ^^^ help: try using a `char` instead: `':'`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_pattern

error: explicit call to `.into_iter()` in function argument accepting `IntoIterator`
   --> pyo3-macros-backend/src/intopydict.rs:91:23
    |
91  |         self.0.extend(rhs.0.into_iter());
    |                       ^^^^^^^^^^^^^^^^^ help: consider removing the `.into_iter()`: `rhs.0`
    |
note: this parameter accepts any `IntoIterator`, so you don't need to call `.into_iter()`
   --> /Users/vidurmodgil/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/iter/traits/collect.rs:371:18
    |
371 |     fn extend<T: IntoIterator<Item = A>>(&mut self, iter: T);
    |                  ^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_conversion

error: unneeded `return` statement
   --> pyo3-macros-backend/src/intopydict.rs:128:5
    |
128 |     return body.parse().unwrap();
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
128 -     return body.parse().unwrap();
128 +     body.parse().unwrap()
    |

error: it is more concise to loop over references to containers instead of using explicit iteration methods
  --> pyo3-macros-backend/src/intopydict.rs:98:18
   |
98 |     for field in dict_fields.0.iter() {
   |                  ^^^^^^^^^^^^^^^^^^^^ help: to write this more concisely, try: `&dict_fields.0`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#explicit_iter_loop

error: single-character string constant used as pattern
   --> pyo3-macros-backend/src/intopydict.rs:108:53
    |
108 |                 let non_class_ident = ident.replace(".", "_");
    |                                                     ^^^ help: try using a `char` instead: `'.'`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_pattern

error: `todo` should not be present in production code
   --> pyo3-macros-backend/src/intopydict.rs:118:44
    |
118 |                     Pyo3Type::Primitive => todo!(),
    |                                            ^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#todo
    = note: requested on the command line with `-D clippy::todo`

error: `todo` should not be present in production code
   --> pyo3-macros-backend/src/intopydict.rs:119:47
    |
119 |                     Pyo3Type::NonPrimitive => todo!(),
    |                                               ^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#todo

error: `todo` should not be present in production code
   --> pyo3-macros-backend/src/intopydict.rs:120:52
    |
120 |                     Pyo3Type::CollectionSing(_) => todo!(),
    |                                                    ^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#todo

error: `todo` should not be present in production code
   --> pyo3-macros-backend/src/intopydict.rs:121:44
    |
121 |                     Pyo3Type::Map(_, _) => todo!(),
    |                                            ^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#todo

error: unneeded `return` statement
   --> pyo3-macros-backend/src/intopydict.rs:133:32
    |
133 |           Pyo3Type::Primitive => return format!("
    |  ________________________________^
134 | |             let mut pylist{}{} = pyo3::types::PyList::empty(py);
135 | |             for i in {}.into_iter() {{
136 | |                 pylist{}{}.append(i).expect(\"Bad element in set_item\");
137 | |             }};
138 | |         ", counter, non_class_ident, ident, counter, non_class_ident),
    | |_____________________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
133 ~         Pyo3Type::Primitive => format!("
134 +             let mut pylist{}{} = pyo3::types::PyList::empty(py);
135 +             for i in {}.into_iter() {{
136 +                 pylist{}{}.append(i).expect(\"Bad element in set_item\");
137 +             }};
138 ~         ", counter, non_class_ident, ident, counter, non_class_ident),
    |

error: unneeded `return` statement
   --> pyo3-macros-backend/src/intopydict.rs:139:35
    |
139 |           Pyo3Type::NonPrimitive => return format!("
    |  ___________________________________^
140 | |         let mut pylist{}{} = pyo3::types::PyList::empty(py);
141 | |         for i in {}.into_iter() {{
142 | |             pylist{}{}.append(i.into_py_dict(py)).expect(\"Bad element in set_item\");
143 | |         }};
144 | |     ", counter, non_class_ident, ident, counter, non_class_ident),
    | |_________________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
139 ~         Pyo3Type::NonPrimitive => format!("
140 +         let mut pylist{}{} = pyo3::types::PyList::empty(py);
141 +         for i in {}.into_iter() {{
142 +             pylist{}{}.append(i.into_py_dict(py)).expect(\"Bad element in set_item\");
143 +         }};
144 ~     ", counter, non_class_ident, ident, counter, non_class_ident),
    |

error: unneeded `return` statement
   --> pyo3-macros-backend/src/intopydict.rs:153:13
    |
153 |             return out;
    |             ^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
153 -             return out;
153 +             out
    |

error: `todo` should not be present in production code
   --> pyo3-macros-backend/src/intopydict.rs:155:32
    |
155 |         Pyo3Type::Map(_, _) => todo!(),
    |                                ^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#todo

error: unneeded `return` statement
   --> pyo3-macros-backend/src/intopydict.rs:175:9
    |
175 |         return generics_parsed;
    |         ^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
175 -         return generics_parsed;
175 +         generics_parsed
    |

error: unneeded `return` statement
   --> pyo3-macros-backend/src/intopydict.rs:177:9
    |
177 |         return String::new();
    |         ^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
177 -         return String::new();
177 +         String::new()
    |

error: length comparison to zero
   --> pyo3-macros-backend/src/intopydict.rs:160:8
    |
160 |     if generics.params.len() > 0 {
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^ help: using `!is_empty` is clearer and more explicit: `!generics.params.is_empty()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero
    = note: `-D clippy::len-zero` implied by `-D warnings`

error: could not compile `pyo3-macros-backend` (lib) due to 34 previous errors
warning: build failed, waiting for other jobs to finish...
error: could not compile `pyo3-macros-backend` (lib) due to 34 previous errors
error: could not compile `pyo3-macros-backend` (lib) due to 34 previous errors
error: could not compile `pyo3-macros-backend` (lib test) due to 34 previous errors
   Compiling pyo3-build-config v0.19.1 (/Users/vidurmodgil/Desktop/Data/pyo3/pyo3-build-config)
   Compiling pyo3-macros-backend v0.19.1 (/Users/vidurmodgil/Desktop/Data/pyo3/pyo3-macros-backend)
    Checking serde v1.0.175
error: unreachable statement
  --> pyo3-macros-backend/src/intopydict.rs:53:17
   |
52 |                 panic!("{:?}", map);
   |                 ------------------- any code following this expression is unreachable
53 |                 return map;
   |                 ^^^^^^^^^^^ unreachable statement
   |
   = note: `-D unreachable-code` implied by `-D warnings`

   Compiling pyo3-ffi v0.19.1 (/Users/vidurmodgil/Desktop/Data/pyo3/pyo3-ffi)
   Compiling pyo3 v0.19.1 (/Users/vidurmodgil/Desktop/Data/pyo3)
   Compiling pyo3-pytests v0.1.0 (/Users/vidurmodgil/Desktop/Data/pyo3/pytests)
    Checking serde_json v1.0.103
    Checking csv v1.2.2
    Checking basic-toml v0.1.4
    Checking serde_cbor v0.11.2
    Checking rust_decimal v1.30.0
error: this expression creates a reference which is immediately dereferenced by the compiler
  --> pyo3-macros-backend/src/intopydict.rs:25:99
   |
25 |     pub fn new(name: String, type_: &str) -> Self { Self { name, attr_type: Self::check_primitive(&type_) } }
   |                                                                                                   ^^^^^^ help: change this to: `type_`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow
   = note: `-D clippy::needless-borrow` implied by `-D warnings`

error: unneeded `return` statement
  --> pyo3-macros-backend/src/intopydict.rs:38:168
   |
38 | ...f32" | "f64" | "char" | "bool" | "&str" | "String" => return Pyo3Type::Primitive,
   |                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
   = note: `-D clippy::needless-return` implied by `-D warnings`
help: remove `return`
   |
38 |             "i8" | "i16" | "i32" | "i64" | "i128" | "isize" | "u8" | "u16" | "u32" | "u64" | "u128" | "usize" | "f32" | "f64" | "char" | "bool" | "&str" | "String" => Pyo3Type::Primitive,
   |                                                                                                                                                                        ~~~~~~~~~~~~~~~~~~~

error: unneeded `return` statement
  --> pyo3-macros-backend/src/intopydict.rs:39:18
   |
39 |             _ => return  Pyo3Type::NonPrimitive,
   |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
   |
39 |             _ => Pyo3Type::NonPrimitive,
   |                  ~~~~~~~~~~~~~~~~~~~~~~

error: useless conversion to the same type: `std::str::Split<'_, [char; 2]>`
  --> pyo3-macros-backend/src/intopydict.rs:30:44
   |
30 |                 let attr_list: Vec<&str> = attr_type.split(['<', '>']).into_iter().collect();
   |                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider removing `.into_iter()`: `attr_type.split(['<', '>'])`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_conversion
   = note: `-D clippy::useless-conversion` implied by `-D warnings`

error: unneeded `return` statement
  --> pyo3-macros-backend/src/intopydict.rs:45:90
   |
45 | ...kedList" | "VecDeque" => return Pyo3Type::CollectionSing(Box::new(Self::handle_collection(&attr_type[1..]))), 
   |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
   |
45 |             "BTreeSet" | "BinaryHeap" | "Vec" | "HashSet" | "LinkedList" | "VecDeque" => Pyo3Type::CollectionSing(Box::new(Self::handle_collection(&attr_type[1..]))), 
   |                                                                                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error: unneeded `return` statement
  --> pyo3-macros-backend/src/intopydict.rs:53:17
   |
53 |                 return map;
   |                 ^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
   |
53 -                 return map;
53 +                 map
   |

error: unneeded `return` statement
  --> pyo3-macros-backend/src/intopydict.rs:55:168
   |
55 | ...f32" | "f64" | "char" | "bool" | "&str" | "String" => return Pyo3Type::Primitive,
   |                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
   |
55 |             "i8" | "i16" | "i32" | "i64" | "i128" | "isize" | "u8" | "u16" | "u32" | "u64" | "u128" | "usize" | "f32" | "f64" | "char" | "bool" | "&str" | "String" => Pyo3Type::Primitive,
   |                                                                                                                                                                        ~~~~~~~~~~~~~~~~~~~

error: unneeded `return` statement
  --> pyo3-macros-backend/src/intopydict.rs:56:18
   |
56 |             _ => return Pyo3Type::NonPrimitive
   |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
   |
56 |             _ => Pyo3Type::NonPrimitive
   |                  ~~~~~~~~~~~~~~~~~~~~~~

error: single-character string constant used as pattern
  --> pyo3-macros-backend/src/intopydict.rs:48:51
   |
48 |                 let types: Vec<&str> = join.split(",").collect();
   |                                                   ^^^ help: try using a `char` instead: `','`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_pattern
   = note: `-D clippy::single-char-pattern` implied by `-D warnings`

error: single-character string constant used as pattern
  --> pyo3-macros-backend/src/intopydict.rs:49:53
   |
49 |                 let key: Vec<&str> = types[0].split("<").collect();
   |                                                     ^^^ help: try using a `char` instead: `'<'`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_pattern

error: single-character string constant used as pattern
  --> pyo3-macros-backend/src/intopydict.rs:50:53
   |
50 |                 let val: Vec<&str> = types[1].split("<").collect();
   |                                                     ^^^ help: try using a `char` instead: `'<'`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_pattern

error: unneeded `return` statement
  --> pyo3-macros-backend/src/intopydict.rs:82:9
   |
82 |         return Ok(Pyo3Collection(field_collection));
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
   |
82 -         return Ok(Pyo3Collection(field_collection));
82 +         Ok(Pyo3Collection(field_collection))
   |

error: single-character string constant used as pattern
  --> pyo3-macros-backend/src/intopydict.rs:64:97
   |
64 |         let binding = tok_stream.to_string().as_str().replace(" ", "").replace("{", "").replace("}", "");
   |                                                                                                 ^^^ help: try using a `char` instead: `'}'`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_pattern

error: single-character string constant used as pattern
  --> pyo3-macros-backend/src/intopydict.rs:64:80
   |
64 |         let binding = tok_stream.to_string().as_str().replace(" ", "").replace("{", "").replace("}", "");
   |                                                                                ^^^ help: try using a `char` instead: `'{'`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_pattern

error: single-character string constant used as pattern
  --> pyo3-macros-backend/src/intopydict.rs:64:63
   |
64 |         let binding = tok_stream.to_string().as_str().replace(" ", "").replace("{", "").replace("}", "");
   |                                                               ^^^ help: try using a `char` instead: `' '`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_pattern

error: single-character string constant used as pattern
  --> pyo3-macros-backend/src/intopydict.rs:66:50
   |
66 |         let tok_split: Vec<&str> = binding.split(",").collect();
   |                                                  ^^^ help: try using a `char` instead: `','`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_pattern

error: it is more concise to loop over references to containers instead of using explicit iteration methods
  --> pyo3-macros-backend/src/intopydict.rs:74:18
   |
74 |         for i in tok_split.iter() {
   |                  ^^^^^^^^^^^^^^^^ help: to write this more concisely, try: `&tok_split`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#explicit_iter_loop
   = note: requested on the command line with `-D clippy::explicit-iter-loop`

error: single-character string constant used as pattern
  --> pyo3-macros-backend/src/intopydict.rs:76:65
   |
76 |             let tok_bind: Vec<&str> = tok_params_unparsed.split(":").collect();
   |                                                                 ^^^ help: try using a `char` instead: `':'`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_pattern

error: explicit call to `.into_iter()` in function argument accepting `IntoIterator`
   --> pyo3-macros-backend/src/intopydict.rs:91:23
    |
91  |         self.0.extend(rhs.0.into_iter());
    |                       ^^^^^^^^^^^^^^^^^ help: consider removing the `.into_iter()`: `rhs.0`
    |
note: this parameter accepts any `IntoIterator`, so you don't need to call `.into_iter()`
   --> /Users/vidurmodgil/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/iter/traits/collect.rs:371:18
    |
371 |     fn extend<T: IntoIterator<Item = A>>(&mut self, iter: T);
    |                  ^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_conversion

error: unneeded `return` statement
   --> pyo3-macros-backend/src/intopydict.rs:128:5
    |
128 |     return body.parse().unwrap();
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
128 -     return body.parse().unwrap();
128 +     body.parse().unwrap()
    |

error: it is more concise to loop over references to containers instead of using explicit iteration methods
  --> pyo3-macros-backend/src/intopydict.rs:98:18
   |
98 |     for field in dict_fields.0.iter() {
   |                  ^^^^^^^^^^^^^^^^^^^^ help: to write this more concisely, try: `&dict_fields.0`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#explicit_iter_loop

error: single-character string constant used as pattern
   --> pyo3-macros-backend/src/intopydict.rs:108:53
    |
108 |                 let non_class_ident = ident.replace(".", "_");
    |                                                     ^^^ help: try using a `char` instead: `'.'`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_pattern

error: `todo` should not be present in production code
   --> pyo3-macros-backend/src/intopydict.rs:118:44
    |
118 |                     Pyo3Type::Primitive => todo!(),
    |                                            ^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#todo
    = note: requested on the command line with `-D clippy::todo`

error: `todo` should not be present in production code
   --> pyo3-macros-backend/src/intopydict.rs:119:47
    |
119 |                     Pyo3Type::NonPrimitive => todo!(),
    |                                               ^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#todo

error: `todo` should not be present in production code
   --> pyo3-macros-backend/src/intopydict.rs:120:52
    |
120 |                     Pyo3Type::CollectionSing(_) => todo!(),
    |                                                    ^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#todo

error: `todo` should not be present in production code
   --> pyo3-macros-backend/src/intopydict.rs:121:44
    |
121 |                     Pyo3Type::Map(_, _) => todo!(),
    |                                            ^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#todo

error: unneeded `return` statement
   --> pyo3-macros-backend/src/intopydict.rs:133:32
    |
133 |           Pyo3Type::Primitive => return format!("
    |  ________________________________^
134 | |             let mut pylist{}{} = pyo3::types::PyList::empty(py);
135 | |             for i in {}.into_iter() {{
136 | |                 pylist{}{}.append(i).expect(\"Bad element in set_item\");
137 | |             }};
138 | |         ", counter, non_class_ident, ident, counter, non_class_ident),
    | |_____________________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
133 ~         Pyo3Type::Primitive => format!("
134 +             let mut pylist{}{} = pyo3::types::PyList::empty(py);
135 +             for i in {}.into_iter() {{
136 +                 pylist{}{}.append(i).expect(\"Bad element in set_item\");
137 +             }};
138 ~         ", counter, non_class_ident, ident, counter, non_class_ident),
    |

error: unneeded `return` statement
   --> pyo3-macros-backend/src/intopydict.rs:139:35
    |
139 |           Pyo3Type::NonPrimitive => return format!("
    |  ___________________________________^
140 | |         let mut pylist{}{} = pyo3::types::PyList::empty(py);
141 | |         for i in {}.into_iter() {{
142 | |             pylist{}{}.append(i.into_py_dict(py)).expect(\"Bad element in set_item\");
143 | |         }};
144 | |     ", counter, non_class_ident, ident, counter, non_class_ident),
    | |_________________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
139 ~         Pyo3Type::NonPrimitive => format!("
140 +         let mut pylist{}{} = pyo3::types::PyList::empty(py);
141 +         for i in {}.into_iter() {{
142 +             pylist{}{}.append(i.into_py_dict(py)).expect(\"Bad element in set_item\");
143 +         }};
144 ~     ", counter, non_class_ident, ident, counter, non_class_ident),
    |

error: unneeded `return` statement
   --> pyo3-macros-backend/src/intopydict.rs:153:13
    |
153 |             return out;
    |             ^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
153 -             return out;
153 +             out
    |

error: `todo` should not be present in production code
   --> pyo3-macros-backend/src/intopydict.rs:155:32
    |
155 |         Pyo3Type::Map(_, _) => todo!(),
    |                                ^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#todo

error: unneeded `return` statement
   --> pyo3-macros-backend/src/intopydict.rs:175:9
    |
175 |         return generics_parsed;
    |         ^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
175 -         return generics_parsed;
175 +         generics_parsed
    |

error: unneeded `return` statement
   --> pyo3-macros-backend/src/intopydict.rs:177:9
    |
177 |         return String::new();
    |         ^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
177 -         return String::new();
177 +         String::new()
    |

error: length comparison to zero
   --> pyo3-macros-backend/src/intopydict.rs:160:8
    |
160 |     if generics.params.len() > 0 {
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^ help: using `!is_empty` is clearer and more explicit: `!generics.params.is_empty()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero
    = note: `-D clippy::len-zero` implied by `-D warnings`

error: could not compile `pyo3-macros-backend` (lib test) due to 34 previous errors
warning: build failed, waiting for other jobs to finish...
error: could not compile `pyo3-macros-backend` (lib) due to 34 previous errors
error: could not compile `pyo3-macros-backend` (lib) due to 34 previous errors
error: could not compile `pyo3-macros-backend` (lib) due to 34 previous errors
    Checking once_cell v1.18.0
   Compiling version_check v0.9.4
   Compiling num-integer v0.1.45
   Compiling num-bigint v0.4.3
   Compiling anyhow v1.0.72
    Checking allocator-api2 v0.2.16
   Compiling eyre v0.6.8
   Compiling pyo3 v0.19.1 (/Users/vidurmodgil/Desktop/Data/pyo3)
   Compiling pyo3-macros-backend v0.19.1 (/Users/vidurmodgil/Desktop/Data/pyo3/pyo3-macros-backend)
    Checking equivalent v1.0.1
    Checking indenter v0.3.3
    Checking num-complex v0.4.3
    Checking tinytemplate v1.2.1
    Checking trybuild v1.0.82
   Compiling ahash v0.8.3
    Checking criterion v0.3.6
   Compiling pyo3-build-config v0.19.1 (/Users/vidurmodgil/Desktop/Data/pyo3/pyo3-build-config)
    Checking hashbrown v0.14.0
error: unreachable statement
  --> pyo3-macros-backend/src/intopydict.rs:53:17
   |
52 |                 panic!("{:?}", map);
   |                 ------------------- any code following this expression is unreachable
53 |                 return map;
   |                 ^^^^^^^^^^^ unreachable statement
   |
   = note: `-D unreachable-code` implied by `-D warnings`

    Checking indexmap v2.0.0
error: this expression creates a reference which is immediately dereferenced by the compiler
  --> pyo3-macros-backend/src/intopydict.rs:25:99
   |
25 |     pub fn new(name: String, type_: &str) -> Self { Self { name, attr_type: Self::check_primitive(&type_) } }
   |                                                                                                   ^^^^^^ help: change this to: `type_`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow
   = note: `-D clippy::needless-borrow` implied by `-D warnings`

error: unneeded `return` statement
  --> pyo3-macros-backend/src/intopydict.rs:38:168
   |
38 | ...f32" | "f64" | "char" | "bool" | "&str" | "String" => return Pyo3Type::Primitive,
   |                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
   = note: `-D clippy::needless-return` implied by `-D warnings`
help: remove `return`
   |
38 |             "i8" | "i16" | "i32" | "i64" | "i128" | "isize" | "u8" | "u16" | "u32" | "u64" | "u128" | "usize" | "f32" | "f64" | "char" | "bool" | "&str" | "String" => Pyo3Type::Primitive,
   |                                                                                                                                                                        ~~~~~~~~~~~~~~~~~~~

error: unneeded `return` statement
  --> pyo3-macros-backend/src/intopydict.rs:39:18
   |
39 |             _ => return  Pyo3Type::NonPrimitive,
   |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
   |
39 |             _ => Pyo3Type::NonPrimitive,
   |                  ~~~~~~~~~~~~~~~~~~~~~~

error: useless conversion to the same type: `std::str::Split<'_, [char; 2]>`
  --> pyo3-macros-backend/src/intopydict.rs:30:44
   |
30 |                 let attr_list: Vec<&str> = attr_type.split(['<', '>']).into_iter().collect();
   |                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider removing `.into_iter()`: `attr_type.split(['<', '>'])`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_conversion
   = note: `-D clippy::useless-conversion` implied by `-D warnings`

error: unneeded `return` statement
  --> pyo3-macros-backend/src/intopydict.rs:45:90
   |
45 | ...kedList" | "VecDeque" => return Pyo3Type::CollectionSing(Box::new(Self::handle_collection(&attr_type[1..]))), 
   |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
   |
45 |             "BTreeSet" | "BinaryHeap" | "Vec" | "HashSet" | "LinkedList" | "VecDeque" => Pyo3Type::CollectionSing(Box::new(Self::handle_collection(&attr_type[1..]))), 
   |                                                                                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error: unneeded `return` statement
  --> pyo3-macros-backend/src/intopydict.rs:53:17
   |
53 |                 return map;
   |                 ^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
   |
53 -                 return map;
53 +                 map
   |

error: unneeded `return` statement
  --> pyo3-macros-backend/src/intopydict.rs:55:168
   |
55 | ...f32" | "f64" | "char" | "bool" | "&str" | "String" => return Pyo3Type::Primitive,
   |                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
   |
55 |             "i8" | "i16" | "i32" | "i64" | "i128" | "isize" | "u8" | "u16" | "u32" | "u64" | "u128" | "usize" | "f32" | "f64" | "char" | "bool" | "&str" | "String" => Pyo3Type::Primitive,
   |                                                                                                                                                                        ~~~~~~~~~~~~~~~~~~~

error: unneeded `return` statement
  --> pyo3-macros-backend/src/intopydict.rs:56:18
   |
56 |             _ => return Pyo3Type::NonPrimitive
   |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
   |
56 |             _ => Pyo3Type::NonPrimitive
   |                  ~~~~~~~~~~~~~~~~~~~~~~

error: single-character string constant used as pattern
  --> pyo3-macros-backend/src/intopydict.rs:48:51
   |
48 |                 let types: Vec<&str> = join.split(",").collect();
   |                                                   ^^^ help: try using a `char` instead: `','`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_pattern
   = note: `-D clippy::single-char-pattern` implied by `-D warnings`

error: single-character string constant used as pattern
  --> pyo3-macros-backend/src/intopydict.rs:49:53
   |
49 |                 let key: Vec<&str> = types[0].split("<").collect();
   |                                                     ^^^ help: try using a `char` instead: `'<'`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_pattern

error: single-character string constant used as pattern
  --> pyo3-macros-backend/src/intopydict.rs:50:53
   |
50 |                 let val: Vec<&str> = types[1].split("<").collect();
   |                                                     ^^^ help: try using a `char` instead: `'<'`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_pattern

error: unneeded `return` statement
  --> pyo3-macros-backend/src/intopydict.rs:82:9
   |
82 |         return Ok(Pyo3Collection(field_collection));
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
   |
82 -         return Ok(Pyo3Collection(field_collection));
82 +         Ok(Pyo3Collection(field_collection))
   |

error: single-character string constant used as pattern
  --> pyo3-macros-backend/src/intopydict.rs:64:97
   |
64 |         let binding = tok_stream.to_string().as_str().replace(" ", "").replace("{", "").replace("}", "");
   |                                                                                                 ^^^ help: try using a `char` instead: `'}'`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_pattern

error: single-character string constant used as pattern
  --> pyo3-macros-backend/src/intopydict.rs:64:80
   |
64 |         let binding = tok_stream.to_string().as_str().replace(" ", "").replace("{", "").replace("}", "");
   |                                                                                ^^^ help: try using a `char` instead: `'{'`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_pattern

error: single-character string constant used as pattern
  --> pyo3-macros-backend/src/intopydict.rs:64:63
   |
64 |         let binding = tok_stream.to_string().as_str().replace(" ", "").replace("{", "").replace("}", "");
   |                                                               ^^^ help: try using a `char` instead: `' '`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_pattern

error: single-character string constant used as pattern
  --> pyo3-macros-backend/src/intopydict.rs:66:50
   |
66 |         let tok_split: Vec<&str> = binding.split(",").collect();
   |                                                  ^^^ help: try using a `char` instead: `','`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_pattern

error: it is more concise to loop over references to containers instead of using explicit iteration methods
  --> pyo3-macros-backend/src/intopydict.rs:74:18
   |
74 |         for i in tok_split.iter() {
   |                  ^^^^^^^^^^^^^^^^ help: to write this more concisely, try: `&tok_split`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#explicit_iter_loop
   = note: requested on the command line with `-D clippy::explicit-iter-loop`

error: single-character string constant used as pattern
  --> pyo3-macros-backend/src/intopydict.rs:76:65
   |
76 |             let tok_bind: Vec<&str> = tok_params_unparsed.split(":").collect();
   |                                                                 ^^^ help: try using a `char` instead: `':'`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_pattern

error: explicit call to `.into_iter()` in function argument accepting `IntoIterator`
   --> pyo3-macros-backend/src/intopydict.rs:91:23
    |
91  |         self.0.extend(rhs.0.into_iter());
    |                       ^^^^^^^^^^^^^^^^^ help: consider removing the `.into_iter()`: `rhs.0`
    |
note: this parameter accepts any `IntoIterator`, so you don't need to call `.into_iter()`
   --> /Users/vidurmodgil/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/iter/traits/collect.rs:371:18
    |
371 |     fn extend<T: IntoIterator<Item = A>>(&mut self, iter: T);
    |                  ^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_conversion

error: unneeded `return` statement
   --> pyo3-macros-backend/src/intopydict.rs:128:5
    |
128 |     return body.parse().unwrap();
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
128 -     return body.parse().unwrap();
128 +     body.parse().unwrap()
    |

error: it is more concise to loop over references to containers instead of using explicit iteration methods
  --> pyo3-macros-backend/src/intopydict.rs:98:18
   |
98 |     for field in dict_fields.0.iter() {
   |                  ^^^^^^^^^^^^^^^^^^^^ help: to write this more concisely, try: `&dict_fields.0`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#explicit_iter_loop

error: single-character string constant used as pattern
   --> pyo3-macros-backend/src/intopydict.rs:108:53
    |
108 |                 let non_class_ident = ident.replace(".", "_");
    |                                                     ^^^ help: try using a `char` instead: `'.'`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_pattern

error: `todo` should not be present in production code
   --> pyo3-macros-backend/src/intopydict.rs:118:44
    |
118 |                     Pyo3Type::Primitive => todo!(),
    |                                            ^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#todo
    = note: requested on the command line with `-D clippy::todo`

error: `todo` should not be present in production code
   --> pyo3-macros-backend/src/intopydict.rs:119:47
    |
119 |                     Pyo3Type::NonPrimitive => todo!(),
    |                                               ^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#todo

error: `todo` should not be present in production code
   --> pyo3-macros-backend/src/intopydict.rs:120:52
    |
120 |                     Pyo3Type::CollectionSing(_) => todo!(),
    |                                                    ^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#todo

error: `todo` should not be present in production code
   --> pyo3-macros-backend/src/intopydict.rs:121:44
    |
121 |                     Pyo3Type::Map(_, _) => todo!(),
    |                                            ^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#todo

error: unneeded `return` statement
   --> pyo3-macros-backend/src/intopydict.rs:133:32
    |
133 |           Pyo3Type::Primitive => return format!("
    |  ________________________________^
134 | |             let mut pylist{}{} = pyo3::types::PyList::empty(py);
135 | |             for i in {}.into_iter() {{
136 | |                 pylist{}{}.append(i).expect(\"Bad element in set_item\");
137 | |             }};
138 | |         ", counter, non_class_ident, ident, counter, non_class_ident),
    | |_____________________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
133 ~         Pyo3Type::Primitive => format!("
134 +             let mut pylist{}{} = pyo3::types::PyList::empty(py);
135 +             for i in {}.into_iter() {{
136 +                 pylist{}{}.append(i).expect(\"Bad element in set_item\");
137 +             }};
138 ~         ", counter, non_class_ident, ident, counter, non_class_ident),
    |

error: unneeded `return` statement
   --> pyo3-macros-backend/src/intopydict.rs:139:35
    |
139 |           Pyo3Type::NonPrimitive => return format!("
    |  ___________________________________^
140 | |         let mut pylist{}{} = pyo3::types::PyList::empty(py);
141 | |         for i in {}.into_iter() {{
142 | |             pylist{}{}.append(i.into_py_dict(py)).expect(\"Bad element in set_item\");
143 | |         }};
144 | |     ", counter, non_class_ident, ident, counter, non_class_ident),
    | |_________________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
139 ~         Pyo3Type::NonPrimitive => format!("
140 +         let mut pylist{}{} = pyo3::types::PyList::empty(py);
141 +         for i in {}.into_iter() {{
142 +             pylist{}{}.append(i.into_py_dict(py)).expect(\"Bad element in set_item\");
143 +         }};
144 ~     ", counter, non_class_ident, ident, counter, non_class_ident),
    |

error: unneeded `return` statement
   --> pyo3-macros-backend/src/intopydict.rs:153:13
    |
153 |             return out;
    |             ^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
153 -             return out;
153 +             out
    |

error: `todo` should not be present in production code
   --> pyo3-macros-backend/src/intopydict.rs:155:32
    |
155 |         Pyo3Type::Map(_, _) => todo!(),
    |                                ^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#todo

error: unneeded `return` statement
   --> pyo3-macros-backend/src/intopydict.rs:175:9
    |
175 |         return generics_parsed;
    |         ^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
175 -         return generics_parsed;
175 +         generics_parsed
    |

error: unneeded `return` statement
   --> pyo3-macros-backend/src/intopydict.rs:177:9
    |
177 |         return String::new();
    |         ^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
177 -         return String::new();
177 +         String::new()
    |

error: length comparison to zero
   --> pyo3-macros-backend/src/intopydict.rs:160:8
    |
160 |     if generics.params.len() > 0 {
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^ help: using `!is_empty` is clearer and more explicit: `!generics.params.is_empty()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero
    = note: `-D clippy::len-zero` implied by `-D warnings`

error: could not compile `pyo3-macros-backend` (lib) due to 34 previous errors
warning: build failed, waiting for other jobs to finish...
error: could not compile `pyo3-macros-backend` (lib test) due to 34 previous errors
error: could not compile `pyo3-macros-backend` (lib) due to 34 previous errors
error: could not compile `pyo3-macros-backend` (lib) due to 34 previous errors
   Compiling pyo3-macros-backend v0.19.1 (/Users/vidurmodgil/Desktop/Data/pyo3/pyo3-macros-backend)
   Compiling pyo3 v0.19.1 (/Users/vidurmodgil/Desktop/Data/pyo3)
   Compiling pyo3-build-config v0.19.1 (/Users/vidurmodgil/Desktop/Data/pyo3/pyo3-build-config)
error: unreachable statement
  --> pyo3-macros-backend/src/intopydict.rs:53:17
   |
52 |                 panic!("{:?}", map);
   |                 ------------------- any code following this expression is unreachable
53 |                 return map;
   |                 ^^^^^^^^^^^ unreachable statement
   |
   = note: `-D unreachable-code` implied by `-D warnings`

error: this expression creates a reference which is immediately dereferenced by the compiler
  --> pyo3-macros-backend/src/intopydict.rs:25:99
   |
25 |     pub fn new(name: String, type_: &str) -> Self { Self { name, attr_type: Self::check_primitive(&type_) } }
   |                                                                                                   ^^^^^^ help: change this to: `type_`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow
   = note: `-D clippy::needless-borrow` implied by `-D warnings`

error: unneeded `return` statement
  --> pyo3-macros-backend/src/intopydict.rs:38:168
   |
38 | ...f32" | "f64" | "char" | "bool" | "&str" | "String" => return Pyo3Type::Primitive,
   |                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
   = note: `-D clippy::needless-return` implied by `-D warnings`
help: remove `return`
   |
38 |             "i8" | "i16" | "i32" | "i64" | "i128" | "isize" | "u8" | "u16" | "u32" | "u64" | "u128" | "usize" | "f32" | "f64" | "char" | "bool" | "&str" | "String" => Pyo3Type::Primitive,
   |                                                                                                                                                                        ~~~~~~~~~~~~~~~~~~~

error: unneeded `return` statement
  --> pyo3-macros-backend/src/intopydict.rs:39:18
   |
39 |             _ => return  Pyo3Type::NonPrimitive,
   |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
   |
39 |             _ => Pyo3Type::NonPrimitive,
   |                  ~~~~~~~~~~~~~~~~~~~~~~

error: useless conversion to the same type: `std::str::Split<'_, [char; 2]>`
  --> pyo3-macros-backend/src/intopydict.rs:30:44
   |
30 |                 let attr_list: Vec<&str> = attr_type.split(['<', '>']).into_iter().collect();
   |                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider removing `.into_iter()`: `attr_type.split(['<', '>'])`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_conversion
   = note: `-D clippy::useless-conversion` implied by `-D warnings`

error: unneeded `return` statement
  --> pyo3-macros-backend/src/intopydict.rs:45:90
   |
45 | ...kedList" | "VecDeque" => return Pyo3Type::CollectionSing(Box::new(Self::handle_collection(&attr_type[1..]))), 
   |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
   |
45 |             "BTreeSet" | "BinaryHeap" | "Vec" | "HashSet" | "LinkedList" | "VecDeque" => Pyo3Type::CollectionSing(Box::new(Self::handle_collection(&attr_type[1..]))), 
   |                                                                                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

error: unneeded `return` statement
  --> pyo3-macros-backend/src/intopydict.rs:53:17
   |
53 |                 return map;
   |                 ^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
   |
53 -                 return map;
53 +                 map
   |

error: unneeded `return` statement
  --> pyo3-macros-backend/src/intopydict.rs:55:168
   |
55 | ...f32" | "f64" | "char" | "bool" | "&str" | "String" => return Pyo3Type::Primitive,
   |                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
   |
55 |             "i8" | "i16" | "i32" | "i64" | "i128" | "isize" | "u8" | "u16" | "u32" | "u64" | "u128" | "usize" | "f32" | "f64" | "char" | "bool" | "&str" | "String" => Pyo3Type::Primitive,
   |                                                                                                                                                                        ~~~~~~~~~~~~~~~~~~~

error: unneeded `return` statement
  --> pyo3-macros-backend/src/intopydict.rs:56:18
   |
56 |             _ => return Pyo3Type::NonPrimitive
   |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
   |
56 |             _ => Pyo3Type::NonPrimitive
   |                  ~~~~~~~~~~~~~~~~~~~~~~

error: single-character string constant used as pattern
  --> pyo3-macros-backend/src/intopydict.rs:48:51
   |
48 |                 let types: Vec<&str> = join.split(",").collect();
   |                                                   ^^^ help: try using a `char` instead: `','`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_pattern
   = note: `-D clippy::single-char-pattern` implied by `-D warnings`

error: single-character string constant used as pattern
  --> pyo3-macros-backend/src/intopydict.rs:49:53
   |
49 |                 let key: Vec<&str> = types[0].split("<").collect();
   |                                                     ^^^ help: try using a `char` instead: `'<'`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_pattern

error: single-character string constant used as pattern
  --> pyo3-macros-backend/src/intopydict.rs:50:53
   |
50 |                 let val: Vec<&str> = types[1].split("<").collect();
   |                                                     ^^^ help: try using a `char` instead: `'<'`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_pattern

error: unneeded `return` statement
  --> pyo3-macros-backend/src/intopydict.rs:82:9
   |
82 |         return Ok(Pyo3Collection(field_collection));
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
   |
82 -         return Ok(Pyo3Collection(field_collection));
82 +         Ok(Pyo3Collection(field_collection))
   |

error: single-character string constant used as pattern
  --> pyo3-macros-backend/src/intopydict.rs:64:97
   |
64 |         let binding = tok_stream.to_string().as_str().replace(" ", "").replace("{", "").replace("}", "");
   |                                                                                                 ^^^ help: try using a `char` instead: `'}'`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_pattern

error: single-character string constant used as pattern
  --> pyo3-macros-backend/src/intopydict.rs:64:80
   |
64 |         let binding = tok_stream.to_string().as_str().replace(" ", "").replace("{", "").replace("}", "");
   |                                                                                ^^^ help: try using a `char` instead: `'{'`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_pattern

error: single-character string constant used as pattern
  --> pyo3-macros-backend/src/intopydict.rs:64:63
   |
64 |         let binding = tok_stream.to_string().as_str().replace(" ", "").replace("{", "").replace("}", "");
   |                                                               ^^^ help: try using a `char` instead: `' '`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_pattern

error: single-character string constant used as pattern
  --> pyo3-macros-backend/src/intopydict.rs:66:50
   |
66 |         let tok_split: Vec<&str> = binding.split(",").collect();
   |                                                  ^^^ help: try using a `char` instead: `','`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_pattern

error: it is more concise to loop over references to containers instead of using explicit iteration methods
  --> pyo3-macros-backend/src/intopydict.rs:74:18
   |
74 |         for i in tok_split.iter() {
   |                  ^^^^^^^^^^^^^^^^ help: to write this more concisely, try: `&tok_split`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#explicit_iter_loop
   = note: requested on the command line with `-D clippy::explicit-iter-loop`

error: single-character string constant used as pattern
  --> pyo3-macros-backend/src/intopydict.rs:76:65
   |
76 |             let tok_bind: Vec<&str> = tok_params_unparsed.split(":").collect();
   |                                                                 ^^^ help: try using a `char` instead: `':'`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_pattern

error: explicit call to `.into_iter()` in function argument accepting `IntoIterator`
   --> pyo3-macros-backend/src/intopydict.rs:91:23
    |
91  |         self.0.extend(rhs.0.into_iter());
    |                       ^^^^^^^^^^^^^^^^^ help: consider removing the `.into_iter()`: `rhs.0`
    |
note: this parameter accepts any `IntoIterator`, so you don't need to call `.into_iter()`
   --> /Users/vidurmodgil/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/iter/traits/collect.rs:371:18
    |
371 |     fn extend<T: IntoIterator<Item = A>>(&mut self, iter: T);
    |                  ^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_conversion

error: unneeded `return` statement
   --> pyo3-macros-backend/src/intopydict.rs:128:5
    |
128 |     return body.parse().unwrap();
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
128 -     return body.parse().unwrap();
128 +     body.parse().unwrap()
    |

error: it is more concise to loop over references to containers instead of using explicit iteration methods
  --> pyo3-macros-backend/src/intopydict.rs:98:18
   |
98 |     for field in dict_fields.0.iter() {
   |                  ^^^^^^^^^^^^^^^^^^^^ help: to write this more concisely, try: `&dict_fields.0`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#explicit_iter_loop

error: single-character string constant used as pattern
   --> pyo3-macros-backend/src/intopydict.rs:108:53
    |
108 |                 let non_class_ident = ident.replace(".", "_");
    |                                                     ^^^ help: try using a `char` instead: `'.'`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_pattern

error: `todo` should not be present in production code
   --> pyo3-macros-backend/src/intopydict.rs:118:44
    |
118 |                     Pyo3Type::Primitive => todo!(),
    |                                            ^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#todo
    = note: requested on the command line with `-D clippy::todo`

error: `todo` should not be present in production code
   --> pyo3-macros-backend/src/intopydict.rs:119:47
    |
119 |                     Pyo3Type::NonPrimitive => todo!(),
    |                                               ^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#todo

error: `todo` should not be present in production code
   --> pyo3-macros-backend/src/intopydict.rs:120:52
    |
120 |                     Pyo3Type::CollectionSing(_) => todo!(),
    |                                                    ^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#todo

error: `todo` should not be present in production code
   --> pyo3-macros-backend/src/intopydict.rs:121:44
    |
121 |                     Pyo3Type::Map(_, _) => todo!(),
    |                                            ^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#todo

error: unneeded `return` statement
   --> pyo3-macros-backend/src/intopydict.rs:133:32
    |
133 |           Pyo3Type::Primitive => return format!("
    |  ________________________________^
134 | |             let mut pylist{}{} = pyo3::types::PyList::empty(py);
135 | |             for i in {}.into_iter() {{
136 | |                 pylist{}{}.append(i).expect(\"Bad element in set_item\");
137 | |             }};
138 | |         ", counter, non_class_ident, ident, counter, non_class_ident),
    | |_____________________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
133 ~         Pyo3Type::Primitive => format!("
134 +             let mut pylist{}{} = pyo3::types::PyList::empty(py);
135 +             for i in {}.into_iter() {{
136 +                 pylist{}{}.append(i).expect(\"Bad element in set_item\");
137 +             }};
138 ~         ", counter, non_class_ident, ident, counter, non_class_ident),
    |

error: unneeded `return` statement
   --> pyo3-macros-backend/src/intopydict.rs:139:35
    |
139 |           Pyo3Type::NonPrimitive => return format!("
    |  ___________________________________^
140 | |         let mut pylist{}{} = pyo3::types::PyList::empty(py);
141 | |         for i in {}.into_iter() {{
142 | |             pylist{}{}.append(i.into_py_dict(py)).expect(\"Bad element in set_item\");
143 | |         }};
144 | |     ", counter, non_class_ident, ident, counter, non_class_ident),
    | |_________________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
139 ~         Pyo3Type::NonPrimitive => format!("
140 +         let mut pylist{}{} = pyo3::types::PyList::empty(py);
141 +         for i in {}.into_iter() {{
142 +             pylist{}{}.append(i.into_py_dict(py)).expect(\"Bad element in set_item\");
143 +         }};
144 ~     ", counter, non_class_ident, ident, counter, non_class_ident),
    |

error: unneeded `return` statement
   --> pyo3-macros-backend/src/intopydict.rs:153:13
    |
153 |             return out;
    |             ^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
153 -             return out;
153 +             out
    |

error: `todo` should not be present in production code
   --> pyo3-macros-backend/src/intopydict.rs:155:32
    |
155 |         Pyo3Type::Map(_, _) => todo!(),
    |                                ^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#todo

error: unneeded `return` statement
   --> pyo3-macros-backend/src/intopydict.rs:175:9
    |
175 |         return generics_parsed;
    |         ^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
175 -         return generics_parsed;
175 +         generics_parsed
    |

error: unneeded `return` statement
   --> pyo3-macros-backend/src/intopydict.rs:177:9
    |
177 |         return String::new();
    |         ^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
177 -         return String::new();
177 +         String::new()
    |

error: length comparison to zero
   --> pyo3-macros-backend/src/intopydict.rs:160:8
    |
160 |     if generics.params.len() > 0 {
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^ help: using `!is_empty` is clearer and more explicit: `!generics.params.is_empty()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero
    = note: `-D clippy::len-zero` implied by `-D warnings`

error: could not compile `pyo3-macros-backend` (lib) due to 34 previous errors
warning: build failed, waiting for other jobs to finish...
error: could not compile `pyo3-macros-backend` (lib test) due to 34 previous errors
error: could not compile `pyo3-macros-backend` (lib) due to 34 previous errors
error: could not compile `pyo3-macros-backend` (lib) due to 34 previous errors
Diff in /Users/vidurmodgil/Desktop/Data/pyo3/pyo3-macros/src/lib.rs at line 7:
 use proc_macro::TokenStream;
 use proc_macro2::TokenStream as TokenStream2;
 use pyo3_macros_backend::{
[31m-    build_derive_from_pyobject, build_py_class, build_py_enum, build_py_function, build_py_methods,
(B[m[31m-    get_doc, process_functions_in_module, pymodule_impl, build_derive_into_pydict, PyClassArgs, PyClassMethodsType,
(B[m[31m-    PyFunctionOptions, PyModuleOptions, parse_generics, Pyo3Collection,
(B[m[32m+    build_derive_from_pyobject, build_derive_into_pydict, build_py_class, build_py_enum,
(B[m[32m+    build_py_function, build_py_methods, get_doc, parse_generics, process_functions_in_module,
(B[m[32m+    pymodule_impl, PyClassArgs, PyClassMethodsType, PyFunctionOptions, PyModuleOptions,
(B[m[32m+    Pyo3Collection,
(B[m };
 use quote::{quote, ToTokens};
 use syn::{parse::Nothing, parse_macro_input, DeriveInput};
Diff in /Users/vidurmodgil/Desktop/Data/pyo3/pyo3-macros/src/lib.rs at line 168:
     let clause_wrapped = ast.generics.where_clause.clone();
     let mut where_clause = String::new();
     let generic_params = parse_generics(&ast.generics);
[31m-    let generics = &ast.generics.into_token_stream().to_string().replace(" ", "");
(B[m[32m+    let generics = &ast
(B[m[32m+        .generics
(B[m[32m+        .into_token_stream()
(B[m[32m+        .to_string()
(B[m[32m+        .replace(" ", "");
(B[m 
     if let Some(clause) = clause_wrapped {
         where_clause = clause.into_token_stream().to_string();
Diff in /Users/vidurmodgil/Desktop/Data/pyo3/pyo3-macros/src/lib.rs at line 179:
         dict_fields += parse_macro_input!(token_stream as Pyo3Collection);
     }
     let body = build_derive_into_pydict(dict_fields).to_string();
[31m-    let out =  format!("
(B[m[32m+    let out = format!(
(B[m[32m+        "
(B[m         impl{} IntoPyDict for {}{} {} {{
             fn into_py_dict(self, py: pyo3::Python<'_>) -> &PyDict {{
                 {}
Diff in /Users/vidurmodgil/Desktop/Data/pyo3/pyo3-macros/src/lib.rs at line 186:
             }}
[31m-        }}", generics, ident, generic_params, where_clause, body);
(B[m[32m+        }}",
(B[m[32m+        generics, ident, generic_params, where_clause, body
(B[m[32m+    );
(B[m     return out.parse().unwrap();
 }
 
Diff in /Users/vidurmodgil/Desktop/Data/pyo3/pyo3-macros-backend/src/intopydict.rs at line 1:
[31m-
(B[m use std::ops::AddAssign;
 
 use proc_macro2::TokenStream;
Diff in /Users/vidurmodgil/Desktop/Data/pyo3/pyo3-macros-backend/src/intopydict.rs at line 5:
[31m-use syn::{parse::{ParseStream, Parse}, Generics};
(B[m[32m+use syn::{
(B[m[32m+    parse::{Parse, ParseStream},
(B[m[32m+    Generics,
(B[m[32m+};
(B[m 
[31m-const SINGLE_COL: [&str; 6] = ["BTreeSet", "BinaryHeap", "Vec", "HashSet", "LinkedList", "VecDeque"];
(B[m[32m+const SINGLE_COL: [&str; 6] = [
(B[m[32m+    "BTreeSet",
(B[m[32m+    "BinaryHeap",
(B[m[32m+    "Vec",
(B[m[32m+    "HashSet",
(B[m[32m+    "LinkedList",
(B[m[32m+    "VecDeque",
(B[m[32m+];
(B[m 
 #[derive(Debug, Clone)]
 enum Pyo3Type {
Diff in /Users/vidurmodgil/Desktop/Data/pyo3/pyo3-macros-backend/src/intopydict.rs at line 11:
     Primitive,
     NonPrimitive,
     CollectionSing(Box<crate::intopydict::Pyo3Type>),
[31m-    Map(Box<crate::intopydict::Pyo3Type>, Box<crate::intopydict::Pyo3Type>),
(B[m[32m+    Map(
(B[m[32m+        Box<crate::intopydict::Pyo3Type>,
(B[m[32m+        Box<crate::intopydict::Pyo3Type>,
(B[m[32m+    ),
(B[m }
 
[31m-
(B[m #[derive(Debug, Clone)]
 pub struct Pyo3DictField {
     name: String,
Diff in /Users/vidurmodgil/Desktop/Data/pyo3/pyo3-macros-backend/src/intopydict.rs at line 21:
[31m-    attr_type: Pyo3Type
(B[m[32m+    attr_type: Pyo3Type,
(B[m }
 
 impl Pyo3DictField {
Diff in /Users/vidurmodgil/Desktop/Data/pyo3/pyo3-macros-backend/src/intopydict.rs at line 25:
[31m-    pub fn new(name: String, type_: &str) -> Self { Self { name, attr_type: Self::check_primitive(&type_) } }
(B[m[32m+    pub fn new(name: String, type_: &str) -> Self {
(B[m[32m+        Self {
(B[m[32m+            name,
(B[m[32m+            attr_type: Self::check_primitive(&type_),
(B[m[32m+        }
(B[m[32m+    }
(B[m 
[31m-    fn check_primitive(attr_type: &str) -> Pyo3Type{
(B[m[32m+    fn check_primitive(attr_type: &str) -> Pyo3Type {
(B[m         for collection in SINGLE_COL {
             if attr_type.starts_with(collection) {
                 let attr_list: Vec<&str> = attr_type.split(['<', '>']).into_iter().collect();
Diff in /Users/vidurmodgil/Desktop/Data/pyo3/pyo3-macros-backend/src/intopydict.rs at line 35:
         }
 
         match attr_type {
[31m-            "i8" | "i16" | "i32" | "i64" | "i128" | "isize" | "u8" | "u16" | "u32" | "u64" | "u128" | "usize" | "f32" | "f64" | "char" | "bool" | "&str" | "String" => return Pyo3Type::Primitive,
(B[m[31m-            _ => return  Pyo3Type::NonPrimitive,
(B[m[32m+            "i8" | "i16" | "i32" | "i64" | "i128" | "isize" | "u8" | "u16" | "u32" | "u64"
(B[m[32m+            | "u128" | "usize" | "f32" | "f64" | "char" | "bool" | "&str" | "String" => {
(B[m[32m+                return Pyo3Type::Primitive
(B[m[32m+            }
(B[m[32m+            _ => return Pyo3Type::NonPrimitive,
(B[m         }
     }
 
Diff in /Users/vidurmodgil/Desktop/Data/pyo3/pyo3-macros-backend/src/intopydict.rs at line 43:
     fn handle_collection(attr_type: &[&str]) -> Pyo3Type {
         match attr_type[0] {
[31m-            "BTreeSet" | "BinaryHeap" | "Vec" | "HashSet" | "LinkedList" | "VecDeque" => return Pyo3Type::CollectionSing(Box::new(Self::handle_collection(&attr_type[1..]))), 
(B[m[32m+            "BTreeSet" | "BinaryHeap" | "Vec" | "HashSet" | "LinkedList" | "VecDeque" => {
(B[m[32m+                return Pyo3Type::CollectionSing(Box::new(Self::handle_collection(&attr_type[1..])))
(B[m[32m+            }
(B[m             "BTreeMap" | "HashMap" => {
                 let join = &attr_type.join("<");
                 let types: Vec<&str> = join.split(",").collect();
Diff in /Users/vidurmodgil/Desktop/Data/pyo3/pyo3-macros-backend/src/intopydict.rs at line 49:
                 let key: Vec<&str> = types[0].split("<").collect();
                 let val: Vec<&str> = types[1].split("<").collect();
[31m-                let map = Pyo3Type::Map(Box::new(Self::handle_collection(&key)), Box::new(Self::handle_collection(&val)));
(B[m[32m+                let map = Pyo3Type::Map(
(B[m[32m+                    Box::new(Self::handle_collection(&key)),
(B[m[32m+                    Box::new(Self::handle_collection(&val)),
(B[m[32m+                );
(B[m                 panic!("{:?}", map);
                 return map;
[31m-            },
(B[m[31m-            "i8" | "i16" | "i32" | "i64" | "i128" | "isize" | "u8" | "u16" | "u32" | "u64" | "u128" | "usize" | "f32" | "f64" | "char" | "bool" | "&str" | "String" => return Pyo3Type::Primitive,
(B[m[31m-            _ => return Pyo3Type::NonPrimitive
(B[m[32m+            }
(B[m[32m+            "i8" | "i16" | "i32" | "i64" | "i128" | "isize" | "u8" | "u16" | "u32" | "u64"
(B[m[32m+            | "u128" | "usize" | "f32" | "f64" | "char" | "bool" | "&str" | "String" => {
(B[m[32m+                return Pyo3Type::Primitive
(B[m[32m+            }
(B[m[32m+            _ => return Pyo3Type::NonPrimitive,
(B[m         }
     }
 }
Diff in /Users/vidurmodgil/Desktop/Data/pyo3/pyo3-macros-backend/src/intopydict.rs at line 61:
 impl Parse for Pyo3Collection {
     fn parse(input: ParseStream<'_>) -> syn::Result<Self> {
         let tok_stream: TokenStream = input.parse()?;
[31m-        let binding = tok_stream.to_string().as_str().replace(" ", "").replace("{", "").replace("}", "");
(B[m[32m+        let binding = tok_stream
(B[m[32m+            .to_string()
(B[m[32m+            .as_str()
(B[m[32m+            .replace(" ", "")
(B[m[32m+            .replace("{", "")
(B[m[32m+            .replace("}", "");
(B[m 
         let tok_split: Vec<&str> = binding.split(",").collect();
 
Diff in /Users/vidurmodgil/Desktop/Data/pyo3/pyo3-macros-backend/src/intopydict.rs at line 68:
[31m-        if tok_split.len() <= 1{
(B[m[31m-            return Ok(Pyo3Collection(Vec::new()))
(B[m[32m+        if tok_split.len() <= 1 {
(B[m[32m+            return Ok(Pyo3Collection(Vec::new()));
(B[m         }
 
         let mut field_collection: Vec<Pyo3DictField> = Vec::new();
Diff in /Users/vidurmodgil/Desktop/Data/pyo3/pyo3-macros-backend/src/intopydict.rs at line 73:
[31m-        
(B[m[32m+
(B[m         for i in tok_split.iter() {
             let tok_params_unparsed = &i.to_string();
             let tok_bind: Vec<&str> = tok_params_unparsed.split(":").collect();
Diff in /Users/vidurmodgil/Desktop/Data/pyo3/pyo3-macros-backend/src/intopydict.rs at line 92:
     }
 }
 
[31m-pub fn build_derive_into_pydict(dict_fields: Pyo3Collection) -> TokenStream  {
(B[m[32m+pub fn build_derive_into_pydict(dict_fields: Pyo3Collection) -> TokenStream {
(B[m     let mut body: String = String::from("let mut pydict = PyDict::new(py);\n");
 
     for field in dict_fields.0.iter() {
Diff in /Users/vidurmodgil/Desktop/Data/pyo3/pyo3-macros-backend/src/intopydict.rs at line 99:
         let ident = &field.name;
         match field.attr_type {
             Pyo3Type::Primitive => {
[31m-                body += &format!("pydict.set_item(\"{}\", self.{}).expect(\"Bad element in set_item\");", ident, ident);
(B[m[31m-            },
(B[m[32m+                body += &format!(
(B[m[32m+                    "pydict.set_item(\"{}\", self.{}).expect(\"Bad element in set_item\");",
(B[m[32m+                    ident, ident
(B[m[32m+                );
(B[m[32m+            }
(B[m             Pyo3Type::NonPrimitive => {
                 body += &format!("pydict.set_item(\"{}\", self.{}.into_py_dict(py)).expect(\"Bad element in set_item\");\n", ident, ident);
[31m-            },
(B[m[32m+            }
(B[m             Pyo3Type::CollectionSing(ref collection) => {
                 let non_class_ident = ident.replace(".", "_");
[31m-                body += &handle_single_collection_code_gen(collection, &format!("self.{}", ident), &non_class_ident, 0);
(B[m[31m-                body += &format!("pydict.set_item(\"{}\", pylist0{}).expect(\"Bad element in set_item\");\n", ident, ident)
(B[m[31m-            },
(B[m[32m+                body += &handle_single_collection_code_gen(
(B[m[32m+                    collection,
(B[m[32m+                    &format!("self.{}", ident),
(B[m[32m+                    &non_class_ident,
(B[m[32m+                    0,
(B[m[32m+                );
(B[m[32m+                body += &format!(
(B[m[32m+                    "pydict.set_item(\"{}\", pylist0{}).expect(\"Bad element in set_item\");\n",
(B[m[32m+                    ident, ident
(B[m[32m+                )
(B[m[32m+            }
(B[m             Pyo3Type::Map(ref key, ref val) => {
                 if let Pyo3Type::NonPrimitive = key.as_ref() {
                     panic!("Key must be a primitive type to be derived into a dict. If you want to use non primitive as a dict key, use a custom implementation");
Diff in /Users/vidurmodgil/Desktop/Data/pyo3/pyo3-macros-backend/src/intopydict.rs at line 128:
     return body.parse().unwrap();
 }
 
[31m-fn handle_single_collection_code_gen(py_type: &Pyo3Type, ident: &str, non_class_ident: &str, counter: usize) -> String {
(B[m[32m+fn handle_single_collection_code_gen(
(B[m[32m+    py_type: &Pyo3Type,
(B[m[32m+    ident: &str,
(B[m[32m+    non_class_ident: &str,
(B[m[32m+    counter: usize,
(B[m[32m+) -> String {
(B[m     match py_type {
[31m-        Pyo3Type::Primitive => return format!("
(B[m[32m+        Pyo3Type::Primitive => {
(B[m[32m+            return format!(
(B[m[32m+                "
(B[m             let mut pylist{}{} = pyo3::types::PyList::empty(py);
             for i in {}.into_iter() {{
                 pylist{}{}.append(i).expect(\"Bad element in set_item\");
Diff in /Users/vidurmodgil/Desktop/Data/pyo3/pyo3-macros-backend/src/intopydict.rs at line 137:
             }};
[31m-        ", counter, non_class_ident, ident, counter, non_class_ident),
(B[m[31m-        Pyo3Type::NonPrimitive => return format!("
(B[m[32m+        ",
(B[m[32m+                counter, non_class_ident, ident, counter, non_class_ident
(B[m[32m+            )
(B[m[32m+        }
(B[m[32m+        Pyo3Type::NonPrimitive => {
(B[m[32m+            return format!(
(B[m[32m+                "
(B[m         let mut pylist{}{} = pyo3::types::PyList::empty(py);
         for i in {}.into_iter() {{
             pylist{}{}.append(i.into_py_dict(py)).expect(\"Bad element in set_item\");
Diff in /Users/vidurmodgil/Desktop/Data/pyo3/pyo3-macros-backend/src/intopydict.rs at line 143:
         }};
[31m-    ", counter, non_class_ident, ident, counter, non_class_ident),
(B[m[32m+    ",
(B[m[32m+                counter, non_class_ident, ident, counter, non_class_ident
(B[m[32m+            )
(B[m[32m+        }
(B[m         Pyo3Type::CollectionSing(coll) => {
[31m-            let out = format!("
(B[m[32m+            let out = format!(
(B[m[32m+                "
(B[m                 let mut pylist{}{} = pyo3::types::PyList::empty(py);
                 for i in {} .into_iter(){{
                     {}
Diff in /Users/vidurmodgil/Desktop/Data/pyo3/pyo3-macros-backend/src/intopydict.rs at line 150:
                     pylist{}{}.append(pylist{}{}).expect(\"Bad element in set_item\");
                 }};
[31m-            ", counter, non_class_ident, ident, handle_single_collection_code_gen(coll.as_ref(), "i", non_class_ident, counter + 1), counter, non_class_ident, counter + 1, non_class_ident);
(B[m[32m+            ",
(B[m[32m+                counter,
(B[m[32m+                non_class_ident,
(B[m[32m+                ident,
(B[m[32m+                handle_single_collection_code_gen(coll.as_ref(), "i", non_class_ident, counter + 1),
(B[m[32m+                counter,
(B[m[32m+                non_class_ident,
(B[m[32m+                counter + 1,
(B[m[32m+                non_class_ident
(B[m[32m+            );
(B[m             return out;
[31m-        },
(B[m[32m+        }
(B[m         Pyo3Type::Map(_, _) => todo!(),
     }
 }
Diff in /Users/vidurmodgil/Desktop/Data/pyo3/pyo3-macros-backend/src/intopydict.rs at line 162:
 
         for param in &generics.params {
             match param {
[31m-                syn::GenericParam::Lifetime(lt) => generics_parsed += ("'".to_string() + &lt.lifetime.ident.to_string()).as_str(),
(B[m[31m-                syn::GenericParam::Type(generic_type) => generics_parsed += generic_type.ident.to_string().as_str(),
(B[m[31m-                syn::GenericParam::Const(const_type) => generics_parsed += ("const".to_string() + const_type.ident.to_string().as_str()).as_str(),
(B[m[32m+                syn::GenericParam::Lifetime(lt) => {
(B[m[32m+                    generics_parsed += ("'".to_string() + &lt.lifetime.ident.to_string()).as_str()
(B[m[32m+                }
(B[m[32m+                syn::GenericParam::Type(generic_type) => {
(B[m[32m+                    generics_parsed += generic_type.ident.to_string().as_str()
(B[m[32m+                }
(B[m[32m+                syn::GenericParam::Const(const_type) => {
(B[m[32m+                    generics_parsed +=
(B[m[32m+                        ("const".to_string() + const_type.ident.to_string().as_str()).as_str()
(B[m[32m+                }
(B[m             }
 
             generics_parsed += ",";
Diff in /Users/vidurmodgil/Desktop/Data/pyo3/pyo3-macros-backend/src/intopydict.rs at line 177:
         return String::new();
     }
 }
[32m+
(B[mDiff in /Users/vidurmodgil/Desktop/Data/pyo3/pyo3-macros-backend/src/lib.rs at line 11:
 mod attributes;
 mod deprecations;
 mod frompyobject;
[32m+mod intopydict;
(B[m mod konst;
 mod method;
 mod module;
Diff in /Users/vidurmodgil/Desktop/Data/pyo3/pyo3-macros-backend/src/lib.rs at line 19:
 mod pyfunction;
 mod pyimpl;
 mod pymethod;
[31m-mod intopydict;
(B[m 
 pub use frompyobject::build_derive_from_pyobject;
[32m+pub use intopydict::{build_derive_into_pydict, parse_generics, Pyo3Collection};
(B[m pub use module::{process_functions_in_module, pymodule_impl, PyModuleOptions};
 pub use pyclass::{build_py_class, build_py_enum, PyClassArgs};
 pub use pyfunction::{build_py_function, PyFunctionOptions};
Diff in /Users/vidurmodgil/Desktop/Data/pyo3/pyo3-macros-backend/src/lib.rs at line 28:
 pub use pyimpl::{build_py_methods, PyClassMethodsType};
 pub use utils::get_doc;
[31m-pub use intopydict::{build_derive_into_pydict, parse_generics, Pyo3Collection};
(B[m 
Diff in /Users/vidurmodgil/Desktop/Data/pyo3/tests/test_intopydict.rs at line 1:
[31m-use pyo3::{types::{PyDict, IntoPyDict}, Python};
(B[m[32m+use pyo3::{
(B[m[32m+    types::{IntoPyDict, PyDict},
(B[m[32m+    Python,
(B[m[32m+};
(B[m use pyo3_macros::IntoPyDict;
 
 pub trait TestTrait<'a> {}
Diff in /Users/vidurmodgil/Desktop/Data/pyo3/tests/test_intopydict.rs at line 30:
         assert_eq!(h, 9);
     });
 }
[32m+
(B[m   Compiling autocfg v1.1.0
   Compiling target-lexicon v0.12.10
   Compiling once_cell v1.18.0
   Compiling proc-macro2 v1.0.66
   Compiling unicode-ident v1.0.11
   Compiling libm v0.2.7
   Compiling libc v0.2.147
    Checking cfg-if v1.0.0
   Compiling version_check v0.9.4
   Compiling parking_lot_core v0.9.8
   Compiling serde v1.0.175
   Compiling eyre v0.6.8
   Compiling rust_decimal v1.30.0
   Compiling num-traits v0.2.16
   Compiling ahash v0.8.3
   Compiling num-integer v0.1.45
   Compiling lock_api v0.4.10
   Compiling num-bigint v0.4.3
   Compiling memoffset v0.9.0
    Checking allocator-api2 v0.2.16
    Checking scopeguard v1.2.0
    Checking smallvec v1.11.0
   Compiling quote v1.0.32
    Checking core-foundation-sys v0.8.4
   Compiling anyhow v1.0.72
   Compiling syn v2.0.27
   Compiling pyo3-build-config v0.19.1 (/Users/vidurmodgil/Desktop/Data/pyo3/pyo3-build-config)
    Checking iana-time-zone v0.1.57
    Checking hashbrown v0.14.0
    Checking time v0.1.45
    Checking indenter v0.3.3
    Checking equivalent v1.0.1
    Checking arrayvec v0.7.4
    Checking parking_lot v0.12.1
   Compiling indoc v2.0.3
    Checking unindent v0.2.2
    Checking indexmap v2.0.0
    Checking num-complex v0.4.3
    Checking chrono v0.4.26
 Documenting pyo3-build-config v0.19.1 (/Users/vidurmodgil/Desktop/Data/pyo3/pyo3-build-config)
   Compiling pyo3-ffi v0.19.1 (/Users/vidurmodgil/Desktop/Data/pyo3/pyo3-ffi)
   Compiling pyo3 v0.19.1 (/Users/vidurmodgil/Desktop/Data/pyo3)
   Compiling pyo3-pytests v0.1.0 (/Users/vidurmodgil/Desktop/Data/pyo3/pytests)
 Documenting pyo3-ffi v0.19.1 (/Users/vidurmodgil/Desktop/Data/pyo3/pyo3-ffi)
   Compiling pyo3-macros-backend v0.19.1 (/Users/vidurmodgil/Desktop/Data/pyo3/pyo3-macros-backend)
warning: unreachable statement
  --> pyo3-macros-backend/src/intopydict.rs:53:17
   |
52 |                 panic!("{:?}", map);
   |                 ------------------- any code following this expression is unreachable
53 |                 return map;
   |                 ^^^^^^^^^^^ unreachable statement
   |
   = note: `#[warn(unreachable_code)]` on by default

   Compiling serde_derive v1.0.175
warning: `pyo3-macros-backend` (lib) generated 1 warning
   Compiling pyo3-macros v0.19.1 (/Users/vidurmodgil/Desktop/Data/pyo3/pyo3-macros)
 Documenting pyo3 v0.19.1 (/Users/vidurmodgil/Desktop/Data/pyo3)
 Documenting pyo3-pytests v0.1.0 (/Users/vidurmodgil/Desktop/Data/pyo3/pytests)
    Finished dev [unoptimized + debuginfo] target(s) in 6.59s
